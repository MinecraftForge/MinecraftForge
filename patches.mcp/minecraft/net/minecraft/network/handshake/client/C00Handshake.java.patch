--- ../src-base/minecraft/net/minecraft/network/handshake/client/C00Handshake.java
+++ ../src-work/minecraft/net/minecraft/network/handshake/client/C00Handshake.java
@@ -14,6 +14,7 @@
     private String ip;
     private int port;
     private EnumConnectionState requestedState;
+    private boolean hasFMLMarker = false;
 
     public C00Handshake()
     {
@@ -28,18 +29,26 @@
         this.requestedState = requestedState;
     }
 
+    public C00Handshake(int protocol, String address, int port, EnumConnectionState state, boolean addFMLMarker)
+    {
+        this(protocol, address, port, state);
+        this.hasFMLMarker = addFMLMarker;
+    }
+
     public void readPacketData(PacketBuffer buf) throws IOException
     {
         this.protocolVersion = buf.readVarIntFromBuffer();
         this.ip = buf.readStringFromBuffer(255);
         this.port = buf.readUnsignedShort();
         this.requestedState = EnumConnectionState.getById(buf.readVarIntFromBuffer());
+        this.hasFMLMarker = this.ip.contains("\0FML\0");
+        this.ip = this.ip.split("\0")[0];
     }
 
     public void writePacketData(PacketBuffer buf) throws IOException
     {
         buf.writeVarIntToBuffer(this.protocolVersion);
-        buf.writeString(this.ip);
+        buf.writeString(this.ip + "\0FML\0");
         buf.writeShort(this.port);
         buf.writeVarIntToBuffer(this.requestedState.getId());
     }
@@ -58,4 +67,9 @@
     {
         return this.protocolVersion;
     }
+
+    public boolean hasFMLMarker()
+    {
+        return this.hasFMLMarker;
+    }
 }
