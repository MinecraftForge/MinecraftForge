--- ../src-base/minecraft/net/minecraft/util/WeightedRandomChestContent.java
+++ ../src-work/minecraft/net/minecraft/util/WeightedRandomChestContent.java
@@ -20,11 +20,29 @@
         this.maxStackSize = maximumChance;
     }
 
+    // -- Forge hooks
+    /**
+     * Allow a mod to submit a custom implementation that can delegate item stack generation beyond simple stack lookup
+     *
+     * @param random The current random for generation
+     * @param newInventory The inventory being generated (do not populate it, but you can refer to it)
+     * @return An array of {@link ItemStack} to put into the chest
+     */
+    @Deprecated // New loottable system shouldn't need this. Need to research more.
+    protected ItemStack[] generateChestContent(Random random, net.minecraft.inventory.IInventory newInventory)
+    {
+        return net.minecraftforge.common.ChestGenHooks.generateStacks(random, theItemId, minStackSize, maxStackSize);
+    }
+
     public static void generateDispenserContents(Random random, List<WeightedRandomChestContent> listIn, TileEntityDispenser dispenser, int max)
     {
         for (int i = 0; i < max; ++i)
         {
             WeightedRandomChestContent weightedrandomchestcontent = (WeightedRandomChestContent)WeightedRandom.getRandomItem(random, listIn);
+            ItemStack[] stacks = weightedrandomchestcontent.generateChestContent(random, dispenser);
+            for (ItemStack stack : stacks)
+                dispenser.setInventorySlotContents(random.nextInt(dispenser.getSizeInventory()), stack);
+            if (true) continue; // Forge: Skip the rest we replace it.
             int j = weightedrandomchestcontent.minStackSize + random.nextInt(weightedrandomchestcontent.maxStackSize - weightedrandomchestcontent.minStackSize + 1);
 
             if (weightedrandomchestcontent.theItemId.getMaxStackSize() >= j)
