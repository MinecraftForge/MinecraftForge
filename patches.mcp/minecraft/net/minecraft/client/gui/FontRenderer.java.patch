--- ../src-base/minecraft/net/minecraft/client/gui/FontRenderer.java
+++ ../src-work/minecraft/net/minecraft/client/gui/FontRenderer.java
@@ -57,7 +57,7 @@
         this.locationFontTexture = p_i1035_2_;
         this.renderEngine = p_i1035_3_;
         this.unicodeFlag = p_i1035_4_;
-        p_i1035_3_.bindTexture(this.locationFontTexture);
+        bindTexture(this.locationFontTexture);
 
         for (int i = 0; i < 32; ++i)
         {
@@ -97,6 +97,7 @@
     public void onResourceManagerReload(IResourceManager resourceManager)
     {
         this.readFontTexture();
+        this.readGlyphSizes();
     }
 
     private void readFontTexture()
@@ -105,7 +106,7 @@
 
         try
         {
-            bufferedimage = TextureUtil.readBufferedImage(Minecraft.getMinecraft().getResourceManager().getResource(this.locationFontTexture).getInputStream());
+            bufferedimage = TextureUtil.readBufferedImage(getResourceInputStream(this.locationFontTexture));
         }
         catch (IOException ioexception)
         {
@@ -172,7 +173,7 @@
 
         try
         {
-            inputstream = Minecraft.getMinecraft().getResourceManager().getResource(new ResourceLocation("font/glyph_sizes.bin")).getInputStream();
+            inputstream = getResourceInputStream(new ResourceLocation("font/glyph_sizes.bin"));
             inputstream.read(this.glyphWidth);
         }
         catch (IOException ioexception)
@@ -195,7 +196,7 @@
         float f = (float)(p_78266_1_ % 16 * 8);
         float f1 = (float)(p_78266_1_ / 16 * 8);
         float f2 = p_78266_2_ ? 1.0F : 0.0F;
-        this.renderEngine.bindTexture(this.locationFontTexture);
+        bindTexture(this.locationFontTexture);
         float f3 = (float)this.charWidth[p_78266_1_] - 0.01F;
         GL11.glBegin(GL11.GL_TRIANGLE_STRIP);
         GL11.glTexCoord2f(f / 128.0F, f1 / 128.0F);
@@ -222,7 +223,7 @@
 
     private void loadGlyphTexture(int p_78257_1_)
     {
-        this.renderEngine.bindTexture(this.getUnicodePageLocation(p_78257_1_));
+        bindTexture(this.getUnicodePageLocation(p_78257_1_));
     }
 
     protected float renderUnicodeChar(char p_78277_1_, boolean p_78277_2_)
@@ -269,7 +270,7 @@
 
     public int drawString(String p_175065_1_, float p_175065_2_, float p_175065_3_, int p_175065_4_, boolean p_175065_5_)
     {
-        GlStateManager.enableAlpha();
+        enableAlpha();
         this.resetStyles();
         int j;
 
@@ -341,7 +342,7 @@
 
                     k = this.colorCode[j];
                     this.textColor = k;
-                    GlStateManager.color((float)(k >> 16) / 255.0F, (float)(k >> 8 & 255) / 255.0F, (float)(k & 255) / 255.0F, this.alpha);
+                    setColor((float)(k >> 16) / 255.0F, (float)(k >> 8 & 255) / 255.0F, (float)(k & 255) / 255.0F, this.alpha);
                 }
                 else if (j == 16)
                 {
@@ -370,7 +371,7 @@
                     this.strikethroughStyle = false;
                     this.underlineStyle = false;
                     this.italicStyle = false;
-                    GlStateManager.color(this.red, this.blue, this.green, this.alpha);
+                    setColor(this.red, this.blue, this.green, this.alpha);
                 }
 
                 ++i;
@@ -390,7 +391,7 @@
                     j = k;
                 }
 
-                float f1 = this.unicodeFlag ? 0.5F : 1.0F;
+                float f1 = getCharWidth(c0) / 32f;
                 boolean flag1 = (c0 == 0 || j == -1 || this.unicodeFlag) && p_78255_2_;
 
                 if (flag1)
@@ -429,6 +430,15 @@
                     ++f;
                 }
 
+                doDraw(f);
+            }
+        }
+    }
+
+    protected void doDraw(float f)
+    {
+        {
+            {
                 Tessellator tessellator;
                 WorldRenderer worldrenderer;
 
@@ -504,7 +514,7 @@
             this.blue = (float)(p_180455_4_ >> 8 & 255) / 255.0F;
             this.green = (float)(p_180455_4_ & 255) / 255.0F;
             this.alpha = (float)(p_180455_4_ >> 24 & 255) / 255.0F;
-            GlStateManager.color(this.red, this.blue, this.green, this.alpha);
+            setColor(this.red, this.blue, this.green, this.alpha);
             this.posX = p_180455_2_;
             this.posY = p_180455_3_;
             this.renderStringAtPos(p_180455_1_, p_180455_5_);
@@ -583,11 +593,6 @@
                 int j = this.glyphWidth[p_78263_1_] >>> 4;
                 int k = this.glyphWidth[p_78263_1_] & 15;
 
-                if (k > 7)
-                {
-                    k = 15;
-                    j = 0;
-                }
 
                 ++k;
                 return (k - j) / 2 + 1;
@@ -842,6 +847,26 @@
         return this.bidiFlag;
     }
 
+    protected void setColor(float r, float g, float b, float a)
+    {
+        GlStateManager.color(r,g,b,a);
+    }
+
+    protected void enableAlpha()
+    {
+        GlStateManager.enableAlpha();
+    }
+
+    protected void bindTexture(ResourceLocation location)
+    {
+        renderEngine.bindTexture(location);
+    }
+
+    protected InputStream getResourceInputStream(ResourceLocation location) throws IOException
+    {
+        return Minecraft.getMinecraft().getResourceManager().getResource(location).getInputStream();
+    }
+
     public int getColorCode(char p_175064_1_)
     {
         return this.colorCode["0123456789abcdef".indexOf(p_175064_1_)];
