--- ../src-base/minecraft/net/minecraft/client/renderer/WorldVertexBufferUploader.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/WorldVertexBufferUploader.java
@@ -29,35 +29,9 @@
 
             while (iterator.hasNext())
             {
+                // moved to VertexFormatElement.preDraw
                 vertexformatelement = (VertexFormatElement)iterator.next();
-                enumusage = vertexformatelement.getUsage();
-                k = vertexformatelement.getType().getGlConstant();
-                int l = vertexformatelement.getIndex();
-
-                switch (WorldVertexBufferUploader.SwitchEnumUsage.VALUES[enumusage.ordinal()])
-                {
-                    case 1:
-                        bytebuffer.position(vertexformatelement.getOffset());
-                        GL11.glVertexPointer(vertexformatelement.getElementCount(), k, j, bytebuffer);
-                        GL11.glEnableClientState(GL11.GL_VERTEX_ARRAY);
-                        break;
-                    case 2:
-                        bytebuffer.position(vertexformatelement.getOffset());
-                        OpenGlHelper.setClientActiveTexture(OpenGlHelper.defaultTexUnit + l);
-                        GL11.glTexCoordPointer(vertexformatelement.getElementCount(), k, j, bytebuffer);
-                        GL11.glEnableClientState(GL11.GL_TEXTURE_COORD_ARRAY);
-                        OpenGlHelper.setClientActiveTexture(OpenGlHelper.defaultTexUnit);
-                        break;
-                    case 3:
-                        bytebuffer.position(vertexformatelement.getOffset());
-                        GL11.glColorPointer(vertexformatelement.getElementCount(), k, j, bytebuffer);
-                        GL11.glEnableClientState(GL11.GL_COLOR_ARRAY);
-                        break;
-                    case 4:
-                        bytebuffer.position(vertexformatelement.getOffset());
-                        GL11.glNormalPointer(k, j, bytebuffer);
-                        GL11.glEnableClientState(GL11.GL_NORMAL_ARRAY);
-                }
+                vertexformatelement.getUsage().preDraw(vertexformatelement, j, bytebuffer);
             }
 
             GL11.glDrawArrays(p_178177_1_.getDrawMode(), 0, p_178177_1_.getVertexCount());
@@ -65,27 +39,9 @@
 
             while (iterator.hasNext())
             {
+             // moved to VertexFormatElement.postDraw
                 vertexformatelement = (VertexFormatElement)iterator.next();
-                enumusage = vertexformatelement.getUsage();
-                k = vertexformatelement.getIndex();
-
-                switch (WorldVertexBufferUploader.SwitchEnumUsage.VALUES[enumusage.ordinal()])
-                {
-                    case 1:
-                        GL11.glDisableClientState(GL11.GL_VERTEX_ARRAY);
-                        break;
-                    case 2:
-                        OpenGlHelper.setClientActiveTexture(OpenGlHelper.defaultTexUnit + k);
-                        GL11.glDisableClientState(GL11.GL_TEXTURE_COORD_ARRAY);
-                        OpenGlHelper.setClientActiveTexture(OpenGlHelper.defaultTexUnit);
-                        break;
-                    case 3:
-                        GL11.glDisableClientState(GL11.GL_COLOR_ARRAY);
-                        GlStateManager.resetColor();
-                        break;
-                    case 4:
-                        GL11.glDisableClientState(GL11.GL_NORMAL_ARRAY);
-                }
+                vertexformatelement.getUsage().postDraw(vertexformatelement, j, bytebuffer);
             }
         }
 
