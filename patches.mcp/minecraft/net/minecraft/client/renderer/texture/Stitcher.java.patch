--- ../src-base/minecraft/net/minecraft/client/renderer/texture/Stitcher.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/texture/Stitcher.java
@@ -56,18 +56,24 @@
     {
         Stitcher.Holder[] astitcher$holder = (Stitcher.Holder[])this.setStitchHolders.toArray(new Stitcher.Holder[this.setStitchHolders.size()]);
         Arrays.sort((Object[])astitcher$holder);
+        net.minecraftforge.fml.common.ProgressManager.ProgressBar bar = net.minecraftforge.fml.common.ProgressManager.push("Texture stitching", astitcher$holder.length);
 
         for (Stitcher.Holder stitcher$holder : astitcher$holder)
         {
+            bar.step(stitcher$holder.getAtlasSprite().getIconName());
             if (!this.allocateSlot(stitcher$holder))
             {
                 String s = String.format("Unable to fit: %s - size: %dx%d - Maybe try a lowerresolution resourcepack?", new Object[] {stitcher$holder.getAtlasSprite().getIconName(), Integer.valueOf(stitcher$holder.getAtlasSprite().getIconWidth()), Integer.valueOf(stitcher$holder.getAtlasSprite().getIconHeight())});
+                net.minecraftforge.fml.common.FMLLog.info(s);
+                for (Stitcher.Holder h : astitcher$holder)
+                    net.minecraftforge.fml.common.FMLLog.info("  %s", h);
                 throw new StitcherException(stitcher$holder, s);
             }
         }
 
         this.currentWidth = MathHelper.roundUpToPowerOfTwo(this.currentWidth);
         this.currentHeight = MathHelper.roundUpToPowerOfTwo(this.currentHeight);
+        net.minecraftforge.fml.common.ProgressManager.pop(bar);
     }
 
     public List<TextureAtlasSprite> getStichSlots()
@@ -238,7 +244,7 @@
 
             public String toString()
             {
-                return "Holder{width=" + this.width + ", height=" + this.height + '}';
+                return "Holder{width=" + this.width + ", height=" + this.height + ", name=" + this.theTexture.getIconName() + '}';
             }
 
             public int compareTo(Stitcher.Holder p_compareTo_1_)
