--- ../src-base/minecraft/net/minecraft/world/gen/layer/GenLayerBiome.java
+++ ../src-work/minecraft/net/minecraft/world/gen/layer/GenLayerBiome.java
@@ -3,28 +3,49 @@
 import net.minecraft.world.WorldType;
 import net.minecraft.world.biome.BiomeGenBase;
 import net.minecraft.world.gen.ChunkProviderSettings;
+import java.util.ArrayList;
+import java.util.List;
+import net.minecraft.util.WeightedRandom;
+import net.minecraftforge.common.BiomeManager;
+import net.minecraftforge.common.BiomeManager.BiomeEntry;
+import static net.minecraftforge.common.BiomeManager.BiomeType.*;
 
 public class GenLayerBiome extends GenLayer
 {
-    private BiomeGenBase[] field_151623_c;
-    private BiomeGenBase[] field_151621_d;
-    private BiomeGenBase[] field_151622_e;
-    private BiomeGenBase[] field_151620_f;
+    private List<BiomeEntry>[] biomes = new ArrayList[BiomeManager.BiomeType.values().length];
+
     private final ChunkProviderSettings field_175973_g;
     private static final String __OBFID = "CL_00000555";
 
     public GenLayerBiome(long p_i45560_1_, GenLayer p_i45560_3_, WorldType p_i45560_4_, String p_i45560_5_)
     {
         super(p_i45560_1_);
-        this.field_151623_c = new BiomeGenBase[] {BiomeGenBase.desert, BiomeGenBase.desert, BiomeGenBase.desert, BiomeGenBase.savanna, BiomeGenBase.savanna, BiomeGenBase.plains};
-        this.field_151621_d = new BiomeGenBase[] {BiomeGenBase.forest, BiomeGenBase.roofedForest, BiomeGenBase.extremeHills, BiomeGenBase.plains, BiomeGenBase.birchForest, BiomeGenBase.swampland};
-        this.field_151622_e = new BiomeGenBase[] {BiomeGenBase.forest, BiomeGenBase.extremeHills, BiomeGenBase.taiga, BiomeGenBase.plains};
-        this.field_151620_f = new BiomeGenBase[] {BiomeGenBase.icePlains, BiomeGenBase.icePlains, BiomeGenBase.icePlains, BiomeGenBase.coldTaiga};
         this.parent = p_i45560_3_;
 
+        for (BiomeManager.BiomeType type : BiomeManager.BiomeType.values())
+        {
+            com.google.common.collect.ImmutableList<BiomeEntry> biomesToAdd = BiomeManager.getBiomes(type);
+            int idx = type.ordinal();
+
+            if (biomes[idx] == null) biomes[idx] = new ArrayList<BiomeEntry>();
+            if (biomesToAdd != null) biomes[idx].addAll(biomesToAdd);
+        }
+
+        int desertIdx = DESERT.ordinal();
+
+        biomes[desertIdx].add(new BiomeEntry(BiomeGenBase.desert, 30));
+        biomes[desertIdx].add(new BiomeEntry(BiomeGenBase.savanna, 20));
+        biomes[desertIdx].add(new BiomeEntry(BiomeGenBase.plains, 10));
+
         if (p_i45560_4_ == WorldType.DEFAULT_1_1)
         {
-            this.field_151623_c = new BiomeGenBase[] {BiomeGenBase.desert, BiomeGenBase.forest, BiomeGenBase.extremeHills, BiomeGenBase.swampland, BiomeGenBase.plains, BiomeGenBase.taiga};
+            biomes[desertIdx].clear();
+            biomes[desertIdx].add(new BiomeEntry(BiomeGenBase.desert, 10));
+            biomes[desertIdx].add(new BiomeEntry(BiomeGenBase.forest, 10));
+            biomes[desertIdx].add(new BiomeEntry(BiomeGenBase.extremeHills, 10));
+            biomes[desertIdx].add(new BiomeEntry(BiomeGenBase.swampland, 10));
+            biomes[desertIdx].add(new BiomeEntry(BiomeGenBase.plains, 10));
+            biomes[desertIdx].add(new BiomeEntry(BiomeGenBase.taiga, 10));
             this.field_175973_g = null;
         }
         else if (p_i45560_4_ == WorldType.CUSTOMIZED)
@@ -78,7 +99,7 @@
                     }
                     else
                     {
-                        aint1[j1 + i1 * areaWidth] = this.field_151623_c[this.nextInt(this.field_151623_c.length)].biomeID;
+                        aint1[j1 + i1 * areaWidth] = getWeightedBiomeEntry(DESERT).biome.biomeID;
                     }
                 }
                 else if (k1 == 2)
@@ -89,7 +110,7 @@
                     }
                     else
                     {
-                        aint1[j1 + i1 * areaWidth] = this.field_151621_d[this.nextInt(this.field_151621_d.length)].biomeID;
+                        aint1[j1 + i1 * areaWidth] = getWeightedBiomeEntry(WARM).biome.biomeID;
                     }
                 }
                 else if (k1 == 3)
@@ -100,12 +121,12 @@
                     }
                     else
                     {
-                        aint1[j1 + i1 * areaWidth] = this.field_151622_e[this.nextInt(this.field_151622_e.length)].biomeID;
+                        aint1[j1 + i1 * areaWidth] = getWeightedBiomeEntry(COOL).biome.biomeID;
                     }
                 }
                 else if (k1 == 4)
                 {
-                    aint1[j1 + i1 * areaWidth] = this.field_151620_f[this.nextInt(this.field_151620_f.length)].biomeID;
+                    aint1[j1 + i1 * areaWidth] = getWeightedBiomeEntry(ICY).biome.biomeID;
                 }
                 else
                 {
@@ -116,4 +137,12 @@
 
         return aint1;
     }
+
+    protected BiomeEntry getWeightedBiomeEntry(BiomeManager.BiomeType type)
+    {
+        List<BiomeEntry> biomeList = biomes[type.ordinal()];
+        int totalWeight = WeightedRandom.getTotalWeight(biomeList);
+        int weight = BiomeManager.isTypeListModded(type)?nextInt(totalWeight):nextInt(totalWeight / 10) * 10;
+        return (BiomeEntry)WeightedRandom.getRandomItem(biomeList, weight);
+    }
 }
