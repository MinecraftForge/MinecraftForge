--- ../src-base/minecraft/net/minecraft/world/gen/ChunkProviderHell.java
+++ ../src-work/minecraft/net/minecraft/world/gen/ChunkProviderHell.java
@@ -24,6 +24,13 @@
 import net.minecraft.world.gen.feature.WorldGenMinable;
 import net.minecraft.world.gen.feature.WorldGenerator;
 import net.minecraft.world.gen.structure.MapGenNetherBridge;
+import static net.minecraftforge.event.terraingen.DecorateBiomeEvent.Decorate.EventType.*;
+import static net.minecraftforge.event.terraingen.InitMapGenEvent.EventType.*;
+import static net.minecraftforge.event.terraingen.PopulateChunkEvent.Populate.EventType.*;
+import static net.minecraftforge.event.terraingen.OreGenEvent.GenerateMinable.EventType.*;
+import net.minecraftforge.common.*;
+import net.minecraftforge.fml.common.eventhandler.Event.*;
+import net.minecraftforge.event.terraingen.*;
 
 public class ChunkProviderHell implements IChunkProvider
 {
@@ -65,18 +72,30 @@
         this.field_177472_y = new WorldGenHellLava(Blocks.flowing_lava, false);
         this.field_177471_z = new GeneratorBushFeature(Blocks.brown_mushroom);
         this.field_177465_A = new GeneratorBushFeature(Blocks.red_mushroom);
-        this.genNetherBridge = new MapGenNetherBridge();
-        this.netherCaveGenerator = new MapGenCavesHell();
+        this.genNetherBridge = (MapGenNetherBridge) TerrainGen.getModdedMapGen(new MapGenNetherBridge(), NETHER_BRIDGE);
+        this.netherCaveGenerator = TerrainGen.getModdedMapGen(new MapGenCavesHell(), NETHER_CAVE);
         this.worldObj = worldIn;
         this.field_177466_i = p_i45637_2_;
         this.hellRNG = new Random(p_i45637_3_);
-        this.netherNoiseGen1 = new NoiseGeneratorOctaves(this.hellRNG, 16);
-        this.netherNoiseGen2 = new NoiseGeneratorOctaves(this.hellRNG, 16);
-        this.netherNoiseGen3 = new NoiseGeneratorOctaves(this.hellRNG, 8);
-        this.slowsandGravelNoiseGen = new NoiseGeneratorOctaves(this.hellRNG, 4);
-        this.netherrackExculsivityNoiseGen = new NoiseGeneratorOctaves(this.hellRNG, 4);
-        this.netherNoiseGen6 = new NoiseGeneratorOctaves(this.hellRNG, 10);
-        this.netherNoiseGen7 = new NoiseGeneratorOctaves(this.hellRNG, 16);
+
+        NoiseGenerator[] noiseGens =
+        {
+                new NoiseGeneratorOctaves(this.hellRNG, 16),
+                new NoiseGeneratorOctaves(this.hellRNG, 16),
+                new NoiseGeneratorOctaves(this.hellRNG, 8),
+                new NoiseGeneratorOctaves(this.hellRNG, 4),
+                new NoiseGeneratorOctaves(this.hellRNG, 4),
+                new NoiseGeneratorOctaves(this.hellRNG, 10),
+                new NoiseGeneratorOctaves(this.hellRNG, 16)
+        };
+        noiseGens = TerrainGen.getModdedNoiseGenerators(worldIn, this.hellRNG, noiseGens);
+        this.netherNoiseGen1 = (NoiseGeneratorOctaves)noiseGens[0];
+        this.netherNoiseGen2 = (NoiseGeneratorOctaves)noiseGens[1];
+        this.netherNoiseGen3 = (NoiseGeneratorOctaves)noiseGens[2];
+        this.slowsandGravelNoiseGen = (NoiseGeneratorOctaves)noiseGens[3];
+        this.netherrackExculsivityNoiseGen = (NoiseGeneratorOctaves)noiseGens[4];
+        this.netherNoiseGen6 = (NoiseGeneratorOctaves)noiseGens[5];
+        this.netherNoiseGen7 = (NoiseGeneratorOctaves)noiseGens[6];
     }
 
     public void func_180515_a(int p_180515_1_, int p_180515_2_, ChunkPrimer p_180515_3_)
@@ -155,6 +174,10 @@
 
     public void func_180516_b(int p_180516_1_, int p_180516_2_, ChunkPrimer p_180516_3_)
     {
+        ChunkProviderEvent.ReplaceBiomeBlocks event = new ChunkProviderEvent.ReplaceBiomeBlocks(this, p_180516_1_, p_180516_2_, p_180516_3_, this.worldObj);
+        MinecraftForge.EVENT_BUS.post(event);
+        if (event.getResult() == Result.DENY) return;
+
         byte b0 = 64;
         double d0 = 0.03125D;
         this.slowsandNoise = this.slowsandGravelNoiseGen.generateNoiseOctaves(this.slowsandNoise, p_180516_1_ * 16, p_180516_2_ * 16, 0, 16, 16, 1, d0, d0, 1.0D);
@@ -272,6 +295,10 @@
 
     private double[] initializeNoiseField(double[] p_73164_1_, int p_73164_2_, int p_73164_3_, int p_73164_4_, int p_73164_5_, int p_73164_6_, int p_73164_7_)
     {
+        ChunkProviderEvent.InitNoiseField event = new ChunkProviderEvent.InitNoiseField(this, p_73164_1_, p_73164_2_, p_73164_3_, p_73164_4_, p_73164_5_, p_73164_6_, p_73164_7_);
+        MinecraftForge.EVENT_BUS.post(event);
+        if (event.getResult() == Result.DENY) return event.noisefield;
+
         if (p_73164_1_ == null)
         {
             p_73164_1_ = new double[p_73164_5_ * p_73164_6_ * p_73164_7_];
@@ -365,47 +392,58 @@
     public void populate(IChunkProvider p_73153_1_, int p_73153_2_, int p_73153_3_)
     {
         BlockFalling.fallInstantly = true;
+
+        MinecraftForge.EVENT_BUS.post(new PopulateChunkEvent.Pre(p_73153_1_, worldObj, hellRNG, p_73153_2_, p_73153_3_, false));
+
         BlockPos blockpos = new BlockPos(p_73153_2_ * 16, 0, p_73153_3_ * 16);
         ChunkCoordIntPair chunkcoordintpair = new ChunkCoordIntPair(p_73153_2_, p_73153_3_);
         this.genNetherBridge.func_175794_a(this.worldObj, this.hellRNG, chunkcoordintpair);
         int k;
 
-        for (k = 0; k < 8; ++k)
+        boolean doGen = TerrainGen.populate(p_73153_1_, worldObj, hellRNG, p_73153_2_, p_73153_3_, false, NETHER_LAVA);
+        for (k = 0; doGen && k < 8; ++k)
         {
             this.field_177472_y.generate(this.worldObj, this.hellRNG, blockpos.add(this.hellRNG.nextInt(16) + 8, this.hellRNG.nextInt(120) + 4, this.hellRNG.nextInt(16) + 8));
         }
 
-        for (k = 0; k < this.hellRNG.nextInt(this.hellRNG.nextInt(10) + 1) + 1; ++k)
+        doGen = TerrainGen.populate(p_73153_1_, worldObj, hellRNG, p_73153_2_, p_73153_3_, false, FIRE);
+        for (k = 0; doGen && k < this.hellRNG.nextInt(this.hellRNG.nextInt(10) + 1) + 1; ++k)
         {
             this.field_177470_t.generate(this.worldObj, this.hellRNG, blockpos.add(this.hellRNG.nextInt(16) + 8, this.hellRNG.nextInt(120) + 4, this.hellRNG.nextInt(16) + 8));
         }
 
-        for (k = 0; k < this.hellRNG.nextInt(this.hellRNG.nextInt(10) + 1); ++k)
+        doGen = TerrainGen.populate(p_73153_1_, worldObj, hellRNG, p_73153_2_, p_73153_3_, false, GLOWSTONE);
+        for (k = 0; doGen && k < this.hellRNG.nextInt(this.hellRNG.nextInt(10) + 1); ++k)
         {
             this.field_177469_u.generate(this.worldObj, this.hellRNG, blockpos.add(this.hellRNG.nextInt(16) + 8, this.hellRNG.nextInt(120) + 4, this.hellRNG.nextInt(16) + 8));
         }
 
-        for (k = 0; k < 10; ++k)
+        for (k = 0; doGen && k < 10; ++k)
         {
             this.field_177468_v.generate(this.worldObj, this.hellRNG, blockpos.add(this.hellRNG.nextInt(16) + 8, this.hellRNG.nextInt(128), this.hellRNG.nextInt(16) + 8));
         }
 
-        if (this.hellRNG.nextBoolean())
+        MinecraftForge.EVENT_BUS.post(new DecorateBiomeEvent.Pre(worldObj, hellRNG, blockpos));
+
+        doGen = TerrainGen.decorate(worldObj, hellRNG, blockpos, SHROOM);
+        if (doGen && this.hellRNG.nextBoolean())
         {
             this.field_177471_z.generate(this.worldObj, this.hellRNG, blockpos.add(this.hellRNG.nextInt(16) + 8, this.hellRNG.nextInt(128), this.hellRNG.nextInt(16) + 8));
         }
 
-        if (this.hellRNG.nextBoolean())
+        if (doGen && this.hellRNG.nextBoolean())
         {
             this.field_177465_A.generate(this.worldObj, this.hellRNG, blockpos.add(this.hellRNG.nextInt(16) + 8, this.hellRNG.nextInt(128), this.hellRNG.nextInt(16) + 8));
         }
 
-        for (k = 0; k < 16; ++k)
+        doGen = TerrainGen.generateOre(worldObj, hellRNG, field_177467_w, blockpos, QUARTZ);
+        for (k = 0; doGen && k < 16; ++k)
         {
             this.field_177467_w.generate(this.worldObj, this.hellRNG, blockpos.add(this.hellRNG.nextInt(16), this.hellRNG.nextInt(108) + 10, this.hellRNG.nextInt(16)));
         }
 
-        for (k = 0; k < 16; ++k)
+        doGen = TerrainGen.populate(p_73153_1_, worldObj, hellRNG, p_73153_2_, p_73153_3_, false, NETHER_LAVA2);
+        for (k = 0; doGen && k < 16; ++k)
         {
             this.field_177473_x.generate(this.worldObj, this.hellRNG, blockpos.add(this.hellRNG.nextInt(16), this.hellRNG.nextInt(108) + 10, this.hellRNG.nextInt(16)));
         }
