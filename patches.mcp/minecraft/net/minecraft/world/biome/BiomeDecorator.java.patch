--- ../src-base/minecraft/net/minecraft/world/biome/BiomeDecorator.java
+++ ../src-work/minecraft/net/minecraft/world/biome/BiomeDecorator.java
@@ -23,6 +23,11 @@
 import net.minecraft.world.gen.feature.WorldGenWaterlily;
 import net.minecraft.world.gen.feature.WorldGenerator;
 
+import static net.minecraftforge.event.terraingen.DecorateBiomeEvent.Decorate.EventType.*;
+import static net.minecraftforge.event.terraingen.OreGenEvent.GenerateMinable.EventType.*;
+import net.minecraftforge.common.*;
+import net.minecraftforge.event.terraingen.*;
+
 public class BiomeDecorator
 {
     public World currentWorld;
@@ -125,26 +130,30 @@
 
     protected void genDecorations(BiomeGenBase p_150513_1_)
     {
+        MinecraftForge.EVENT_BUS.post(new DecorateBiomeEvent.Pre(currentWorld, randomGenerator, field_180294_c));
         this.generateOres();
         int i;
         int j;
         int k;
 
-        for (i = 0; i < this.sandPerChunk2; ++i)
+        boolean doGen = TerrainGen.decorate(currentWorld, randomGenerator, field_180294_c, SAND);
+        for (i = 0; doGen && i < this.sandPerChunk2; ++i)
         {
             j = this.randomGenerator.nextInt(16) + 8;
             k = this.randomGenerator.nextInt(16) + 8;
             this.sandGen.generate(this.currentWorld, this.randomGenerator, this.currentWorld.getTopSolidOrLiquidBlock(this.field_180294_c.add(j, 0, k)));
         }
 
-        for (i = 0; i < this.clayPerChunk; ++i)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, field_180294_c, CLAY);
+        for (i = 0; doGen && i < this.clayPerChunk; ++i)
         {
             j = this.randomGenerator.nextInt(16) + 8;
             k = this.randomGenerator.nextInt(16) + 8;
             this.clayGen.generate(this.currentWorld, this.randomGenerator, this.currentWorld.getTopSolidOrLiquidBlock(this.field_180294_c.add(j, 0, k)));
         }
 
-        for (i = 0; i < this.sandPerChunk; ++i)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, field_180294_c, SAND_PASS2);
+        for (i = 0; doGen && i < this.sandPerChunk; ++i)
         {
             j = this.randomGenerator.nextInt(16) + 8;
             k = this.randomGenerator.nextInt(16) + 8;
@@ -161,7 +170,8 @@
         int l;
         BlockPos blockpos;
 
-        for (j = 0; j < i; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, field_180294_c, TREE);
+        for (j = 0; doGen && j < i; ++j)
         {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
@@ -175,7 +185,8 @@
             }
         }
 
-        for (j = 0; j < this.bigMushroomsPerChunk; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, field_180294_c, BIG_SHROOM);
+        for (j = 0; doGen && j < this.bigMushroomsPerChunk; ++j)
         {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
@@ -184,11 +195,12 @@
 
         int i1;
 
-        for (j = 0; j < this.flowersPerChunk; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, field_180294_c, FLOWERS);
+        for (j = 0; doGen && j < this.flowersPerChunk; ++j)
         {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
-            i1 = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() + 32);
+            i1 = nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() + 32);
             blockpos = this.field_180294_c.add(k, i1, l);
             BlockFlower.EnumFlowerType enumflowertype = p_150513_1_.pickRandomFlower(this.randomGenerator, blockpos);
             BlockFlower blockflower = enumflowertype.getBlockType().getBlock();
@@ -200,29 +212,32 @@
             }
         }
 
-        for (j = 0; j < this.grassPerChunk; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, field_180294_c, GRASS);
+        for (j = 0; doGen && j < this.grassPerChunk; ++j)
         {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
-            i1 = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
+            i1 = nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
             p_150513_1_.getRandomWorldGenForGrass(this.randomGenerator).generate(this.currentWorld, this.randomGenerator, this.field_180294_c.add(k, i1, l));
         }
 
-        for (j = 0; j < this.deadBushPerChunk; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, field_180294_c, DEAD_BUSH);
+        for (j = 0; doGen && j < this.deadBushPerChunk; ++j)
         {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
-            i1 = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
+            i1 = nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
             (new WorldGenDeadBush()).generate(this.currentWorld, this.randomGenerator, this.field_180294_c.add(k, i1, l));
         }
 
         j = 0;
 
-        while (j < this.waterlilyPerChunk)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, field_180294_c, LILYPAD);
+        while (doGen && j < this.waterlilyPerChunk)
         {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
-            i1 = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
+            i1 = nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
             blockpos = this.field_180294_c.add(k, i1, l);
 
             while (true)
@@ -244,7 +259,8 @@
             }
         }
 
-        for (j = 0; j < this.mushroomsPerChunk; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, field_180294_c, SHROOM);
+        for (j = 0; doGen && j < this.mushroomsPerChunk; ++j)
         {
             if (this.randomGenerator.nextInt(4) == 0)
             {
@@ -258,57 +274,60 @@
             {
                 k = this.randomGenerator.nextInt(16) + 8;
                 l = this.randomGenerator.nextInt(16) + 8;
-                i1 = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
+                i1 = nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
                 blockpos = this.field_180294_c.add(k, i1, l);
                 this.mushroomRedGen.generate(this.currentWorld, this.randomGenerator, blockpos);
             }
         }
 
-        if (this.randomGenerator.nextInt(4) == 0)
+        if (doGen && this.randomGenerator.nextInt(4) == 0)
         {
             j = this.randomGenerator.nextInt(16) + 8;
             k = this.randomGenerator.nextInt(16) + 8;
-            l = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(j, 0, k)).getY() * 2);
+            l = nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(j, 0, k)).getY() * 2);
             this.mushroomBrownGen.generate(this.currentWorld, this.randomGenerator, this.field_180294_c.add(j, l, k));
         }
 
-        if (this.randomGenerator.nextInt(8) == 0)
+        if (doGen && this.randomGenerator.nextInt(8) == 0)
         {
             j = this.randomGenerator.nextInt(16) + 8;
             k = this.randomGenerator.nextInt(16) + 8;
-            l = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(j, 0, k)).getY() * 2);
+            l = nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(j, 0, k)).getY() * 2);
             this.mushroomRedGen.generate(this.currentWorld, this.randomGenerator, this.field_180294_c.add(j, l, k));
         }
 
-        for (j = 0; j < this.reedsPerChunk; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, field_180294_c, REED);
+        for (j = 0; doGen && j < this.reedsPerChunk; ++j)
         {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
-            i1 = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
+            i1 = nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
             this.reedGen.generate(this.currentWorld, this.randomGenerator, this.field_180294_c.add(k, i1, l));
         }
 
-        for (j = 0; j < 10; ++j)
+        for (j = 0; doGen && j < 10; ++j)
         {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
-            i1 = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
+            i1 = nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
             this.reedGen.generate(this.currentWorld, this.randomGenerator, this.field_180294_c.add(k, i1, l));
         }
 
-        if (this.randomGenerator.nextInt(32) == 0)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, field_180294_c, PUMPKIN);
+        if (doGen && this.randomGenerator.nextInt(32) == 0)
         {
             j = this.randomGenerator.nextInt(16) + 8;
             k = this.randomGenerator.nextInt(16) + 8;
-            l = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(j, 0, k)).getY() * 2);
+            l = nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(j, 0, k)).getY() * 2);
             (new WorldGenPumpkin()).generate(this.currentWorld, this.randomGenerator, this.field_180294_c.add(j, l, k));
         }
 
-        for (j = 0; j < this.cactiPerChunk; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, field_180294_c, CACTUS);
+        for (j = 0; doGen && j < this.cactiPerChunk; ++j)
         {
             k = this.randomGenerator.nextInt(16) + 8;
             l = this.randomGenerator.nextInt(16) + 8;
-            i1 = this.randomGenerator.nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
+            i1 = nextInt(this.currentWorld.getHorizon(this.field_180294_c.add(k, 0, l)).getY() * 2);
             this.cactusGen.generate(this.currentWorld, this.randomGenerator, this.field_180294_c.add(k, i1, l));
         }
 
@@ -316,18 +335,22 @@
         {
             BlockPos blockpos1;
 
-            for (j = 0; j < 50; ++j)
+            doGen = TerrainGen.decorate(currentWorld, randomGenerator, field_180294_c, LAKE_WATER);
+            for (j = 0; doGen && j < 50; ++j)
             {
                 blockpos1 = this.field_180294_c.add(this.randomGenerator.nextInt(16) + 8, this.randomGenerator.nextInt(this.randomGenerator.nextInt(248) + 8), this.randomGenerator.nextInt(16) + 8);
                 (new WorldGenLiquids(Blocks.flowing_water)).generate(this.currentWorld, this.randomGenerator, blockpos1);
             }
 
-            for (j = 0; j < 20; ++j)
+            doGen = TerrainGen.decorate(currentWorld, randomGenerator, field_180294_c, LAKE_LAVA);
+            for (j = 0; doGen && j < 20; ++j)
             {
                 blockpos1 = this.field_180294_c.add(this.randomGenerator.nextInt(16) + 8, this.randomGenerator.nextInt(this.randomGenerator.nextInt(this.randomGenerator.nextInt(240) + 8) + 8), this.randomGenerator.nextInt(16) + 8);
                 (new WorldGenLiquids(Blocks.flowing_lava)).generate(this.currentWorld, this.randomGenerator, blockpos1);
             }
         }
+
+        MinecraftForge.EVENT_BUS.post(new DecorateBiomeEvent.Post(currentWorld, randomGenerator, field_180294_c));
     }
 
     protected void genStandardOre1(int p_76795_1_, WorldGenerator p_76795_2_, int p_76795_3_, int p_76795_4_)
@@ -370,16 +393,35 @@
 
     protected void generateOres()
     {
+        MinecraftForge.ORE_GEN_BUS.post(new OreGenEvent.Pre(currentWorld, randomGenerator, field_180294_c));
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, dirtGen, field_180294_c, DIRT))
         this.genStandardOre1(this.chunkProviderSettings.dirtCount, this.dirtGen, this.chunkProviderSettings.dirtMinHeight, this.chunkProviderSettings.dirtMaxHeight);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, gravelGen, field_180294_c, GRAVEL))
         this.genStandardOre1(this.chunkProviderSettings.gravelCount, this.gravelGen, this.chunkProviderSettings.gravelMinHeight, this.chunkProviderSettings.gravelMaxHeight);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, dioriteGen, field_180294_c, DIORITE))
         this.genStandardOre1(this.chunkProviderSettings.dioriteCount, this.dioriteGen, this.chunkProviderSettings.dioriteMinHeight, this.chunkProviderSettings.dioriteMaxHeight);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, graniteGen, field_180294_c, GRANITE))
         this.genStandardOre1(this.chunkProviderSettings.graniteCount, this.graniteGen, this.chunkProviderSettings.graniteMinHeight, this.chunkProviderSettings.graniteMaxHeight);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, andesiteGen, field_180294_c, ANDESITE))
         this.genStandardOre1(this.chunkProviderSettings.andesiteCount, this.andesiteGen, this.chunkProviderSettings.andesiteMinHeight, this.chunkProviderSettings.andesiteMaxHeight);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, coalGen, field_180294_c, COAL))
         this.genStandardOre1(this.chunkProviderSettings.coalCount, this.coalGen, this.chunkProviderSettings.coalMinHeight, this.chunkProviderSettings.coalMaxHeight);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, ironGen, field_180294_c, IRON))
         this.genStandardOre1(this.chunkProviderSettings.ironCount, this.ironGen, this.chunkProviderSettings.ironMinHeight, this.chunkProviderSettings.ironMaxHeight);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, goldGen, field_180294_c, GOLD))
         this.genStandardOre1(this.chunkProviderSettings.goldCount, this.goldGen, this.chunkProviderSettings.goldMinHeight, this.chunkProviderSettings.goldMaxHeight);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, redstoneGen, field_180294_c, REDSTONE))
         this.genStandardOre1(this.chunkProviderSettings.redstoneCount, this.redstoneGen, this.chunkProviderSettings.redstoneMinHeight, this.chunkProviderSettings.redstoneMaxHeight);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, diamondGen, field_180294_c, DIAMOND))
         this.genStandardOre1(this.chunkProviderSettings.diamondCount, this.diamondGen, this.chunkProviderSettings.diamondMinHeight, this.chunkProviderSettings.diamondMaxHeight);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, lapisGen, field_180294_c, LAPIS))
         this.genStandardOre2(this.chunkProviderSettings.lapisCount, this.lapisGen, this.chunkProviderSettings.lapisCenterHeight, this.chunkProviderSettings.lapisSpread);
+        MinecraftForge.ORE_GEN_BUS.post(new OreGenEvent.Post(currentWorld, randomGenerator, field_180294_c));
     }
+
+    private int nextInt(int i) { //Safety wrapper to prevent exceptions.
+        if (i <= 1)
+            return 0;
+        return this.randomGenerator.nextInt(i);
+   }
 }
