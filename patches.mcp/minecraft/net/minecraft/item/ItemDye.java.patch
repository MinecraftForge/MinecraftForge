--- ../src-base/minecraft/net/minecraft/item/ItemDye.java
+++ ../src-work/minecraft/net/minecraft/item/ItemDye.java
@@ -48,7 +48,7 @@
 
             if (enumdyecolor == EnumDyeColor.WHITE)
             {
-                if (applyBonemeal(stack, worldIn, pos))
+                if (applyBonemeal(stack, worldIn, pos, playerIn))
                 {
                     if (!worldIn.isRemote)
                     {
@@ -98,8 +98,18 @@
 
     public static boolean applyBonemeal(ItemStack stack, World worldIn, BlockPos target)
     {
+        if (worldIn instanceof net.minecraft.world.WorldServer)
+            return applyBonemeal(stack, worldIn, target, net.minecraftforge.common.util.FakePlayerFactory.getMinecraft((net.minecraft.world.WorldServer)worldIn));
+        return false;
+    }
+
+    public static boolean applyBonemeal(ItemStack stack, World worldIn, BlockPos target, EntityPlayer player)
+    {
         IBlockState iblockstate = worldIn.getBlockState(target);
 
+        int hook = net.minecraftforge.event.ForgeEventFactory.onApplyBonemeal(player, worldIn, target, iblockstate, stack);
+        if (hook != 0) return hook > 0;
+
         if (iblockstate.getBlock() instanceof IGrowable)
         {
             IGrowable igrowable = (IGrowable)iblockstate.getBlock();
@@ -133,7 +143,7 @@
 
         Block block = worldIn.getBlockState(pos).getBlock();
 
-        if (block.getMaterial() != Material.air)
+        if (block.isAir(worldIn, pos))
         {
             block.setBlockBoundsBasedOnState(worldIn, pos);
 
@@ -145,6 +155,16 @@
                 worldIn.spawnParticle(EnumParticleTypes.VILLAGER_HAPPY, (double)((float)pos.getX() + itemRand.nextFloat()), (double)pos.getY() + (double)itemRand.nextFloat() * block.getBlockBoundsMaxY(), (double)((float)pos.getZ() + itemRand.nextFloat()), d0, d1, d2, new int[0]);
             }
         }
+        else
+        {
+            for (int i1 = 0; i1 < amount; ++i1)
+            {
+                double d0 = itemRand.nextGaussian() * 0.02D;
+                double d1 = itemRand.nextGaussian() * 0.02D;
+                double d2 = itemRand.nextGaussian() * 0.02D;
+                worldIn.spawnParticle(EnumParticleTypes.VILLAGER_HAPPY, (double)((float)pos.getX() + itemRand.nextFloat()), (double)pos.getY() + (double)itemRand.nextFloat() * 1.0f, (double)((float)pos.getZ() + itemRand.nextFloat()), d0, d1, d2, new int[0]);
+            }
+        }
     }
 
     public boolean itemInteractionForEntity(ItemStack stack, EntityPlayer playerIn, EntityLivingBase target)
