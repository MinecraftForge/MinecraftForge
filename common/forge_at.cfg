#Main Forge Access Transformer configuration file
# RailLogic.getNAdjacentTracks
public akg.a(Lakg;)I # RailLogic/func_73650_a
# Tessellator
public aza.u # drawMode
public aza.v # xOffset
public aza.w # yOffset
public aza.x # zOffset
public-f aza.a # instance remove final
public aza.z # isDrawing
# ItemPickaxe
public ub.<init>()V # constructor
public+f ub.c # ItemPickaxe/field_77867_c blocksEffectiveAgainst
# ItemAxe
public tq.<init>()V # constructor
public+f tq.c # ItemAxe/field_77868_c blocksEffectiveAgainst
# ItemSpade
public+f um.c # ItemSpade/field_77866_c blocksEffectiveAgainst
# ItemTool
public tc.a # ItemTool/field_77864_a efficiencyOnProperMaterial
public tc.ck # ItemTool/field_77865_bY damageVsEntity
# EntityEnderman
public pl.d # EntityEnderman/field_70827_d carriableBlocks
# RenderGlobal
public ayx.h # RenderGlobal/field_72769_h theWorld
public ayx.i # RenderGlobal/field_72770_i renderEngine
public ayx.q # RenderGlobal/field_72777_q mc
public ayx.r # RenderGlobal/field_72776_r globalRenderBlocks
public atx.E # RenderGlobal/field_72738_E damagedBlocks
# SoundManager
public bcw.a # SoundManager/field_77381_a sndSystem
public bcw.b # SoundManager/field_77379_b soundPoolSounds
public bcw.c # SoundManager/field_77380_c soundPoolStreaming
public bcw.d # SoundManager/field_77377_d soundPoolMusic
# EntityMinecart
protected pg.* # All private -> protected
public pg.h()Z # EntityMinecart/func_70490_h isMinecartPowered
# Block
public ale.<init>(ILaff;)V #Constructor
public ale.<init>(IILaff;)V #Constructor
public ale.p()Lale; # setRequiresSelfNotify
public ale.a(Lali;)Lale; # setStepSound
public ale.b(F)Lale; # setResistance
public ale.c(F)Lale; # setHardness
public ale.h(I)Lale; # setLightOpacity
public ale.a(F)Lale; # setLightValue
public ale.q()Lale; # setBlockUnbreakable
public ale.b(Z)Lale; # setTickRandomly
# NetServerHandler
public il.g # NetServerHandler/field_72572_g playerInAirTime
# TileEntity
public aml.k # TileEntity/field_70331_k worldObj
# BlockLeavesBase
public alm.c # BlockLeavesBase/field_72131_c graphicsLevel
# Item
public ts.e(I)Lts; # Item/func_77656_e setMaxDamage
public-f ts.f(Ltu;)I # Item/func_77650_f getIconIndex
# RailLogic
public akg
public akg.a(Lakg;)I # RailLogic/func_73650_a getNAdjacentTiles
# EntityPlayer
public qf.a(Lpf;)V # EntityPlayer/func_71012_a joinEntityItemWithWorld
public qf.i()V # EntityPlayer/func_71053_j closeScreen
# EntityPlayerMP
public axb.a(Lpf;)V # EntityClientPlayerMP/func_71012_a joinEntityItemWithWorld
# World Gen Chests Related
public id.S # WorldServer/field_73069_S bonusChestContent
public abp.a # StructureMineshaftPieces/field_78818_a mineshaftChestContents
public act.i # ComponentScatteredFeatureDesertPyramid/field_74941_i itemsToGenerateInTemple
public acu.l # ComponentScatteredFeatureJunglePyramid/field_74943_l junglePyramidsChestContents
public acu.m # ComponentScatteredFeatureJunglePyramid/field_74944_m junglePyramidsDispenserContents
public ade.a # ComponentStrongholdChestCorridor/field_75003_a strongholdChestContents
public adi.b # ComponentStrongholdLibrary/field_75007_b strongholdLibraryChestContents
public adn.c # ComponentStrongholdRoomCrossing/field_75014_c strongholdCorridorChestContents
public ael.a # ComponentVillageHouse2/field_74918_a villageBlacksmithChestContents
# AnvilChunkLoader.chunkSaveLocation
default zm.d # AnvilChunkLoader/field_75825_d
# ChunkProviderServer.currentChunkLoader
default ic.e # ChunkProviderServer/field_73247_e
# PlayerManager
default ia.a(IIZ)Lib; # PlayerManager/func_72690_a getOrCreateChunkWatcher
# World
public-f xd.C # net/minecraft/src/World/field_72982_D villageCollectionObj