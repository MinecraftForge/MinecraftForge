#Main Forge Access Transformer configuration file
# RailLogic.getNAdjacentTracks
public ahi.a(Lahh;)I
# Tessellator
public ave.u # drawMode
public ave.v # xOffset
public ave.w # yOffset
public ave.x # zOffset
public-f ave.a # instance remove final
public ave.z # isDrawing
# ItemPickaxe
public+f rq.c # blocksEffectiveAgainst
# ItemAxe
public+f rf.c # blocksEffectiveAgainst
# ItemSpade
public+f sb.c # blocksEffectiveAgainst
# ItemTool
public gt.a # efficiencyOnProperMaterial
public gt.bY # damageVsEntity
# EntityEnderman
public np.d # carriableBlocks
# RenderEngine
public avf.k # texturePack
# RenderGlobal
public avb.h # theWorld
public avb.i # renderEngine
public avb.q # mc
public avb.r # globalRenderBlocks
# SoundManager
public ayq.a # sndSystem
public ayq.b # soundPoolSounds
public ayq.c # soundPoolStreaming
public ayq.d # soundPoolMusic
# EntityLiving
public jw.aM # carryoverDamage
# EntityMinecart
protected nk.* # All private -> protected
public nj.h()Z # isMinecartPowered
# Block
public aig.<init>(ILaco;)V #Constructor
public aig.<init>(IILaco;)V #Constructor
public aig.p()Laif; # setRequiresSelfNotify
public aig.a(Laij;)Laig; # setStepSound
public aig.b(F)Laig; # setResistance
public aig.c(F)Laig; # setHardness
public aig.h(I)Laig; # setLightOpacity
public aig.a(F)Laig; # setLightValue
public aig.q()Laig; # setBlockUnbreakable
public aig.b(Z)Laig; # setTickRandomly
# NetServerHandler
public gz.g # playerInAirTime
# TileEntity
public aji.k # worldObj
# BiomeGenBase
public vk.a(FF) # setTemperatureRainfall()
public vk.b(FF) # setMinMaxHeight()
public vk.m() # setDisableRain()