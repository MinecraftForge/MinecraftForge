--- a/net/minecraft/resources/SimpleReloadableResourceManager.java
+++ b/net/minecraft/resources/SimpleReloadableResourceManager.java
@@ -45,7 +45,6 @@
 
    }
 
-   @OnlyIn(Dist.CLIENT)
    public Set<String> func_199001_a() {
       return this.field_199016_e;
    }
@@ -86,35 +85,46 @@
    }
 
    public void func_199005_a(List<IResourcePack> p_199005_1_) {
+      try (net.minecraftforge.fml.common.progress.ProgressBar resReload = net.minecraftforge.fml.common.progress.StartupProgressManager.start("Loading Resources", p_199005_1_.size() + 1, true)) {
       this.func_199008_b();
       field_199012_a.info("Reloading ResourceManager: {}", p_199005_1_.stream().map(IResourcePack::func_195762_a).collect(Collectors.joining(", ")));
 
       for(IResourcePack iresourcepack : p_199005_1_) {
+         resReload.step(iresourcepack.func_195762_a());
          this.func_199009_a(iresourcepack);
       }
 
+      resReload.step("Reloading listeners");
       if (field_199012_a.isDebugEnabled()) {
          this.func_199011_d();
       } else {
          this.func_199010_c();
       }
+      }; // Forge: end progress bar
 
    }
 
    public void func_199006_a(IResourceManagerReloadListener p_199006_1_) {
+      try (net.minecraftforge.fml.common.progress.ProgressBar resReload = net.minecraftforge.fml.common.progress.StartupProgressManager.start("Loading Resource", 1)) {
+      resReload.step(p_199006_1_.getClass());
       this.field_199015_d.add(p_199006_1_);
       if (field_199012_a.isDebugEnabled()) {
          field_199012_a.info(this.func_199007_b(p_199006_1_));
       } else {
          p_199006_1_.func_195410_a(this);
       }
+      }; // Forge: end progress bar
 
    }
 
    private void func_199010_c() {
+      try (net.minecraftforge.fml.common.progress.ProgressBar resReload = net.minecraftforge.fml.common.progress.StartupProgressManager.start("Reloading", this.field_199015_d.size())) {
       for(IResourceManagerReloadListener iresourcemanagerreloadlistener : this.field_199015_d) {
+         resReload.step(iresourcemanagerreloadlistener.getClass());
+         if (!net.minecraftforge.resource.SelectiveReloadStateHandler.INSTANCE.test(iresourcemanagerreloadlistener)) continue; // Forge: Selective reloading for vanilla listeners
          iresourcemanagerreloadlistener.func_195410_a(this);
       }
+      }; // Forge: end progress bar
 
    }
 
