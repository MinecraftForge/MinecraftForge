--- a/net/minecraft/resources/RegistryReadOps.java
+++ b/net/minecraft/resources/RegistryReadOps.java
@@ -217,6 +_,7 @@
                         try {
                            JsonParser jsonparser = new JsonParser();
                            JsonElement jsonelement = jsonparser.parse(reader);
+                           if (jsonelement != null) jsonelement.getAsJsonObject().addProperty("forge:registry_name", p_179899_.m_135782_().toString());
                            optional = Optional.of(p_179900_.parse(p_179897_, jsonelement).map((p_135730_) -> {
                               return Pair.of(p_135730_, OptionalInt.empty());
                            }));
@@ -287,6 +_,7 @@
 
          public <E> Optional<DataResult<Pair<E, OptionalInt>>> m_142701_(DynamicOps<JsonElement> p_179902_, ResourceKey<? extends Registry<E>> p_179903_, ResourceKey<E> p_179904_, Decoder<E> p_179905_) {
             JsonElement jsonelement = this.f_135736_.get(p_179904_);
+            if (jsonelement != null) jsonelement.getAsJsonObject().addProperty("forge:registry_name", p_179904_.m_135782_().toString());
             return jsonelement == null ? Optional.of(DataResult.error("Unknown element: " + p_179904_)) : Optional.of(p_179905_.parse(p_179902_, jsonelement).setLifecycle(this.f_135738_.get(p_179904_)).map((p_135756_) -> {
                return Pair.of(p_135756_, OptionalInt.of(this.f_135737_.getInt(p_179904_)));
             }));
