--- a/net/minecraft/potion/PotionBrewing.java
+++ b/net/minecraft/potion/PotionBrewing.java
@@ -56,7 +_,7 @@
       int i = 0;
 
       for(int j = POTION_MIXES.size(); i < j; ++i) {
-         if ((POTION_MIXES.get(i)).to == p_222124_0_) {
+         if ((POTION_MIXES.get(i)).to.get() == p_222124_0_) {
             return true;
          }
       }
@@ -78,7 +_,7 @@
 
       for(int j = CONTAINER_MIXES.size(); i < j; ++i) {
          PotionBrewing.MixPredicate<Item> mixpredicate = CONTAINER_MIXES.get(i);
-         if (mixpredicate.from == item && mixpredicate.ingredient.test(p_185206_1_)) {
+         if (mixpredicate.from.get() == item && mixpredicate.ingredient.test(p_185206_1_)) {
             return true;
          }
       }
@@ -92,7 +_,7 @@
 
       for(int j = POTION_MIXES.size(); i < j; ++i) {
          PotionBrewing.MixPredicate<Potion> mixpredicate = POTION_MIXES.get(i);
-         if (mixpredicate.from == potion && mixpredicate.ingredient.test(p_185209_1_)) {
+         if (mixpredicate.from.get() == potion && mixpredicate.ingredient.test(p_185209_1_)) {
             return true;
          }
       }
@@ -108,8 +_,8 @@
 
          for(int j = CONTAINER_MIXES.size(); i < j; ++i) {
             PotionBrewing.MixPredicate<Item> mixpredicate = CONTAINER_MIXES.get(i);
-            if (mixpredicate.from == item && mixpredicate.ingredient.test(p_185212_0_)) {
-               return PotionUtils.setPotion(new ItemStack(mixpredicate.to), potion);
+            if (mixpredicate.from.get() == item && mixpredicate.ingredient.test(p_185212_0_)) {
+               return PotionUtils.setPotion(new ItemStack(mixpredicate.to.get()), potion);
             }
          }
 
@@ -117,8 +_,8 @@
 
          for(int k = POTION_MIXES.size(); i < k; ++i) {
             PotionBrewing.MixPredicate<Potion> mixpredicate1 = POTION_MIXES.get(i);
-            if (mixpredicate1.from == potion && mixpredicate1.ingredient.test(p_185212_0_)) {
-               return PotionUtils.setPotion(new ItemStack(item), mixpredicate1.to);
+            if (mixpredicate1.from.get() == potion && mixpredicate1.ingredient.test(p_185212_0_)) {
+               return PotionUtils.setPotion(new ItemStack(item), mixpredicate1.to.get());
             }
          }
       }
@@ -211,15 +_,15 @@
       POTION_MIXES.add(new PotionBrewing.MixPredicate<>(p_193357_0_, Ingredient.of(p_193357_1_), p_193357_2_));
    }
 
-   static class MixPredicate<T> {
-      private final T from;
+   public static class MixPredicate<T extends net.minecraftforge.registries.ForgeRegistryEntry<T>> {
+      public final net.minecraftforge.registries.IRegistryDelegate<T> from;
       private final Ingredient ingredient;
-      private final T to;
+      public final net.minecraftforge.registries.IRegistryDelegate<T> to;
 
       public MixPredicate(T p_i47570_1_, Ingredient p_i47570_2_, T p_i47570_3_) {
-         this.from = p_i47570_1_;
+         this.from = p_i47570_1_.delegate;
          this.ingredient = p_i47570_2_;
-         this.to = p_i47570_3_;
+         this.to = p_i47570_3_.delegate;
       }
    }
 }
