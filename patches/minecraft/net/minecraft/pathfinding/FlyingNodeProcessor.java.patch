--- ../src-base/minecraft/net/minecraft/pathfinding/FlyingNodeProcessor.java
+++ ../src-work/minecraft/net/minecraft/pathfinding/FlyingNodeProcessor.java
@@ -272,7 +272,9 @@
         EnumSet<PathNodeType> enumset = EnumSet.<PathNodeType>noneOf(PathNodeType.class);
         PathNodeType pathnodetype = PathNodeType.BLOCKED;
         BlockPos blockpos = new BlockPos(p_186319_5_);
+        this.currentEntity = p_186319_5_;
         pathnodetype = this.func_193577_a(p_186319_1_, p_186319_2_, p_186319_3_, p_186319_4_, p_186319_6_, p_186319_7_, p_186319_8_, p_186319_9_, p_186319_10_, enumset, pathnodetype, blockpos);
+        this.currentEntity = null;
 
         if (enumset.contains(PathNodeType.FENCE))
         {
@@ -321,6 +323,7 @@
                 {
                     pathnodetype = PathNodeType.DAMAGE_CACTUS;
                 }
+                else if (pathnodetype1 == PathNodeType.DAMAGE_OTHER) pathnodetype = PathNodeType.DAMAGE_OTHER;
                 else
                 {
                     pathnodetype = pathnodetype1 != PathNodeType.WALKABLE && pathnodetype1 != PathNodeType.OPEN && pathnodetype1 != PathNodeType.WATER ? PathNodeType.WALKABLE : PathNodeType.OPEN;
