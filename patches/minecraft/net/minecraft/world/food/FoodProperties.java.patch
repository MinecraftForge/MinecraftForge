--- a/net/minecraft/world/food/FoodProperties.java
+++ b/net/minecraft/world/food/FoodProperties.java
@@ -11,15 +_,26 @@
    private final boolean isMeat;
    private final boolean canAlwaysEat;
    private final boolean fastFood;
-   private final List<Pair<MobEffectInstance, Float>> effects;
-
+   private final List<Pair<java.util.function.Supplier<MobEffectInstance>, Float>> effects;
+
+   private FoodProperties(FoodProperties.Builder builder) {
+      this.nutrition = builder.nutrition;
+      this.saturationModifier = builder.saturationModifier;
+      this.isMeat = builder.isMeat;
+      this.canAlwaysEat = builder.canAlwaysEat;
+      this.fastFood = builder.fastFood;
+      this.effects = builder.effects;
+   }
+
+   // Forge: Use builder method instead
+   @Deprecated
    FoodProperties(int p_38730_, float p_38731_, boolean p_38732_, boolean p_38733_, boolean p_38734_, List<Pair<MobEffectInstance, Float>> p_38735_) {
       this.nutrition = p_38730_;
       this.saturationModifier = p_38731_;
       this.isMeat = p_38732_;
       this.canAlwaysEat = p_38733_;
       this.fastFood = p_38734_;
-      this.effects = p_38735_;
+      this.effects = p_38735_.stream().map(pair -> Pair.<java.util.function.Supplier<MobEffectInstance>, Float>of(pair::getFirst, pair.getSecond())).collect(java.util.stream.Collectors.toList());
    }
 
    public int getNutrition() {
@@ -43,7 +_,7 @@
    }
 
    public List<Pair<MobEffectInstance, Float>> getEffects() {
-      return this.effects;
+      return this.effects.stream().map(pair -> Pair.of(pair.getFirst() != null ? pair.getFirst().get() : null, pair.getSecond())).collect(java.util.stream.Collectors.toList());
    }
 
    public static class Builder {
@@ -52,7 +_,7 @@
       private boolean isMeat;
       private boolean canAlwaysEat;
       private boolean fastFood;
-      private final List<Pair<MobEffectInstance, Float>> effects = Lists.newArrayList();
+      private final List<Pair<java.util.function.Supplier<MobEffectInstance>, Float>> effects = Lists.newArrayList();
 
       public FoodProperties.Builder nutrition(int p_38761_) {
          this.nutrition = p_38761_;
@@ -79,13 +_,20 @@
          return this;
       }
 
+      public FoodProperties.Builder effect(java.util.function.Supplier<MobEffectInstance> effectIn, float probability) {
+          this.effects.add(Pair.of(effectIn, probability));
+          return this;
+       }
+
+      // Forge: Use supplier method instead
+      @Deprecated
       public FoodProperties.Builder effect(MobEffectInstance p_38763_, float p_38764_) {
-         this.effects.add(Pair.of(p_38763_, p_38764_));
+         this.effects.add(Pair.of(() -> p_38763_, p_38764_));
          return this;
       }
 
       public FoodProperties build() {
-         return new FoodProperties(this.nutrition, this.saturationModifier, this.isMeat, this.canAlwaysEat, this.fastFood, this.effects);
+         return new FoodProperties(this);
       }
    }
 }
