--- a/net/minecraft/world/gen/layer/BiomeLayer.java
+++ b/net/minecraft/world/gen/layer/BiomeLayer.java
@@ -10,12 +_,13 @@
    private static final int[] COLD_BIOMES = new int[]{4, 3, 5, 1};
    private static final int[] ICE_BIOMES = new int[]{12, 12, 12, 30};
    private int[] warmBiomes = WARM_BIOMES;
+   private final boolean legacyDesert;
+   private java.util.List<net.minecraftforge.common.BiomeManager.BiomeEntry>[] biomes = new java.util.ArrayList[net.minecraftforge.common.BiomeManager.BiomeType.values().length];
 
    public BiomeLayer(boolean p_i232147_1_) {
-      if (p_i232147_1_) {
-         this.warmBiomes = LEGACY_WARM_BIOMES;
-      }
-
+      this.legacyDesert = p_i232147_1_;
+      for (net.minecraftforge.common.BiomeManager.BiomeType type : net.minecraftforge.common.BiomeManager.BiomeType.values())
+         biomes[type.ordinal()] = new java.util.ArrayList<>(net.minecraftforge.common.BiomeManager.getBiomes(type));
    }
 
    public int apply(INoiseRandom p_202726_1_, int p_202726_2_) {
@@ -28,26 +_,39 @@
                return p_202726_1_.nextRandom(3) == 0 ? 39 : 38;
             }
 
-            return this.warmBiomes[p_202726_1_.nextRandom(this.warmBiomes.length)];
+            return getBiomeId(net.minecraftforge.common.BiomeManager.BiomeType.DESERT, p_202726_1_);
          case 2:
             if (i > 0) {
                return 21;
             }
 
-            return MEDIUM_BIOMES[p_202726_1_.nextRandom(MEDIUM_BIOMES.length)];
+            return getBiomeId(net.minecraftforge.common.BiomeManager.BiomeType.WARM, p_202726_1_);
          case 3:
             if (i > 0) {
                return 32;
             }
 
-            return COLD_BIOMES[p_202726_1_.nextRandom(COLD_BIOMES.length)];
+            return getBiomeId(net.minecraftforge.common.BiomeManager.BiomeType.COOL, p_202726_1_);
          case 4:
-            return ICE_BIOMES[p_202726_1_.nextRandom(ICE_BIOMES.length)];
+            return getBiomeId(net.minecraftforge.common.BiomeManager.BiomeType.ICY, p_202726_1_);
          default:
             return 14;
          }
       } else {
          return p_202726_2_;
       }
+   }
+
+   private int getBiomeId(net.minecraftforge.common.BiomeManager.BiomeType type, INoiseRandom context) {
+      return net.minecraft.util.registry.WorldGenRegistries.BIOME.getId(
+         net.minecraft.util.registry.WorldGenRegistries.BIOME.get(getBiome(type, context)));
+   }
+   protected net.minecraft.util.RegistryKey<net.minecraft.world.biome.Biome> getBiome(net.minecraftforge.common.BiomeManager.BiomeType type, INoiseRandom context) {
+      if (type == net.minecraftforge.common.BiomeManager.BiomeType.DESERT && this.legacyDesert)
+         type = net.minecraftforge.common.BiomeManager.BiomeType.DESERT_LEGACY;
+      java.util.List<net.minecraftforge.common.BiomeManager.BiomeEntry> biomeList = biomes[type.ordinal()];
+      int totalWeight = net.minecraft.util.WeightedRandom.getTotalWeight(biomeList);
+      int weight = net.minecraftforge.common.BiomeManager.isTypeListModded(type) ? context.nextRandom(totalWeight) : context.nextRandom(totalWeight / 10) * 10;
+      return net.minecraft.util.WeightedRandom.getWeightedItem(biomeList, weight).getKey();
    }
 }
