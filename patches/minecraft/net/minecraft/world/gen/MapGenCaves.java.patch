--- ../src-base/minecraft/net/minecraft/world/gen/MapGenCaves.java
+++ ../src-work/minecraft/net/minecraft/world/gen/MapGenCaves.java
@@ -5,6 +5,7 @@
 import net.minecraft.init.Blocks;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
+import net.minecraft.world.biome.BiomeGenBase;
 
 public class MapGenCaves extends MapGenBase
 {
@@ -139,7 +140,7 @@
                                 {
                                     Block block = p_151541_5_[j3];
 
-                                    if (block == Blocks.field_150358_i || block == Blocks.field_150355_j)
+                                    if (isOceanBlock(p_151541_5_, j3, k2, i3, l2, p_151541_3_, p_151541_4_))
                                     {
                                         flag3 = true;
                                     }
@@ -175,27 +176,11 @@
                                         {
                                             Block block1 = p_151541_5_[k3];
 
-                                            if (block1 == Blocks.field_150349_c)
+                                            if (isTopBlock(p_151541_5_, k3, k2, l3, j3, p_151541_3_, p_151541_4_))
                                             {
                                                 flag1 = true;
                                             }
-
-                                            if (block1 == Blocks.field_150348_b || block1 == Blocks.field_150346_d || block1 == Blocks.field_150349_c)
-                                            {
-                                                if (l3 < 10)
-                                                {
-                                                    p_151541_5_[k3] = Blocks.field_150353_l;
-                                                }
-                                                else
-                                                {
-                                                    p_151541_5_[k3] = null;
-
-                                                    if (flag1 && p_151541_5_[k3 - 1] == Blocks.field_150346_d)
-                                                    {
-                                                        p_151541_5_[k3 - 1] = this.field_75039_c.func_72807_a(k2 + p_151541_3_ * 16, j3 + p_151541_4_ * 16).field_76752_A;
-                                                    }
-                                                }
-                                            }
+                                            digBlock(p_151541_5_, k3, k2, l3, j3, p_151541_3_, p_151541_4_, flag1);
                                         }
 
                                         --k3;
@@ -251,4 +236,66 @@
             }
         }
     }
+
+    protected boolean isOceanBlock(Block[] data, int index, int x, int y, int z, int chunkX, int chunkZ)
+    {
+        return data[index] == Blocks.field_150358_i || data[index] == Blocks.field_150355_j;
+    }
+
+    //Exception biomes to make sure we generate like vanilla
+    private boolean isExceptionBiome(BiomeGenBase biome)
+    {
+        if (biome == BiomeGenBase.field_76789_p) return true;
+        if (biome == BiomeGenBase.field_76787_r) return true;
+        if (biome == BiomeGenBase.field_76769_d) return true;
+        return false;
+    }
+
+    //Determine if the block at the specified location is the top block for the biome, we take into account
+    //Vanilla bugs to make sure that we generate the map the same way vanilla does.
+    private boolean isTopBlock(Block[] data, int index, int x, int y, int z, int chunkX, int chunkZ)
+    {
+        BiomeGenBase biome = field_75039_c.func_72807_a(x + chunkX * 16, z + chunkZ * 16);
+        return (isExceptionBiome(biome) ? data[index] == Blocks.field_150349_c : data[index] == biome.field_76752_A);
+    }
+
+    /**
+     * Digs out the current block, default implementation removes stone, filler, and top block
+     * Sets the block to lava if y is less then 10, and air other wise.
+     * If setting to air, it also checks to see if we've broken the surface and if so 
+     * tries to make the floor the biome's top block
+     * 
+     * @param data Block data array
+     * @param index Pre-calculated index into block data
+     * @param x local X position
+     * @param y local Y position
+     * @param z local Z position
+     * @param chunkX Chunk X position
+     * @param chunkZ Chunk Y position
+     * @param foundTop True if we've encountered the biome's top block. Ideally if we've broken the surface.
+     */
+    protected void digBlock(Block[] data, int index, int x, int y, int z, int chunkX, int chunkZ, boolean foundTop)
+    {
+        BiomeGenBase biome = field_75039_c.func_72807_a(x + chunkX * 16, z + chunkZ * 16);
+        Block top    = (isExceptionBiome(biome) ? Blocks.field_150349_c : biome.field_76752_A);
+        Block filler = (isExceptionBiome(biome) ? Blocks.field_150346_d  : biome.field_76753_B);
+        Block block  = data[index];
+
+        if (block == Blocks.field_150348_b || block == filler || block == top)
+        {
+            if (y < 10)
+            {
+                data[index] = Blocks.field_150353_l;
+            }
+            else
+            {
+                data[index] = null;
+
+                if (foundTop && data[index - 1] == filler)
+                {
+                    data[index - 1] = top;
+                }
+            }
+        }
+    }
 }
