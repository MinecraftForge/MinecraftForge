--- ../src-base/minecraft/net/minecraft/world/gen/feature/WorldGenBigTree.java
+++ ../src-work/minecraft/net/minecraft/world/gen/feature/WorldGenBigTree.java
@@ -2,10 +2,12 @@
 
 import java.util.Random;
 import net.minecraft.block.Block;
+import net.minecraft.block.BlockSapling;
 import net.minecraft.block.material.Material;
 import net.minecraft.init.Blocks;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
+import net.minecraftforge.common.util.ForgeDirection;
 
 public class WorldGenBigTree extends WorldGenAbstractTree
 {
@@ -142,7 +144,7 @@
                     aint1[b2] = aint[b2] + j1;
                     Block block1 = this.field_76506_c.func_147439_a(aint1[0], aint1[1], aint1[2]);
 
-                    if (block1.func_149688_o() != Material.field_151579_a && block1.func_149688_o() != Material.field_151584_j)
+                    if (!block1.isAir(field_76506_c, aint1[0], aint1[1], aint1[2]) && !block1.isLeaves(field_76506_c, aint1[0], aint1[1], aint1[2]))
                     {
                         ++j1;
                     }
@@ -374,7 +376,7 @@
                 aint3[b3] = MathHelper.func_76128_c((double)p_76496_1_[b3] + (double)i * d1);
                 Block block = this.field_76506_c.func_147439_a(aint3[0], aint3[1], aint3[2]);
 
-                if (!this.func_150523_a(block))
+                if (!this.isReplaceable(field_76506_c, aint3[0], aint3[1], aint3[2]))
                 {
                     break;
                 }
@@ -390,7 +392,8 @@
         int[] aint1 = new int[] {this.field_76503_d[0], this.field_76503_d[1] + this.field_76504_e - 1, this.field_76503_d[2]};
         Block block = this.field_76506_c.func_147439_a(this.field_76503_d[0], this.field_76503_d[1] - 1, this.field_76503_d[2]);
 
-        if (block != Blocks.field_150346_d && block != Blocks.field_150349_c && block != Blocks.field_150458_ak)
+        boolean isSoil = block.canSustainPlant(field_76506_c, field_76503_d[0], field_76503_d[1] - 1, field_76503_d[2], ForgeDirection.UP, (BlockSapling)Blocks.field_150345_g);
+        if (!isSoil)
         {
             return false;
         }
@@ -443,6 +446,7 @@
 
         if (!this.func_76497_e())
         {
+            this.field_76506_c = null; //Fix vanilla Mem leak, holds latest world
             return false;
         }
         else
@@ -451,6 +455,7 @@
             this.func_76498_b();
             this.func_76499_c();
             this.func_76494_d();
+            this.field_76506_c = null; //Fix vanilla Mem leak, holds latest world
             return true;
         }
     }
