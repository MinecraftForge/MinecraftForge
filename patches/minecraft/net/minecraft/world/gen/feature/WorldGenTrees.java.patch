--- ../src_base/minecraft/net/minecraft/world/gen/feature/WorldGenTrees.java
+++ ../src_work/minecraft/net/minecraft/world/gen/feature/WorldGenTrees.java
@@ -2,10 +2,15 @@
 
 import java.util.Random;
 import net.minecraft.block.Block;
+import net.minecraft.block.BlockSapling;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.Direction;
 import net.minecraft.world.World;
-
-public class WorldGenTrees extends WorldGenerator
+import net.minecraftforge.common.ForgeDirection;
+
+import org.bukkit.BlockChangeDelegate; // CraftBukkit
+
+public class WorldGenTrees extends WorldGenerator implements net.minecraft.block.BlockSapling.TreeGenerator   // CraftBukkit add interface
 {
     /** The minimum height of a generated tree. */
     private final int minTreeHeight;
@@ -35,6 +40,13 @@
 
     public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
     {
+        // CraftBukkit start - Moved to generate
+        return this.generate((BlockChangeDelegate) par1World, par2Random, par3, par4, par5);
+    }
+
+    public boolean generate(BlockChangeDelegate par1World, Random par2Random, int par3, int par4, int par5)
+    {
+        // CraftBukkit end
         int l = par2Random.nextInt(3) + this.minTreeHeight;
         boolean flag = true;
 
@@ -65,9 +77,16 @@
                     {
                         if (i1 >= 0 && i1 < 256)
                         {
-                            k1 = par1World.getBlockId(l1, i1, j1);
-
-                            if (k1 != 0 && k1 != Block.leaves.blockID && k1 != Block.grass.blockID && k1 != Block.dirt.blockID && k1 != Block.wood.blockID)
+                            k1 = par1World.getTypeId(l1, i1, j1);
+
+                            Block block = Block.blocksList[k1];
+                            if (block == null) MinecraftServer.getServer().logInfo("Could not find block matching id: " + k1 + " during tree generation");
+                            if (!par1World.isEmpty(l1, i1, j1) &&
+                                block != null &&
+                                !block.isLeaves(par1World, l1, i1, j1) &&
+                                 k1 != Block.grass.blockID &&
+                                 k1 != Block.dirt.blockID &&
+                                !block.isWood(par1World, l1, i1, j1))
                             {
                                 flag = false;
                             }
@@ -86,11 +105,13 @@
             }
             else
             {
-                i1 = par1World.getBlockId(par3, par4 - 1, par5);
-
-                if ((i1 == Block.grass.blockID || i1 == Block.dirt.blockID) && par4 < 256 - l - 1)
-                {
-                    this.setBlock(par1World, par3, par4 - 1, par5, Block.dirt.blockID);
+                i1 = par1World.getTypeId(par3, par4 - 1, par5);
+                Block soil = Block.blocksList[i1];
+                boolean isSoil = (soil != null && soil.canSustainPlant(par1World, par3, par4 - 1, par5, ForgeDirection.UP, (BlockSapling)Block.sapling));
+
+                if (isSoil && par4 < 256 - l - 1)
+                {
+                    soil.onPlantGrow(par1World, par3, par4 - 1, par5, par3, par4, par5);
                     b0 = 3;
                     byte b1 = 0;
                     int i2;
@@ -112,11 +133,12 @@
 
                                 if (Math.abs(k2) != i2 || Math.abs(i3) != i2 || par2Random.nextInt(2) != 0 && k1 != 0)
                                 {
-                                    int j3 = par1World.getBlockId(j2, j1, l2);
-
-                                    if (j3 == 0 || j3 == Block.leaves.blockID)
+                                    int j3 = par1World.getTypeId(j2, j1, l2);
+                                    Block block = Block.blocksList[j3];
+
+                                    if (block == null || block.canBeReplacedByLeaves(par1World, j2, j1, l2))
                                     {
-                                        this.setBlockAndMetadata(par1World, j2, j1, l2, Block.leaves.blockID, this.metaLeaves);
+                                        this.setTypeAndData(par1World, j2, j1, l2, Block.leaves.blockID, this.metaLeaves);
                                     }
                                 }
                             }
@@ -125,32 +147,34 @@
 
                     for (j1 = 0; j1 < l; ++j1)
                     {
-                        k1 = par1World.getBlockId(par3, par4 + j1, par5);
-
-                        if (k1 == 0 || k1 == Block.leaves.blockID)
-                        {
-                            this.setBlockAndMetadata(par1World, par3, par4 + j1, par5, Block.wood.blockID, this.metaWood);
+                        k1 = par1World.getTypeId(par3, par4 + j1, par5);
+
+                        Block block = Block.blocksList[k1];
+
+                        if (block == null || block.isAirBlock(par1World, par3, par4 + j1, par5) || block.isLeaves(par1World, par3, par4 + j1, par5))
+                        {
+                            this.setTypeAndData(par1World, par3, par4 + j1, par5, Block.wood.blockID, this.metaWood);
 
                             if (this.vinesGrow && j1 > 0)
                             {
-                                if (par2Random.nextInt(3) > 0 && par1World.isAirBlock(par3 - 1, par4 + j1, par5))
-                                {
-                                    this.setBlockAndMetadata(par1World, par3 - 1, par4 + j1, par5, Block.vine.blockID, 8);
-                                }
-
-                                if (par2Random.nextInt(3) > 0 && par1World.isAirBlock(par3 + 1, par4 + j1, par5))
-                                {
-                                    this.setBlockAndMetadata(par1World, par3 + 1, par4 + j1, par5, Block.vine.blockID, 2);
-                                }
-
-                                if (par2Random.nextInt(3) > 0 && par1World.isAirBlock(par3, par4 + j1, par5 - 1))
-                                {
-                                    this.setBlockAndMetadata(par1World, par3, par4 + j1, par5 - 1, Block.vine.blockID, 1);
-                                }
-
-                                if (par2Random.nextInt(3) > 0 && par1World.isAirBlock(par3, par4 + j1, par5 + 1))
-                                {
-                                    this.setBlockAndMetadata(par1World, par3, par4 + j1, par5 + 1, Block.vine.blockID, 4);
+                                if (par2Random.nextInt(3) > 0 && par1World.isEmpty(par3 - 1, par4 + j1, par5))
+                                {
+                                    this.setTypeAndData(par1World, par3 - 1, par4 + j1, par5, Block.vine.blockID, 8);
+                                }
+
+                                if (par2Random.nextInt(3) > 0 && par1World.isEmpty(par3 + 1, par4 + j1, par5))
+                                {
+                                    this.setTypeAndData(par1World, par3 + 1, par4 + j1, par5, Block.vine.blockID, 2);
+                                }
+
+                                if (par2Random.nextInt(3) > 0 && par1World.isEmpty(par3, par4 + j1, par5 - 1))
+                                {
+                                    this.setTypeAndData(par1World, par3, par4 + j1, par5 - 1, Block.vine.blockID, 1);
+                                }
+
+                                if (par2Random.nextInt(3) > 0 && par1World.isEmpty(par3, par4 + j1, par5 + 1))
+                                {
+                                    this.setTypeAndData(par1World, par3, par4 + j1, par5 + 1, Block.vine.blockID, 4);
                                 }
                             }
                         }
@@ -167,24 +191,25 @@
                             {
                                 for (k2 = par5 - i2; k2 <= par5 + i2; ++k2)
                                 {
-                                    if (par1World.getBlockId(j2, j1, k2) == Block.leaves.blockID)
+                                    Block block = Block.blocksList[par1World.getTypeId(j2, j1, k2)];
+                                    if (block != null && block.isLeaves(par1World, j2, j1, k2))
                                     {
-                                        if (par2Random.nextInt(4) == 0 && par1World.getBlockId(j2 - 1, j1, k2) == 0)
+                                        if (par2Random.nextInt(4) == 0 && par1World.isEmpty(j2 - 1, j1, k2))
                                         {
                                             this.growVines(par1World, j2 - 1, j1, k2, 8);
                                         }
 
-                                        if (par2Random.nextInt(4) == 0 && par1World.getBlockId(j2 + 1, j1, k2) == 0)
+                                        if (par2Random.nextInt(4) == 0 && par1World.isEmpty(j2 + 1, j1, k2))
                                         {
                                             this.growVines(par1World, j2 + 1, j1, k2, 2);
                                         }
 
-                                        if (par2Random.nextInt(4) == 0 && par1World.getBlockId(j2, j1, k2 - 1) == 0)
+                                        if (par2Random.nextInt(4) == 0 && par1World.isEmpty(j2, j1, k2 - 1))
                                         {
                                             this.growVines(par1World, j2, j1, k2 - 1, 1);
                                         }
 
-                                        if (par2Random.nextInt(4) == 0 && par1World.getBlockId(j2, j1, k2 + 1) == 0)
+                                        if (par2Random.nextInt(4) == 0 && par1World.isEmpty(j2, j1, k2 + 1))
                                         {
                                             this.growVines(par1World, j2, j1, k2 + 1, 4);
                                         }
@@ -202,7 +227,7 @@
                                     if (par2Random.nextInt(4 - j1) == 0)
                                     {
                                         i2 = par2Random.nextInt(3);
-                                        this.setBlockAndMetadata(par1World, par3 + Direction.offsetX[Direction.rotateOpposite[k1]], par4 + l - 5 + j1, par5 + Direction.offsetZ[Direction.rotateOpposite[k1]], Block.cocoaPlant.blockID, i2 << 2 | k1);
+                                        this.setTypeAndData(par1World, par3 + Direction.offsetX[Direction.rotateOpposite[k1]], par4 + l - 5 + j1, par5 + Direction.offsetZ[Direction.rotateOpposite[k1]], Block.cocoaPlant.blockID, i2 << 2 | k1);
                                     }
                                 }
                             }
@@ -223,24 +248,26 @@
         }
     }
 
+    // CraftBukkit - Changed world to BlockChangeDelegate
+
     /**
      * Grows vines downward from the given block for a given length. Args: World, x, starty, z, vine-length
      */
-    private void growVines(World par1World, int par2, int par3, int par4, int par5)
-    {
-        this.setBlockAndMetadata(par1World, par2, par3, par4, Block.vine.blockID, par5);
+    private void growVines(BlockChangeDelegate par1World, int par2, int par3, int par4, int par5)
+    {
+        this.setTypeAndData(par1World, par2, par3, par4, Block.vine.blockID, par5);
         int i1 = 4;
 
         while (true)
         {
             --par3;
 
-            if (par1World.getBlockId(par2, par3, par4) != 0 || i1 <= 0)
+            if (!par1World.isEmpty(par2, par3, par4) || i1 <= 0)
             {
                 return;
             }
 
-            this.setBlockAndMetadata(par1World, par2, par3, par4, Block.vine.blockID, par5);
+            this.setTypeAndData(par1World, par2, par3, par4, Block.vine.blockID, par5);
             --i1;
         }
     }
