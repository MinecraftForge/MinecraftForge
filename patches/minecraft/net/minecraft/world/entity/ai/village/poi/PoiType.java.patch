--- a/net/minecraft/world/entity/ai/village/poi/PoiType.java
+++ b/net/minecraft/world/entity/ai/village/poi/PoiType.java
@@ -21,7 +_,12 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.properties.BedPart;
 
-public class PoiType {
+public class PoiType extends net.minecraftforge.registries.ForgeRegistryEntry<PoiType> {
+
+   static {
+      net.minecraftforge.registries.GameData.setPoiTypeAccessors((type, states) -> type.allMatchingStates = states, type -> type.f_27325_);
+   }
+
    private static final Supplier<Set<PoiType>> f_27353_ = Suppliers.memoize(() -> {
       return Registry.f_122869_.m_123024_().map(VillagerProfession::m_35622_).collect(Collectors.toSet());
    });
@@ -39,7 +_,7 @@
    private static final Set<BlockState> f_148686_ = ImmutableList.of(Blocks.f_50256_, Blocks.f_152477_, Blocks.f_152476_, Blocks.f_152478_).stream().flatMap((p_148697_) -> {
       return p_148697_.m_49965_().m_61056_().stream();
    }).collect(ImmutableSet.toImmutableSet());
-   private static final Map<BlockState, PoiType> f_27323_ = Maps.newHashMap();
+   private static final Map<BlockState, PoiType> f_27323_ = net.minecraftforge.registries.GameData.getBlockStatePointOfInterestTypeMap();
    public static final PoiType f_27331_ = m_27379_("unemployed", ImmutableSet.of(), 1, f_27329_, 1);
    public static final PoiType f_27332_ = m_27374_("armorer", m_27372_(Blocks.f_50620_), 1, 1);
    public static final PoiType f_27333_ = m_27374_("butcher", m_27372_(Blocks.f_50619_), 1, 1);
@@ -65,6 +_,7 @@
    protected static final Set<BlockState> f_27352_ = new ObjectOpenHashSet<>(f_27323_.keySet());
    private final String f_27324_;
    private final Set<BlockState> f_27325_;
+   private Set<BlockState> allMatchingStates;
    private final int f_27326_;
    private final Predicate<PoiType> f_27327_;
    private final int f_27328_;
@@ -76,6 +_,7 @@
    public PoiType(String p_27362_, Set<BlockState> p_27363_, int p_27364_, Predicate<PoiType> p_27365_, int p_27366_) {
       this.f_27324_ = p_27362_;
       this.f_27325_ = ImmutableSet.copyOf(p_27363_);
+      this.allMatchingStates = f_27325_;
       this.f_27326_ = p_27364_;
       this.f_27327_ = p_27365_;
       this.f_27328_ = p_27366_;
@@ -84,6 +_,7 @@
    public PoiType(String p_27357_, Set<BlockState> p_27358_, int p_27359_, int p_27360_) {
       this.f_27324_ = p_27357_;
       this.f_27325_ = ImmutableSet.copyOf(p_27358_);
+      this.allMatchingStates = f_27325_;
       this.f_27326_ = p_27359_;
       this.f_27327_ = (p_148695_) -> {
          return p_148695_ == this;
@@ -104,7 +_,7 @@
    }
 
    public boolean m_148692_(BlockState p_148693_) {
-      return this.f_27325_.contains(p_148693_);
+      return this.allMatchingStates.contains(p_148693_);
    }
 
    public int m_27397_() {
@@ -124,16 +_,15 @@
    }
 
    private static PoiType m_27367_(PoiType p_27368_) {
-      p_27368_.f_27325_.forEach((p_148691_) -> {
-         PoiType poitype = f_27323_.put(p_148691_, p_27368_);
-         if (poitype != null) {
-            throw (IllegalStateException)Util.m_137570_(new IllegalStateException(String.format("%s is defined in too many tags", p_148691_)));
-         }
-      });
       return p_27368_;
    }
 
    public static Optional<PoiType> m_27390_(BlockState p_27391_) {
       return Optional.ofNullable(f_27323_.get(p_27391_));
    }
+   
+   public ImmutableSet<BlockState> getBlockStates() {
+      return ImmutableSet.copyOf(this.allMatchingStates);
+   }
+
 }
