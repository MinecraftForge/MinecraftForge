--- a/net/minecraft/world/entity/monster/EnderMan.java
+++ b/net/minecraft/world/entity/monster/EnderMan.java
@@ -111,7 +_,6 @@
    }
 
    public void setTarget(@Nullable LivingEntity p_32537_) {
-      super.setTarget(p_32537_);
       AttributeInstance attributeinstance = this.getAttribute(Attributes.MOVEMENT_SPEED);
       if (p_32537_ == null) {
          this.targetChangeTime = 0;
@@ -126,6 +_,7 @@
          }
       }
 
+      super.setTarget(p_32537_); //Forge: Moved down to allow event handlers to write data manager values.
    }
 
    protected void defineSynchedData() {
@@ -200,7 +_,7 @@
 
    boolean isLookingAtMe(Player p_32535_) {
       ItemStack itemstack = p_32535_.getInventory().armor.get(3);
-      if (itemstack.is(Blocks.CARVED_PUMPKIN.asItem())) {
+      if (net.minecraftforge.common.ForgeHooks.shouldSuppressEnderManAnger(this, p_32535_, itemstack)) {
          return false;
       } else {
          Vec3 vec3 = p_32535_.getViewVector(1.0F).normalize();
@@ -283,8 +_,10 @@
       boolean flag = blockstate.blocksMotion();
       boolean flag1 = blockstate.getFluidState().is(FluidTags.WATER);
       if (flag && !flag1) {
+         net.minecraftforge.event.entity.EntityTeleportEvent.EnderEntity event = net.minecraftforge.event.ForgeEventFactory.onEnderTeleport(this, p_32544_, p_32545_, p_32546_);
+         if (event.isCanceled()) return false;
          Vec3 vec3 = this.position();
-         boolean flag2 = this.randomTeleport(p_32544_, p_32545_, p_32546_, true);
+         boolean flag2 = this.randomTeleport(event.getTargetX(), event.getTargetY(), event.getTargetZ(), true);
          if (flag2) {
             this.level().gameEvent(GameEvent.TELEPORT, vec3, GameEvent.Context.of(this));
             if (!this.isSilent()) {
@@ -424,7 +_,7 @@
       public boolean canUse() {
          if (this.enderman.getCarriedBlock() == null) {
             return false;
-         } else if (!this.enderman.level().getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
+         } else if (!net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.enderman.level(), this.enderman)) {
             return false;
          } else {
             return this.enderman.getRandom().nextInt(reducedTickDelay(2000)) == 0;
@@ -444,7 +_,7 @@
          BlockState blockstate2 = this.enderman.getCarriedBlock();
          if (blockstate2 != null) {
             blockstate2 = Block.updateFromNeighbourShapes(blockstate2, this.enderman.level(), blockpos);
-            if (this.canPlaceBlock(level, blockpos, blockstate2, blockstate, blockstate1, blockpos1)) {
+            if (this.canPlaceBlock(level, blockpos, blockstate2, blockstate, blockstate1, blockpos1) && !net.minecraftforge.event.ForgeEventFactory.onBlockPlace(enderman, net.minecraftforge.common.util.BlockSnapshot.create(level.dimension(), level, blockpos1), net.minecraft.core.Direction.UP)) {
                level.setBlock(blockpos, blockstate2, 3);
                level.gameEvent(GameEvent.BLOCK_PLACE, blockpos, GameEvent.Context.of(this.enderman, blockstate2));
                this.enderman.setCarriedBlock((BlockState)null);
@@ -454,7 +_,7 @@
       }
 
       private boolean canPlaceBlock(Level p_32559_, BlockPos p_32560_, BlockState p_32561_, BlockState p_32562_, BlockState p_32563_, BlockPos p_32564_) {
-         return p_32562_.isAir() && !p_32563_.isAir() && !p_32563_.is(Blocks.BEDROCK) && p_32563_.isCollisionShapeFullBlock(p_32559_, p_32564_) && p_32561_.canSurvive(p_32559_, p_32560_) && p_32559_.getEntities(this.enderman, AABB.unitCubeFromLowerCorner(Vec3.atLowerCornerOf(p_32560_))).isEmpty();
+         return p_32562_.isAir() && !p_32563_.isAir() && !p_32563_.is(Blocks.BEDROCK) && !p_32563_.is(net.minecraftforge.common.Tags.Blocks.ENDERMAN_PLACE_ON_BLACKLIST) && p_32563_.isCollisionShapeFullBlock(p_32559_, p_32564_) && p_32561_.canSurvive(p_32559_, p_32560_) && p_32559_.getEntities(this.enderman, AABB.unitCubeFromLowerCorner(Vec3.atLowerCornerOf(p_32560_))).isEmpty();
       }
    }
 
@@ -556,7 +_,7 @@
       public boolean canUse() {
          if (this.enderman.getCarriedBlock() != null) {
             return false;
-         } else if (!this.enderman.level().getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
+         } else if (!net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.enderman.level(), this.enderman)) {
             return false;
          } else {
             return this.enderman.getRandom().nextInt(reducedTickDelay(20)) == 0;
