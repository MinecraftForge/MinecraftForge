--- a/net/minecraft/world/entity/monster/Zombie.java
+++ b/net/minecraft/world/entity/monster/Zombie.java
@@ -193,7 +_,7 @@
       if (!this.level().isClientSide && this.isAlive() && !this.isNoAi()) {
          if (this.isUnderWaterConverting()) {
             --this.conversionTime;
-            if (this.conversionTime < 0) {
+            if (this.conversionTime < 0 && net.minecraftforge.event.ForgeEventFactory.canLivingConvert(this, EntityType.DROWNED, (timer) -> this.conversionTime = timer)) {
                this.doUnderWaterConversion();
             }
          } else if (this.convertsInWater()) {
@@ -255,6 +_,7 @@
       if (zombie != null) {
          zombie.handleAttributes(zombie.level().getCurrentDifficultyAt(zombie.blockPosition()).getSpecialMultiplier());
          zombie.setCanBreakDoors(zombie.supportsBreakDoorGoal() && this.canBreakDoors());
+         net.minecraftforge.event.ForgeEventFactory.onLivingConvert(this, zombie);
       }
 
    }
@@ -275,11 +_,15 @@
             livingentity = (LivingEntity)p_34288_.getEntity();
          }
 
-         if (livingentity != null && this.level().getDifficulty() == Difficulty.HARD && (double)this.random.nextFloat() < this.getAttributeValue(Attributes.SPAWN_REINFORCEMENTS_CHANCE) && this.level().getGameRules().getBoolean(GameRules.RULE_DOMOBSPAWNING)) {
             int i = Mth.floor(this.getX());
             int j = Mth.floor(this.getY());
             int k = Mth.floor(this.getZ());
-            Zombie zombie = new Zombie(this.level());
+         net.minecraftforge.event.entity.living.ZombieEvent.SummonAidEvent event = net.minecraftforge.event.ForgeEventFactory.fireZombieSummonAid(this, level(), i, j, k, livingentity, this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).getValue());
+         if (event.getResult() == net.minecraftforge.eventbus.api.Event.Result.DENY) return true;
+         if (event.getResult() == net.minecraftforge.eventbus.api.Event.Result.ALLOW  ||
+            livingentity != null && this.level().getDifficulty() == Difficulty.HARD && (double)this.random.nextFloat() < this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).getValue() && this.level()
+                    .getGameRules().getBoolean(GameRules.RULE_DOMOBSPAWNING)) {
+            Zombie zombie = event.getCustomSummonedAid() != null && event.getResult() == net.minecraftforge.eventbus.api.Event.Result.ALLOW ? event.getCustomSummonedAid() : EntityType.ZOMBIE.create(this.level());
 
             for(int l = 0; l < 50; ++l) {
                int i1 = i + Mth.nextInt(this.random, 7, 40) * Mth.nextInt(this.random, -1, 1);
@@ -291,6 +_,7 @@
                if (NaturalSpawner.isSpawnPositionOk(spawnplacements$type, this.level(), blockpos, entitytype) && SpawnPlacements.checkSpawnRules(entitytype, serverlevel, MobSpawnType.REINFORCEMENT, blockpos, this.level().random)) {
                   zombie.setPos((double)i1, (double)j1, (double)k1);
                   if (!this.level().hasNearbyAlivePlayer((double)i1, (double)j1, (double)k1, 7.0D) && this.level().isUnobstructed(zombie) && this.level().noCollision(zombie) && !this.level().containsAnyLiquid(zombie.getBoundingBox())) {
+                     if (livingentity != null)
                      zombie.setTarget(livingentity);
                      zombie.finalizeSpawn(serverlevel, this.level().getCurrentDifficultyAt(zombie.blockPosition()), MobSpawnType.REINFORCEMENT, (SpawnGroupData)null, (CompoundTag)null);
                      serverlevel.addFreshEntityWithPassengers(zombie);
@@ -376,7 +_,7 @@
 
    public boolean killedEntity(ServerLevel p_219160_, LivingEntity p_219161_) {
       boolean flag = super.killedEntity(p_219160_, p_219161_);
-      if ((p_219160_.getDifficulty() == Difficulty.NORMAL || p_219160_.getDifficulty() == Difficulty.HARD) && p_219161_ instanceof Villager villager) {
+      if ((p_219160_.getDifficulty() == Difficulty.NORMAL || p_219160_.getDifficulty() == Difficulty.HARD) && p_219161_ instanceof Villager villager && net.minecraftforge.event.ForgeEventFactory.canLivingConvert(p_219161_, EntityType.ZOMBIE_VILLAGER, (timer) -> {})) {
          if (p_219160_.getDifficulty() != Difficulty.HARD && this.random.nextBoolean()) {
             return flag;
          }
@@ -388,6 +_,7 @@
             zombievillager.setGossips(villager.getGossips().store(NbtOps.INSTANCE));
             zombievillager.setTradeOffers(villager.getOffers().createTag());
             zombievillager.setVillagerXp(villager.getVillagerXp());
+         net.minecraftforge.event.ForgeEventFactory.onLivingConvert(p_219161_, zombievillager);
             if (!this.isSilent()) {
                p_219160_.levelEvent((Player)null, 1026, this.blockPosition(), 0);
             }
@@ -465,7 +_,7 @@
    }
 
    public static boolean getSpawnAsBabyOdds(RandomSource p_219163_) {
-      return p_219163_.nextFloat() < 0.05F;
+      return p_219163_.nextFloat() < net.minecraftforge.common.ForgeConfig.SERVER.zombieBabyChance.get();
    }
 
    protected void handleAttributes(float p_34340_) {
@@ -485,7 +_,7 @@
    }
 
    protected void randomizeReinforcementsChance() {
-      this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(this.random.nextDouble() * (double)0.1F);
+      this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(this.random.nextDouble() * net.minecraftforge.common.ForgeConfig.SERVER.zombieBaseSummonChance.get());
    }
 
    protected Vector3f getPassengerAttachmentPoint(Entity p_300549_, EntityDimensions p_298020_, float p_298000_) {
