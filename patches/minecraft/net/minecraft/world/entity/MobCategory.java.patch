--- a/net/minecraft/world/entity/MobCategory.java
+++ b/net/minecraft/world/entity/MobCategory.java
@@ -3,7 +_,7 @@
 import com.mojang.serialization.Codec;
 import net.minecraft.util.StringRepresentable;
 
-public enum MobCategory implements StringRepresentable {
+public enum MobCategory implements StringRepresentable, net.minecraftforge.common.IExtensibleEnum {
    MONSTER("monster", 70, false, false, 128),
    CREATURE("creature", 10, true, true, 128),
    AMBIENT("ambient", 15, true, false, 128),
@@ -13,7 +_,8 @@
    WATER_AMBIENT("water_ambient", 20, true, false, 64),
    MISC("misc", -1, true, true, 128);
 
-   public static final Codec<MobCategory> CODEC = StringRepresentable.fromEnum(MobCategory::values);
+   public static final Codec<MobCategory> CODEC = net.minecraftforge.common.IExtensibleEnum.createCodecForExtensibleEnum(MobCategory::values, MobCategory::byName);
+   private static final java.util.Map<String, MobCategory> BY_NAME = java.util.Arrays.stream(values()).collect(java.util.stream.Collectors.toMap(MobCategory::getName, mobCategory -> mobCategory));
    private final int max;
    private final boolean isFriendly;
    private final boolean isPersistent;
@@ -47,6 +_,21 @@
 
    public boolean isPersistent() {
       return this.isPersistent;
+   }
+
+   public static MobCategory create(String name, String id, int maxNumberOfCreatureIn, boolean isPeacefulCreatureIn, boolean isAnimalIn, int despawnDistance) {
+      throw new IllegalStateException("Enum not extended");
+   }
+
+   @Override
+   @Deprecated
+   public void init() {
+      BY_NAME.put(this.getName(), this);
+   }
+
+   // Forge: Access enum members by name
+   public static MobCategory byName(String name) {
+      return BY_NAME.get(name);
    }
 
    public int getDespawnDistance() {
