--- a/net/minecraft/world/biome/BiomeAmbience.java
+++ b/net/minecraft/world/biome/BiomeAmbience.java
@@ -204,7 +_,7 @@
       }
    }
 
-   public static enum GrassColorModifier implements IStringSerializable {
+   public static enum GrassColorModifier implements IStringSerializable, net.minecraftforge.common.IExtensibleEnum {
       NONE("none") {
          @OnlyIn(Dist.CLIENT)
          public int modifyColor(double p_241853_1_, double p_241853_3_, int p_241853_5_) {
@@ -226,18 +_,36 @@
       };
 
       private final String name;
-      public static final Codec<BiomeAmbience.GrassColorModifier> CODEC = IStringSerializable.fromEnum(BiomeAmbience.GrassColorModifier::values, BiomeAmbience.GrassColorModifier::byName);
+      public static final Codec<BiomeAmbience.GrassColorModifier> CODEC = net.minecraftforge.common.IExtensibleEnum.createCodecForExtensibleEnum(BiomeAmbience.GrassColorModifier::values, BiomeAmbience.GrassColorModifier::byName);
       private static final Map<String, BiomeAmbience.GrassColorModifier> BY_NAME = Arrays.stream(values()).collect(Collectors.toMap(BiomeAmbience.GrassColorModifier::getName, (p_242545_0_) -> {
          return p_242545_0_;
       }));
 
       @OnlyIn(Dist.CLIENT)
-      public abstract int modifyColor(double p_241853_1_, double p_241853_3_, int p_241853_5_);
+      public int modifyColor(double p_241853_1_, double p_241853_3_, int p_241853_5_) {
+         return delegate.modifyGrassColor(p_241853_1_, p_241853_3_, p_241853_5_);
+      }
 
       private GrassColorModifier(String p_i241940_3_) {
          this.name = p_i241940_3_;
       }
 
+      private ColorModifier delegate;
+      private GrassColorModifier(String name, ColorModifier delegate) {
+         this(name);
+         this.delegate = delegate;
+      }
+      public static GrassColorModifier create(String name, String id, ColorModifier delegate) {
+         throw new IllegalStateException("Enum not extended");
+      }
+      @Override
+      public void init() {
+         BY_NAME.put(this.getName(), this);
+      }
+      @FunctionalInterface
+      public interface ColorModifier {
+         int modifyGrassColor(double x, double z, int color);
+      }
       public String getName() {
          return this.name;
       }
