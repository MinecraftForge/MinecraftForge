--- a/net/minecraft/world/biome/Biome.java
+++ b/net/minecraft/world/biome/Biome.java
@@ -53,7 +_,7 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public final class Biome {
+public final class Biome extends net.minecraftforge.registries.ForgeRegistryEntry.UncheckedRegistryEntry<Biome> {
    public static final Logger LOGGER = LogManager.getLogger();
    public static final Codec<Biome> DIRECT_CODEC = RecordCodecBuilder.create((p_235064_0_) -> {
       return p_235064_0_.group(Biome.Climate.CODEC.forGetter((p_242446_0_) -> {
@@ -70,7 +_,9 @@
          return p_242443_0_.generationSettings;
       }), MobSpawnInfo.CODEC.forGetter((p_242442_0_) -> {
          return p_242442_0_.mobSettings;
-      })).apply(p_235064_0_, Biome::new);
+      }), ResourceLocation.CODEC.optionalFieldOf("forge:registry_name").forGetter(b -> Optional.ofNullable(b.getRegistryName())))
+      .apply(p_235064_0_, (climate, category, depth, scale, effects, gen, spawns, name) ->
+          net.minecraftforge.common.ForgeHooks.enhanceBiome(name.orElse(null), climate, category, depth, scale, effects, gen, spawns, p_235064_0_, Biome::new));
    });
    public static final Codec<Biome> NETWORK_CODEC = RecordCodecBuilder.create((p_242432_0_) -> {
       return p_242432_0_.group(Biome.Climate.CODEC.forGetter((p_242441_0_) -> {
@@ -200,7 +_,7 @@
       } else {
          if (p_201850_2_.getY() >= 0 && p_201850_2_.getY() < 256 && p_201850_1_.getBrightness(LightType.BLOCK, p_201850_2_) < 10) {
             BlockState blockstate = p_201850_1_.getBlockState(p_201850_2_);
-            if (blockstate.isAir() && Blocks.SNOW.defaultBlockState().canSurvive(p_201850_1_, p_201850_2_)) {
+            if (blockstate.isAir(p_201850_1_, p_201850_2_) && Blocks.SNOW.defaultBlockState().canSurvive(p_201850_1_, p_201850_2_)) {
                return true;
             }
          }
