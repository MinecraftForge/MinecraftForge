--- a/net/minecraft/world/item/ItemStack.java
+++ b/net/minecraft/world/item/ItemStack.java
@@ -76,12 +_,16 @@
 import net.minecraft.world.level.block.state.pattern.BlockInWorld;
 import org.slf4j.Logger;
 
-public final class ItemStack {
+public final class ItemStack extends net.minecraftforge.common.capabilities.CapabilityProvider<ItemStack> implements net.minecraftforge.common.extensions.IForgeItemStack {
    public static final Codec<ItemStack> CODEC = RecordCodecBuilder.create((p_258963_) -> {
       return p_258963_.group(BuiltInRegistries.ITEM.byNameCodec().fieldOf("id").forGetter(ItemStack::getItem), Codec.INT.fieldOf("Count").forGetter(ItemStack::getCount), CompoundTag.CODEC.optionalFieldOf("tag").forGetter((p_281115_) -> {
          return Optional.ofNullable(p_281115_.getTag());
       })).apply(p_258963_, ItemStack::new);
    });
+   @org.jetbrains.annotations.Nullable
+   private final net.minecraft.core.Holder.Reference<Item> delegate;
+   private CompoundTag capNBT;
+
    private static final Logger LOGGER = LogUtils.getLogger();
    public static final ItemStack EMPTY = new ItemStack((Void)null);
    public static final DecimalFormat ATTRIBUTE_MODIFIER_FORMAT = Util.make(new DecimalFormat("#.##"), (p_41704_) -> {
@@ -137,28 +_,40 @@
       this(p_220155_.value(), p_220156_);
    }
 
-   public ItemStack(ItemLike p_41601_, int p_41602_) {
-      this.item = p_41601_.asItem();
-      this.count = p_41602_;
-      if (this.item.canBeDepleted()) {
+   public ItemStack(ItemLike p_41601_, int p_41602_) { this(p_41601_, p_41602_, (CompoundTag) null); }
+   public ItemStack(ItemLike p_41604_, int p_41605_, @Nullable CompoundTag p_41606_) {
+      super(ItemStack.class, true);
+      this.capNBT = p_41606_;
+      this.item = p_41604_.asItem();
+      this.delegate = net.minecraftforge.registries.ForgeRegistries.ITEMS.getDelegateOrThrow(p_41604_.asItem());
+      this.count = p_41605_;
+      this.forgeInit();
+      if (this.item.isDamageable(this)) {
          this.setDamageValue(this.getDamageValue());
       }
 
    }
 
    private ItemStack(@Nullable Void p_282703_) {
+      super(ItemStack.class, true);
       this.item = null;
+      this.delegate = null;
    }
 
    private ItemStack(CompoundTag p_41608_) {
+      super(ItemStack.class, true);
+      this.capNBT = p_41608_.contains("ForgeCaps") ? p_41608_.getCompound("ForgeCaps") : null;
+      Item rawItem =
       this.item = BuiltInRegistries.ITEM.get(new ResourceLocation(p_41608_.getString("id")));
+      this.delegate = net.minecraftforge.registries.ForgeRegistries.ITEMS.getDelegateOrThrow(rawItem);
       this.count = p_41608_.getByte("Count");
       if (p_41608_.contains("tag", 10)) {
          this.tag = p_41608_.getCompound("tag");
          this.getItem().verifyTagAfterLoad(this.tag);
       }
+      this.forgeInit();
 
-      if (this.getItem().canBeDepleted()) {
+      if (this.getItem().isDamageable(this)) {
          this.setDamageValue(this.getDamageValue());
       }
 
@@ -174,7 +_,7 @@
    }
 
    public boolean isEmpty() {
-      return this == EMPTY || this.item == Items.AIR || this.count <= 0;
+      return this == EMPTY || this.count <= 0 || this.delegate.get() == Items.AIR;
    }
 
    public boolean isItemEnabled(FeatureFlagSet p_250869_) {
@@ -199,7 +_,7 @@
    }
 
    public Item getItem() {
-      return this.isEmpty() ? Items.AIR : this.item;
+      return this.isEmpty() ? Items.AIR : this.delegate.get();
    }
 
    public Holder<Item> getItemHolder() {
@@ -231,6 +_,15 @@
    }
 
    public InteractionResult useOn(UseOnContext p_41662_) {
+      if (!p_41662_.getLevel().isClientSide) return net.minecraftforge.common.ForgeHooks.onPlaceItemIntoWorld(p_41662_);
+      return onItemUse(p_41662_, (c) -> getItem().useOn(p_41662_));
+   }
+
+   public InteractionResult onItemUseFirst(UseOnContext p_41662_) {
+      return onItemUse(p_41662_, (c) -> getItem().onItemUseFirst(this, p_41662_));
+   }
+
+   private InteractionResult onItemUse(UseOnContext p_41662_, java.util.function.Function<UseOnContext, InteractionResult> callback) {
       Player player = p_41662_.getPlayer();
       BlockPos blockpos = p_41662_.getClickedPos();
       BlockInWorld blockinworld = new BlockInWorld(p_41662_.getLevel(), blockpos, false);
@@ -238,7 +_,7 @@
          return InteractionResult.PASS;
       } else {
          Item item = this.getItem();
-         InteractionResult interactionresult = item.useOn(p_41662_);
+         InteractionResult interactionresult = callback.apply(p_41662_);
          if (player != null && interactionresult.shouldAwardStats()) {
             player.awardStat(Stats.ITEM_USED.get(item));
          }
@@ -267,11 +_,15 @@
          p_41740_.put("tag", this.tag.copy());
       }
 
+      CompoundTag cnbt = this.serializeCaps();
+      if (cnbt != null && !cnbt.isEmpty()) {
+         p_41740_.put("ForgeCaps", cnbt);
+      }
       return p_41740_;
    }
 
    public int getMaxStackSize() {
-      return this.getItem().getMaxStackSize();
+      return this.getItem().getMaxStackSize(this);
    }
 
    public boolean isStackable() {
@@ -279,7 +_,7 @@
    }
 
    public boolean isDamageableItem() {
-      if (!this.isEmpty() && this.getItem().getMaxDamage() > 0) {
+      if (!this.isEmpty() && this.getItem().isDamageable(this)) {
          CompoundTag compoundtag = this.getTag();
          return compoundtag == null || !compoundtag.getBoolean("Unbreakable");
       } else {
@@ -288,19 +_,19 @@
    }
 
    public boolean isDamaged() {
-      return this.isDamageableItem() && this.getDamageValue() > 0;
+      return this.isDamageableItem() && getItem().isDamaged(this);
    }
 
    public int getDamageValue() {
-      return this.tag == null ? 0 : this.tag.getInt("Damage");
+      return this.getItem().getDamage(this);
    }
 
    public void setDamageValue(int p_41722_) {
-      this.getOrCreateTag().putInt("Damage", Math.max(0, p_41722_));
+      this.getItem().setDamage(this, p_41722_);
    }
 
    public int getMaxDamage() {
-      return this.getItem().getMaxDamage();
+      return this.getItem().getMaxDamage(this);
    }
 
    public boolean hurt(int p_220158_, RandomSource p_220159_, @Nullable ServerPlayer p_220160_) {
@@ -336,6 +_,7 @@
    public <T extends LivingEntity> void hurtAndBreak(int p_41623_, T p_41624_, Consumer<T> p_41625_) {
       if (!p_41624_.level().isClientSide && (!(p_41624_ instanceof Player) || !((Player)p_41624_).getAbilities().instabuild)) {
          if (this.isDamageableItem()) {
+            p_41623_ = this.getItem().damageItem(this, p_41623_, p_41624_, p_41625_);
             if (this.hurt(p_41623_, p_41624_.getRandom(), p_41624_ instanceof ServerPlayer ? (ServerPlayer)p_41624_ : null)) {
                p_41625_.accept(p_41624_);
                Item item = this.getItem();
@@ -388,7 +_,7 @@
    }
 
    public boolean isCorrectToolForDrops(BlockState p_41736_) {
-      return this.getItem().isCorrectToolForDrops(p_41736_);
+      return this.getItem().isCorrectToolForDrops(this, p_41736_);
    }
 
    public InteractionResult interactLivingEntity(Player p_41648_, LivingEntity p_41649_, InteractionHand p_41650_) {
@@ -399,7 +_,7 @@
       if (this.isEmpty()) {
          return EMPTY;
       } else {
-         ItemStack itemstack = new ItemStack(this.getItem(), this.count);
+         ItemStack itemstack = new ItemStack(this.getItem(), this.count, this.serializeCaps());
          itemstack.setPopTime(this.getPopTime());
          if (this.tag != null) {
             itemstack.tag = this.tag.copy();
@@ -435,7 +_,7 @@
       if (!p_150943_.is(p_150944_.getItem())) {
          return false;
       } else {
-         return p_150943_.isEmpty() && p_150944_.isEmpty() ? true : Objects.equals(p_150943_.tag, p_150944_.tag);
+         return p_150943_.isEmpty() && p_150944_.isEmpty() ? true : Objects.equals(p_150943_.tag, p_150944_.tag) && p_150943_.areCapsCompatible(p_150944_);
       }
    }
 
@@ -527,7 +_,7 @@
 
    public void setTag(@Nullable CompoundTag p_41752_) {
       this.tag = p_41752_;
-      if (this.getItem().canBeDepleted()) {
+      if (this.getItem().isDamageable(this)) {
          this.setDamageValue(this.getDamageValue());
       }
 
@@ -588,7 +_,7 @@
 
    public List<Component> getTooltipLines(@Nullable Player p_41652_, TooltipFlag p_41653_) {
       List<Component> list = Lists.newArrayList();
-      MutableComponent mutablecomponent = Component.empty().append(this.getHoverName()).withStyle(this.getRarity().color);
+      MutableComponent mutablecomponent = Component.empty().append(this.getHoverName()).withStyle(this.getRarity().getStyleModifier());
       if (this.hasCustomHoverName()) {
          mutablecomponent.withStyle(ChatFormatting.ITALIC);
       }
@@ -735,6 +_,7 @@
          list.add(DISABLED_ITEM_TOOLTIP);
       }
 
+      net.minecraftforge.event.ForgeEventFactory.onItemTooltip(this, p_41652_, list, p_41653_);
       return list;
    }
 
@@ -743,7 +_,7 @@
    }
 
    private int getHideFlags() {
-      return this.hasTag() && this.tag.contains("HideFlags", 99) ? this.tag.getInt("HideFlags") : 0;
+      return this.hasTag() && this.tag.contains("HideFlags", 99) ? this.tag.getInt("HideFlags") : this.getItem().getDefaultTooltipHideFlags(this);
    }
 
    public void hideTooltipPart(ItemStack.TooltipPart p_41655_) {
@@ -863,9 +_,10 @@
             }
          }
       } else {
-         multimap = this.getItem().getDefaultAttributeModifiers(p_41639_);
+         multimap = this.getItem().getAttributeModifiers(p_41639_, this);
       }
 
+      multimap = net.minecraftforge.common.ForgeHooks.getAttributeModifiers(this, p_41639_, multimap);
       return multimap;
    }
 
@@ -893,7 +_,7 @@
 
       MutableComponent mutablecomponent1 = ComponentUtils.wrapInSquareBrackets(mutablecomponent);
       if (!this.isEmpty()) {
-         mutablecomponent1.withStyle(this.getRarity().color).withStyle((p_220170_) -> {
+         mutablecomponent1.withStyle(this.getRarity().getStyleModifier()).withStyle((p_220170_) -> {
             return p_220170_.withHoverEvent(new HoverEvent(HoverEvent.Action.SHOW_ITEM, new HoverEvent.ItemStackInfo(this)));
          });
       }
@@ -945,12 +_,31 @@
       this.getItem().onUseTick(p_41732_, p_41733_, this, p_41734_);
    }
 
+   /** @deprecated Forge: Use {@linkplain net.minecraftforge.common.extensions.IForgeItemStack#onDestroyed(ItemEntity, net.minecraft.world.damagesource.DamageSource) damage source sensitive version} */
+   @Deprecated
    public void onDestroyed(ItemEntity p_150925_) {
       this.getItem().onDestroyed(p_150925_);
    }
 
    public boolean isEdible() {
       return this.getItem().isEdible();
+   }
+
+   // FORGE START
+   public void deserializeNBT(CompoundTag nbt) {
+      final ItemStack itemStack = ItemStack.of(nbt);
+      this.setTag(itemStack.getTag());
+      if (itemStack.capNBT != null) deserializeCaps(itemStack.capNBT);
+   }
+
+   /**
+    * Set up forge's ItemStack additions.
+    */
+   private void forgeInit() {
+      if (this.delegate != null) {
+         this.gatherCapabilities(() -> item.initCapabilities(this, this.capNBT));
+         if (this.capNBT != null) deserializeCaps(this.capNBT);
+      }
    }
 
    public SoundEvent getDrinkingSound() {
