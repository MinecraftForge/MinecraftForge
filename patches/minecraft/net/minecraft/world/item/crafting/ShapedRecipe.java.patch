--- a/net/minecraft/world/item/crafting/ShapedRecipe.java
+++ b/net/minecraft/world/item/crafting/ShapedRecipe.java
@@ -21,21 +_,40 @@
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Level;
 
-public class ShapedRecipe implements CraftingRecipe {
+public class ShapedRecipe implements CraftingRecipe, net.minecraftforge.common.crafting.IShapedRecipe<CraftingContainer> {
+   static int MAX_WIDTH = 3;
+   static int MAX_HEIGHT = 3;
+   /**
+    * Expand the max width and height allowed in the deserializer.
+    * This should be called by modders who add custom crafting tables that are larger than the vanilla 3x3.
+    * @param width your max recipe width
+    * @param height your max recipe height
+    */
+   public static void setCraftingSize(int width, int height) {
+      if (MAX_WIDTH < width) MAX_WIDTH = width;
+      if (MAX_HEIGHT < height) MAX_HEIGHT = height;
+   }
+
    final int f_44146_;
    final int f_44147_;
    final NonNullList<Ingredient> f_44148_;
    final ItemStack f_44149_;
    private final ResourceLocation f_44150_;
    final String f_44151_;
+   private final String category;
 
    public ShapedRecipe(ResourceLocation p_44153_, String p_44154_, int p_44155_, int p_44156_, NonNullList<Ingredient> p_44157_, ItemStack p_44158_) {
+      this(p_44153_, p_44154_, p_44155_, p_44156_, p_44157_, p_44158_, null);
+   }
+
+   public ShapedRecipe(ResourceLocation p_44153_, String p_44154_, int p_44155_, int p_44156_, NonNullList<Ingredient> p_44157_, ItemStack p_44158_, String category) {
       this.f_44150_ = p_44153_;
       this.f_44151_ = p_44154_;
       this.f_44146_ = p_44155_;
       this.f_44147_ = p_44156_;
       this.f_44148_ = p_44157_;
       this.f_44149_ = p_44158_;
+      this.category = category;
    }
 
    public ResourceLocation m_6423_() {
@@ -50,6 +_,10 @@
       return this.f_44151_;
    }
 
+   public String getCategory() {
+      return this.category;
+   }
+
    public ItemStack m_8043_() {
       return this.f_44149_;
    }
@@ -109,10 +_,20 @@
       return this.f_44146_;
    }
 
+   @Override
+   public int getRecipeWidth() {
+      return m_44220_();
+   }
+
    public int m_44221_() {
       return this.f_44147_;
    }
 
+   @Override
+   public int getRecipeHeight() {
+      return m_44221_();
+   }
+
    static NonNullList<Ingredient> m_44202_(String[] p_44203_, Map<String, Ingredient> p_44204_, int p_44205_, int p_44206_) {
       NonNullList<Ingredient> nonnulllist = NonNullList.m_122780_(p_44205_ * p_44206_, Ingredient.f_43901_);
       Set<String> set = Sets.newHashSet(p_44204_.keySet());
@@ -179,7 +_,7 @@
       return nonnulllist.isEmpty() || nonnulllist.stream().filter((p_151277_) -> {
          return !p_151277_.m_43947_();
       }).anyMatch((p_151273_) -> {
-         return p_151273_.m_43908_().length == 0;
+         return net.minecraftforge.common.ForgeHooks.hasNoElements(p_151273_);
       });
    }
 
@@ -201,15 +_,15 @@
 
    static String[] m_44196_(JsonArray p_44197_) {
       String[] astring = new String[p_44197_.size()];
-      if (astring.length > 3) {
-         throw new JsonSyntaxException("Invalid pattern: too many rows, 3 is maximum");
+      if (astring.length > MAX_HEIGHT) {
+         throw new JsonSyntaxException("Invalid pattern: too many rows, " + MAX_HEIGHT + " is maximum");
       } else if (astring.length == 0) {
          throw new JsonSyntaxException("Invalid pattern: empty pattern not allowed");
       } else {
          for(int i = 0; i < astring.length; ++i) {
             String s = GsonHelper.m_13805_(p_44197_.get(i), "pattern[" + i + "]");
-            if (s.length() > 3) {
-               throw new JsonSyntaxException("Invalid pattern: too many columns, 3 is maximum");
+            if (s.length() > MAX_WIDTH) {
+               throw new JsonSyntaxException("Invalid pattern: too many columns, " + MAX_WIDTH + " is maximum");
             }
 
             if (i > 0 && astring[0].length() != s.length()) {
@@ -243,17 +_,7 @@
    }
 
    public static ItemStack m_151274_(JsonObject p_151275_) {
-      Item item = m_151278_(p_151275_);
-      if (p_151275_.has("data")) {
-         throw new JsonParseException("Disallowed data tag found");
-      } else {
-         int i = GsonHelper.m_13824_(p_151275_, "count", 1);
-         if (i < 1) {
-            throw new JsonSyntaxException("Invalid output count: " + i);
-         } else {
-            return new ItemStack(item, i);
-         }
-      }
+      return net.minecraftforge.common.crafting.CraftingHelper.getItemStack(p_151275_, true, true);
    }
 
    public static Item m_151278_(JsonObject p_151279_) {
@@ -269,21 +_,24 @@
    }
 
    public static class Serializer implements RecipeSerializer<ShapedRecipe> {
+      private static final ResourceLocation NAME = new ResourceLocation("minecraft", "crafting_shaped");
       public ShapedRecipe m_6729_(ResourceLocation p_44236_, JsonObject p_44237_) {
          String s = GsonHelper.m_13851_(p_44237_, "group", "");
+         String forgeRecipeCategory = GsonHelper.m_13851_(p_44237_, "forge:category", "");
          Map<String, Ingredient> map = ShapedRecipe.m_44210_(GsonHelper.m_13930_(p_44237_, "key"));
          String[] astring = ShapedRecipe.m_44186_(ShapedRecipe.m_44196_(GsonHelper.m_13933_(p_44237_, "pattern")));
          int i = astring[0].length();
          int j = astring.length;
          NonNullList<Ingredient> nonnulllist = ShapedRecipe.m_44202_(astring, map, i, j);
          ItemStack itemstack = ShapedRecipe.m_151274_(GsonHelper.m_13930_(p_44237_, "result"));
-         return new ShapedRecipe(p_44236_, s, i, j, nonnulllist, itemstack);
+         return new ShapedRecipe(p_44236_, s, i, j, nonnulllist, itemstack, forgeRecipeCategory);
       }
 
       public ShapedRecipe m_8005_(ResourceLocation p_44239_, FriendlyByteBuf p_44240_) {
          int i = p_44240_.m_130242_();
          int j = p_44240_.m_130242_();
          String s = p_44240_.m_130277_();
+         String forgeRecipeCategory = p_44240_.m_130277_();
          NonNullList<Ingredient> nonnulllist = NonNullList.m_122780_(i * j, Ingredient.f_43901_);
 
          for(int k = 0; k < nonnulllist.size(); ++k) {
@@ -291,13 +_,14 @@
          }
 
          ItemStack itemstack = p_44240_.m_130267_();
-         return new ShapedRecipe(p_44239_, s, i, j, nonnulllist, itemstack);
+         return new ShapedRecipe(p_44239_, s, i, j, nonnulllist, itemstack, forgeRecipeCategory);
       }
 
       public void m_6178_(FriendlyByteBuf p_44227_, ShapedRecipe p_44228_) {
          p_44227_.m_130130_(p_44228_.f_44146_);
          p_44227_.m_130130_(p_44228_.f_44147_);
          p_44227_.m_130070_(p_44228_.f_44151_);
+         p_44227_.m_130070_(p_44228_.category);
 
          for(Ingredient ingredient : p_44228_.f_44148_) {
             ingredient.m_43923_(p_44227_);
