--- a/net/minecraft/world/level/Level.java
+++ b/net/minecraft/world/level/Level.java
@@ -70,7 +_,7 @@
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.scores.Scoreboard;
 
-public abstract class Level implements LevelAccessor, AutoCloseable {
+public abstract class Level extends net.minecraftforge.common.capabilities.CapabilityProvider<Level> implements LevelAccessor, AutoCloseable, net.minecraftforge.common.extensions.IForgeLevel {
    public static final Codec<ResourceKey<Level>> f_46427_ = ResourceKey.m_195966_(Registries.f_256858_);
    public static final ResourceKey<Level> f_46428_ = ResourceKey.m_135785_(Registries.f_256858_, new ResourceLocation("overworld"));
    public static final ResourceKey<Level> f_46429_ = ResourceKey.m_135785_(Registries.f_256858_, new ResourceLocation("the_nether"));
@@ -111,8 +_,14 @@
    private final RegistryAccess f_268710_;
    private final DamageSources f_268497_;
    private long f_186455_;
+   public boolean restoringBlockSnapshots = false;
+   public boolean captureBlockSnapshots = false;
+   public java.util.ArrayList<net.minecraftforge.common.util.BlockSnapshot> capturedBlockSnapshots = new java.util.ArrayList<>();
+   private final java.util.ArrayList<BlockEntity> freshBlockEntities = new java.util.ArrayList<>();
+   private final java.util.ArrayList<BlockEntity> pendingFreshBlockEntities = new java.util.ArrayList<>();
 
    protected Level(WritableLevelData p_270739_, ResourceKey<Level> p_270683_, RegistryAccess p_270200_, Holder<DimensionType> p_270240_, Supplier<ProfilerFiller> p_270692_, boolean p_270904_, boolean p_270470_, long p_270248_, int p_270466_) {
+      super(Level.class);
       this.f_46446_ = p_270692_;
       this.f_46442_ = p_270739_;
       this.f_204147_ = p_270240_;
@@ -199,17 +_,45 @@
       } else {
          LevelChunk levelchunk = this.m_46745_(p_46605_);
          Block block = p_46606_.m_60734_();
+
+         p_46605_ = p_46605_.m_7949_(); // Forge - prevent mutable BlockPos leaks
+         net.minecraftforge.common.util.BlockSnapshot blockSnapshot = null;
+         if (this.captureBlockSnapshots && !this.f_46443_) {
+             blockSnapshot = net.minecraftforge.common.util.BlockSnapshot.create(this.f_46421_, this, p_46605_, p_46607_);
+             this.capturedBlockSnapshots.add(blockSnapshot);
+         }
+
+         BlockState old = m_8055_(p_46605_);
+         int oldLight = old.getLightEmission(this, p_46605_);
+         int oldOpacity = old.m_60739_(this, p_46605_);
+
          BlockState blockstate = levelchunk.m_6978_(p_46605_, p_46606_, (p_46607_ & 64) != 0);
          if (blockstate == null) {
+            if (blockSnapshot != null) this.capturedBlockSnapshots.remove(blockSnapshot);
             return false;
          } else {
             BlockState blockstate1 = this.m_8055_(p_46605_);
-            if ((p_46607_ & 128) == 0 && blockstate1 != blockstate && (blockstate1.m_60739_(this, p_46605_) != blockstate.m_60739_(this, p_46605_) || blockstate1.m_60791_() != blockstate.m_60791_() || blockstate1.m_60787_() || blockstate.m_60787_())) {
+            if ((p_46607_ & 128) == 0 && blockstate1 != blockstate && (blockstate1.m_60739_(this, p_46605_) != oldOpacity || blockstate1.getLightEmission(this, p_46605_) != oldLight || blockstate1.m_60787_() || blockstate.m_60787_())) {
                this.m_46473_().m_6180_("queueCheckLight");
                this.m_7726_().m_7827_().m_7174_(p_46605_);
                this.m_46473_().m_7238_();
             }
 
+            if (blockSnapshot == null) { // Don't notify clients or update physics while capturing blockstates
+               this.markAndNotifyBlock(p_46605_, levelchunk, blockstate, p_46606_, p_46607_, p_46608_);
+            }
+
+            return true;
+         }
+      }
+   }
+
+   // Split off from original setBlockState(BlockPos, BlockState, int, int) method in order to directly send client and physic updates
+   public void markAndNotifyBlock(BlockPos p_46605_, @Nullable LevelChunk levelchunk, BlockState blockstate, BlockState p_46606_, int p_46607_, int p_46608_) {
+      Block block = p_46606_.m_60734_();
+      BlockState blockstate1 = m_8055_(p_46605_);
+      {
+         {
             if (blockstate1 == p_46606_) {
                if (blockstate != blockstate1) {
                   this.m_6550_(p_46605_, blockstate, blockstate1);
@@ -234,9 +_,8 @@
                }
 
                this.m_6559_(p_46605_, blockstate, blockstate1);
+               p_46606_.onBlockStateChange(this, p_46605_, blockstate);
             }
-
-            return true;
          }
       }
    }
@@ -286,6 +_,7 @@
    }
 
    public void m_46672_(BlockPos p_46673_, Block p_46674_) {
+      net.minecraftforge.event.ForgeEventFactory.onNeighborNotify(this, p_46673_, this.m_8055_(p_46673_), java.util.EnumSet.allOf(Direction.class), false).isCanceled();
    }
 
    public void m_46590_(BlockPos p_46591_, Block p_46592_, Direction p_46593_) {
@@ -405,10 +_,26 @@
       (this.f_151504_ ? this.f_151503_ : this.f_151512_).add(p_151526_);
    }
 
+   public void addFreshBlockEntities(java.util.Collection<BlockEntity> beList) {
+      if (this.f_151504_) {
+         this.pendingFreshBlockEntities.addAll(beList);
+      } else {
+         this.freshBlockEntities.addAll(beList);
+      }
+   }
+
    protected void m_46463_() {
       ProfilerFiller profilerfiller = this.m_46473_();
       profilerfiller.m_6180_("blockEntities");
+      if (!this.pendingFreshBlockEntities.isEmpty()) {
+         this.freshBlockEntities.addAll(this.pendingFreshBlockEntities);
+         this.pendingFreshBlockEntities.clear();
+      }
       this.f_151504_ = true;
+      if (!this.freshBlockEntities.isEmpty()) {
+         this.freshBlockEntities.forEach(BlockEntity::onLoad);
+         this.freshBlockEntities.clear();
+      }
       if (!this.f_151503_.isEmpty()) {
          this.f_151512_.addAll(this.f_151503_);
          this.f_151503_.clear();
@@ -431,12 +_,19 @@
 
    public <T extends Entity> void m_46653_(Consumer<T> p_46654_, T p_46655_) {
       try {
+         net.minecraftforge.server.timings.TimeTracker.ENTITY_UPDATE.trackStart(p_46655_);
          p_46654_.accept(p_46655_);
       } catch (Throwable throwable) {
          CrashReport crashreport = CrashReport.m_127521_(throwable, "Ticking entity");
          CrashReportCategory crashreportcategory = crashreport.m_127514_("Entity being ticked");
          p_46655_.m_7976_(crashreportcategory);
+         if (net.minecraftforge.common.ForgeConfig.SERVER.removeErroringEntities.get()) {
+            com.mojang.logging.LogUtils.getLogger().error("{}", crashreport.m_127526_());
+            p_46655_.m_146870_();
+         } else
          throw new ReportedException(crashreport);
+      } finally {
+         net.minecraftforge.server.timings.TimeTracker.ENTITY_UPDATE.trackEnd(p_46655_);
       }
    }
 
@@ -478,7 +_,7 @@
             explosion$blockinteraction1 = this.m_255157_(GameRules.f_254629_);
             break;
          case MOB:
-            explosion$blockinteraction1 = this.m_46469_().m_46207_(GameRules.f_46132_) ? this.m_255157_(GameRules.f_254692_) : Explosion.BlockInteraction.KEEP;
+            explosion$blockinteraction1 = net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this, p_256233_) ? this.m_255157_(GameRules.f_254692_) : Explosion.BlockInteraction.KEEP;
             break;
          case TNT:
             explosion$blockinteraction1 = this.m_255157_(GameRules.f_254705_);
@@ -489,6 +_,7 @@
 
       Explosion.BlockInteraction explosion$blockinteraction = explosion$blockinteraction1;
       Explosion explosion = new Explosion(this, p_256233_, p_255861_, p_255867_, p_256447_, p_255732_, p_255717_, p_256013_, p_256228_, explosion$blockinteraction);
+      if (net.minecraftforge.event.ForgeEventFactory.onExplosionStart(this, explosion)) return explosion;
       explosion.m_46061_();
       explosion.m_46075_(p_256377_);
       return explosion;
@@ -520,6 +_,7 @@
       if (!this.m_151570_(p_46748_)) {
          this.m_46745_(p_46748_).m_8114_(p_46748_);
       }
+      this.m_46717_(p_46748_, m_8055_(p_46748_).m_60734_()); //Notify neighbors of changes
    }
 
    public boolean m_46749_(BlockPos p_46750_) {
@@ -590,6 +_,7 @@
             list.add(p_151522_);
          }
 
+         if (false)
          if (p_151522_ instanceof EnderDragon) {
             for(EnderDragonPart enderdragonpart : ((EnderDragon)p_151522_).m_31156_()) {
                if (p_151522_ != p_46536_ && p_46538_.test(enderdragonpart)) {
@@ -599,6 +_,11 @@
          }
 
       });
+      for (net.minecraftforge.entity.PartEntity<?> p : this.getPartEntities()) {
+         if (p != p_46536_ && p.m_20191_().m_82381_(p_46537_) && p_46538_.test(p)) {
+            list.add(p);
+         }
+      }
       return list;
    }
 
@@ -622,6 +_,8 @@
             }
          }
 
+
+         if (false)
          if (p_261454_ instanceof EnderDragon enderdragon) {
             for(EnderDragonPart enderdragonpart : enderdragon.m_31156_()) {
                T t = p_261885_.m_141992_(enderdragonpart);
@@ -636,6 +_,15 @@
 
          return AbortableIterationConsumer.Continuation.CONTINUE;
       });
+      for (net.minecraftforge.entity.PartEntity<?> p : this.getPartEntities()) {
+         T t = p_261885_.m_141992_(p);
+         if (t != null && t.m_20191_().m_82381_(p_262086_) && p_261688_.test(t)) {
+            p_262071_.add(t);
+            if (p_262071_.size() >= p_261858_) {
+               break;
+            }
+         }
+      }
    }
 
    @Nullable
@@ -690,7 +_,7 @@
    public int m_46681_(BlockPos p_46682_, Direction p_46683_) {
       BlockState blockstate = this.m_8055_(p_46682_);
       int i = blockstate.m_60746_(this, p_46682_, p_46683_);
-      return blockstate.m_60796_(this, p_46682_) ? Math.max(i, this.m_46751_(p_46682_)) : i;
+      return blockstate.shouldCheckWeakPower(this, p_46682_, p_46683_) ? Math.max(i, this.m_46751_(p_46682_)) : i;
    }
 
    public boolean m_46753_(BlockPos p_46754_) {
@@ -841,16 +_,15 @@
    public abstract Scoreboard m_6188_();
 
    public void m_46717_(BlockPos p_46718_, Block p_46719_) {
-      for(Direction direction : Direction.Plane.HORIZONTAL) {
+      for(Direction direction : Direction.values()) {
          BlockPos blockpos = p_46718_.m_121945_(direction);
          if (this.m_46805_(blockpos)) {
             BlockState blockstate = this.m_8055_(blockpos);
-            if (blockstate.m_60713_(Blocks.f_50328_)) {
-               this.m_213960_(blockstate, blockpos, p_46719_, p_46718_, false);
-            } else if (blockstate.m_60796_(this, blockpos)) {
+            blockstate.onNeighborChange(this, blockpos, p_46718_);
+            if (blockstate.m_60796_(this, blockpos)) {
                blockpos = blockpos.m_121945_(direction);
                blockstate = this.m_8055_(blockpos);
-               if (blockstate.m_60713_(Blocks.f_50328_)) {
+               if (blockstate.getWeakChanges(this, blockpos)) {
                   this.m_213960_(blockstate, blockpos, p_46719_, p_46718_, false);
                }
             }
@@ -935,6 +_,18 @@
 
    public BiomeManager m_7062_() {
       return this.f_46420_;
+   }
+
+   private double maxEntityRadius = 2.0D;
+   @Override
+   public double getMaxEntityRadius() {
+      return maxEntityRadius;
+   }
+   @Override
+   public double increaseMaxEntityRadius(double value) {
+      if (value > maxEntityRadius)
+         maxEntityRadius = value;
+      return maxEntityRadius;
    }
 
    public final boolean m_46659_() {
