--- a/net/minecraft/world/level/biome/Biome.java
+++ b/net/minecraft/world/level/biome/Biome.java
@@ -51,7 +_,7 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public final class Biome {
+public final class Biome extends net.minecraftforge.registries.ForgeRegistryEntry.UncheckedRegistryEntry<Biome> {
    public static final Logger f_47428_ = LogManager.getLogger();
    public static final Codec<Biome> f_47429_ = RecordCodecBuilder.create((p_47527_) -> {
       return p_47527_.group(Biome.ClimateSettings.f_47679_.forGetter((p_151717_) -> {
@@ -68,7 +_,9 @@
          return p_151707_.f_47438_;
       }), MobSpawnSettings.f_48327_.forGetter((p_151705_) -> {
          return p_151705_.f_47439_;
-      })).apply(p_47527_, Biome::new);
+      }), ResourceLocation.f_135803_.optionalFieldOf("forge:registry_name").forGetter(b -> Optional.ofNullable(b.getRegistryName())))
+      .apply(p_47527_, (climate, category, depth, scale, effects, gen, spawns, name) ->
+          net.minecraftforge.common.ForgeHooks.enhanceBiome(name.orElse(null), climate, category, depth, scale, effects, gen, spawns, p_47527_, Biome::new));
    });
    public static final Codec<Biome> f_47430_ = RecordCodecBuilder.create((p_47504_) -> {
       return p_47504_.group(Biome.ClimateSettings.f_47679_.forGetter((p_151703_) -> {
@@ -607,7 +_,7 @@
       }
    }
 
-   public static enum TemperatureModifier implements StringRepresentable {
+   public static enum TemperatureModifier implements StringRepresentable, net.minecraftforge.common.IExtensibleEnum {
       NONE("none") {
          public float m_8117_(BlockPos p_47767_, float p_47768_) {
             return p_47768_;
@@ -635,11 +_,30 @@
          return p_47753_;
       }));
 
-      public abstract float m_8117_(BlockPos p_47754_, float p_47755_);
+      public float m_8117_(BlockPos p_47754_, float p_47755_) { return this.temperatureModifier.modifyTemperature(p_47754_, p_47755_); }
 
       TemperatureModifier(String p_47745_) {
          this.f_47738_ = p_47745_;
       }
+
+      /* ***** FORGE START ***** */
+      private BiomeTemperatureModifier temperatureModifier;
+      private TemperatureModifier(String modifierName, BiomeTemperatureModifier temperatureModifier) {
+         this(modifierName);
+         this.temperatureModifier = temperatureModifier;
+      }
+      public static TemperatureModifier create(String name, String modifierName, BiomeTemperatureModifier temperatureModifier) {
+          throw new IllegalStateException("Enum not extended");
+      }
+      @Override
+      public void init() {
+         f_47739_.put(this.m_47758_(), this);
+      }
+      @FunctionalInterface
+      public interface BiomeTemperatureModifier {
+         float modifyTemperature(BlockPos pos, float noise);
+      }
+      /* ***** FORGE END ***** */
 
       public String m_47758_() {
          return this.f_47738_;
