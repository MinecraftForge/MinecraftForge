--- a/net/minecraft/world/level/storage/loot/LootPool.java
+++ b/net/minecraft/world/level/storage/loot/LootPool.java
@@ -31,17 +_,19 @@
 import org.apache.commons.lang3.mutable.MutableInt;
 
 public class LootPool {
-   final LootPoolEntryContainer[] f_79023_;
-   final LootItemCondition[] f_79024_;
+   private final String name;
+   private final List<LootPoolEntryContainer> f_79023_;
+   private final List<LootItemCondition> f_79024_;
    private final Predicate<LootContext> f_79025_;
    final LootItemFunction[] f_79026_;
    private final BiFunction<ItemStack, LootContext, ItemStack> f_79027_;
    NumberProvider f_79028_;
    NumberProvider f_79029_;
 
-   LootPool(LootPoolEntryContainer[] p_165128_, LootItemCondition[] p_165129_, LootItemFunction[] p_165130_, NumberProvider p_165131_, NumberProvider p_165132_) {
-      this.f_79023_ = p_165128_;
-      this.f_79024_ = p_165129_;
+   private LootPool(LootPoolEntryContainer[] p_165128_, LootItemCondition[] p_165129_, LootItemFunction[] p_165130_, NumberProvider p_165131_, NumberProvider p_165132_, String name) {
+      this.name = name;
+      this.f_79023_ = Lists.newArrayList(p_165128_);
+      this.f_79024_ = Lists.newArrayList(p_165129_);
       this.f_79025_ = LootItemConditions.m_81834_(p_165129_);
       this.f_79026_ = p_165130_;
       this.f_79027_ = LootItemFunctions.m_80770_(p_165130_);
@@ -97,21 +_,35 @@
    }
 
    public void m_79051_(ValidationContext p_79052_) {
-      for(int i = 0; i < this.f_79024_.length; ++i) {
-         this.f_79024_[i].m_6169_(p_79052_.m_79365_(".condition[" + i + "]"));
+      for(int i = 0; i < this.f_79024_.size(); ++i) {
+         this.f_79024_.get(i).m_6169_(p_79052_.m_79365_(".condition[" + i + "]"));
       }
 
       for(int j = 0; j < this.f_79026_.length; ++j) {
          this.f_79026_[j].m_6169_(p_79052_.m_79365_(".functions[" + j + "]"));
       }
 
-      for(int k = 0; k < this.f_79023_.length; ++k) {
-         this.f_79023_[k].m_6165_(p_79052_.m_79365_(".entries[" + k + "]"));
+      for(int k = 0; k < this.f_79023_.size(); ++k) {
+         this.f_79023_.get(k).m_6165_(p_79052_.m_79365_(".entries[" + k + "]"));
       }
 
       this.f_79028_.m_6169_(p_79052_.m_79365_(".rolls"));
       this.f_79029_.m_6169_(p_79052_.m_79365_(".bonusRolls"));
    }
+   //======================== FORGE START =============================================
+   private boolean isFrozen = false;
+   public void freeze() { this.isFrozen = true; }
+   public boolean isFrozen(){ return this.isFrozen; }
+   private void checkFrozen() {
+      if (this.isFrozen())
+         throw new RuntimeException("Attempted to modify LootPool after being frozen!");
+   }
+   public String getName(){ return this.name; }
+   public NumberProvider getRolls()      { return this.f_79028_; }
+   public NumberProvider getBonusRolls() { return this.f_79029_; }
+   public void setRolls     (NumberProvider v){ checkFrozen(); this.f_79028_ = v; }
+   public void setBonusRolls(NumberProvider v){ checkFrozen(); this.f_79029_ = v; }
+   //======================== FORGE END ===============================================
 
    public static LootPool.Builder m_79043_() {
       return new LootPool.Builder();
@@ -123,6 +_,7 @@
       private final List<LootItemFunction> f_79069_ = Lists.newArrayList();
       private NumberProvider f_79070_ = ConstantValue.m_165692_(1.0F);
       private NumberProvider f_79071_ = ConstantValue.m_165692_(0.0F);
+      private String name;
 
       public LootPool.Builder m_165133_(NumberProvider p_165134_) {
          this.f_79070_ = p_165134_;
@@ -153,11 +_,21 @@
          return this;
       }
 
+      public LootPool.Builder name(String name) {
+         this.name = name;
+         return this;
+      }
+
+      public LootPool.Builder bonusRolls(float min, float max) {
+         this.f_79071_ = net.minecraft.world.level.storage.loot.providers.number.UniformGenerator.m_165780_(min, max);
+         return this;
+      }
+
       public LootPool m_79082_() {
          if (this.f_79070_ == null) {
             throw new IllegalArgumentException("Rolls not set");
          } else {
-            return new LootPool(this.f_79067_.toArray(new LootPoolEntryContainer[0]), this.f_79068_.toArray(new LootItemCondition[0]), this.f_79069_.toArray(new LootItemFunction[0]), this.f_79070_, this.f_79071_);
+            return new LootPool(this.f_79067_.toArray(new LootPoolEntryContainer[0]), this.f_79068_.toArray(new LootItemCondition[0]), this.f_79069_.toArray(new LootItemFunction[0]), this.f_79070_, this.f_79071_, name);
          }
       }
    }
@@ -170,19 +_,21 @@
          LootItemFunction[] alootitemfunction = GsonHelper.m_13845_(jsonobject, "functions", new LootItemFunction[0], p_79092_, LootItemFunction[].class);
          NumberProvider numberprovider = GsonHelper.m_13836_(jsonobject, "rolls", p_79092_, NumberProvider.class);
          NumberProvider numberprovider1 = GsonHelper.m_13845_(jsonobject, "bonus_rolls", ConstantValue.m_165692_(0.0F), p_79092_, NumberProvider.class);
-         return new LootPool(alootpoolentrycontainer, alootitemcondition, alootitemfunction, numberprovider, numberprovider1);
+         return new LootPool(alootpoolentrycontainer, alootitemcondition, alootitemfunction, numberprovider, numberprovider1, net.minecraftforge.common.ForgeHooks.readPoolName(jsonobject));
       }
 
       public JsonElement serialize(LootPool p_79094_, Type p_79095_, JsonSerializationContext p_79096_) {
          JsonObject jsonobject = new JsonObject();
+         if (p_79094_.name != null && !p_79094_.name.startsWith("custom#"))
+            jsonobject.add("name", p_79096_.serialize(p_79094_.name));
          jsonobject.add("rolls", p_79096_.serialize(p_79094_.f_79028_));
          jsonobject.add("bonus_rolls", p_79096_.serialize(p_79094_.f_79029_));
          jsonobject.add("entries", p_79096_.serialize(p_79094_.f_79023_));
-         if (!ArrayUtils.isEmpty((Object[])p_79094_.f_79024_)) {
+         if (!p_79094_.f_79024_.isEmpty()) {
             jsonobject.add("conditions", p_79096_.serialize(p_79094_.f_79024_));
          }
 
-         if (!ArrayUtils.isEmpty((Object[])p_79094_.f_79026_)) {
+         if (!p_79094_.f_79024_.isEmpty()) {
             jsonobject.add("functions", p_79096_.serialize(p_79094_.f_79026_));
          }
 
