--- a/net/minecraft/world/level/material/Fluid.java
+++ b/net/minecraft/world/level/material/Fluid.java
@@ -18,7 +_,7 @@
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
-public abstract class Fluid {
+public abstract class Fluid extends net.minecraftforge.registries.ForgeRegistryEntry<Fluid> implements net.minecraftforge.common.extensions.IForgeFluid {
    public static final IdMapper<FluidState> f_76104_ = new IdMapper<>();
    protected final StateDefinition<Fluid, FluidState> f_76105_;
    private FluidState f_76103_;
@@ -96,6 +_,28 @@
    }
 
    public abstract VoxelShape m_7999_(FluidState p_76137_, BlockGetter p_76138_, BlockPos p_76139_);
+
+   private final net.minecraftforge.common.util.ReverseTagWrapper<Fluid> reverseTags = new net.minecraftforge.common.util.ReverseTagWrapper<>(this, net.minecraft.tags.FluidTags::m_144299_);
+   @Override
+   public java.util.Set<net.minecraft.resources.ResourceLocation> getTags() {
+      return reverseTags.getTagNames();
+   }
+
+   /**
+    * Creates the fluid attributes object, which will contain all the extended values for the fluid that aren't part of the vanilla system.
+    * Do not call this from outside. To retrieve the values use {@link Fluid#getAttributes()}
+    */
+   protected net.minecraftforge.fluids.FluidAttributes createAttributes()
+   {
+      return net.minecraftforge.common.ForgeHooks.createVanillaFluidAttributes(this);
+   }
+
+   private net.minecraftforge.fluids.FluidAttributes forgeFluidAttributes;
+   public final net.minecraftforge.fluids.FluidAttributes getAttributes() {
+      if (forgeFluidAttributes == null)
+         forgeFluidAttributes = createAttributes();
+      return forgeFluidAttributes;
+   }
 
    public Optional<SoundEvent> m_142520_() {
       return Optional.empty();
