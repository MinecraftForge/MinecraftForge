--- a/net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool.java
+++ b/net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool.java
@@ -74,9 +_,15 @@
       this.f_69251_ = p_69260_;
    }
 
+   public List<StructurePoolElement> getTemplates() {
+      List<StructurePoolElement> templatesCopy = Lists.newArrayList(f_69250_);
+      net.minecraftforge.common.ForgeHooks.modifyStructurePool(f_69248_, templatesCopy);
+      return templatesCopy;
+   }
+
    public int m_69268_(StructureManager p_69269_) {
       if (this.f_69252_ == Integer.MIN_VALUE) {
-         this.f_69252_ = this.f_69250_.stream().filter((p_161681_) -> {
+         this.f_69252_ = this.getTemplates().stream().filter((p_161681_) -> {
             return p_161681_ != EmptyPoolElement.f_68856_;
          }).mapToInt((p_161686_) -> {
             return p_161686_.m_6867_(p_69269_, BlockPos.f_121853_, Rotation.NONE).m_71057_();
@@ -91,26 +_,27 @@
    }
 
    public StructurePoolElement m_69273_(Random p_69274_) {
-      return this.f_69250_.get(p_69274_.nextInt(this.f_69250_.size()));
+      return this.getTemplates().get(p_69274_.nextInt(this.getTemplates().size()));
    }
 
    public List<StructurePoolElement> m_69276_(Random p_69277_) {
-      return ImmutableList.copyOf(ObjectArrays.shuffle(this.f_69250_.toArray(new StructurePoolElement[0]), p_69277_));
+      return ImmutableList.copyOf(ObjectArrays.shuffle(this.getTemplates().toArray(new StructurePoolElement[0]), p_69277_));
    }
 
    public ResourceLocation m_69275_() {
       return this.f_69248_;
    }
 
-   public int m_69278_() {
-      return this.f_69250_.size();
+   public boolean isNotEmpty() {
+      if (!this.f_69250_.isEmpty()) return true; // FORGE: avoid running modifiers when this list has elements
+      return !this.getTemplates().isEmpty();
    }
 
-   public static enum Projection implements StringRepresentable {
+   public static enum Projection implements StringRepresentable, net.minecraftforge.common.IExtensibleEnum {
       TERRAIN_MATCHING("terrain_matching", ImmutableList.of(new GravityProcessor(Heightmap.Types.WORLD_SURFACE_WG, -1))),
       RIGID("rigid", ImmutableList.of());
 
-      public static final Codec<StructureTemplatePool.Projection> f_69281_ = StringRepresentable.m_14350_(StructureTemplatePool.Projection::values, StructureTemplatePool.Projection::m_69295_);
+      public static final Codec<StructureTemplatePool.Projection> f_69281_ = net.minecraftforge.common.IExtensibleEnum.createCodecForExtensibleEnum(StructureTemplatePool.Projection::values, StructureTemplatePool.Projection::m_69295_);
       private static final Map<String, StructureTemplatePool.Projection> f_69282_ = Arrays.stream(values()).collect(Collectors.toMap(StructureTemplatePool.Projection::m_69297_, (p_69294_) -> {
          return p_69294_;
       }));
@@ -136,6 +_,16 @@
 
       public String m_7912_() {
          return this.f_69283_;
+      }
+
+      public static Projection create(String enumName, String p_i50487_3_, ImmutableList<StructureProcessor> p_i50487_4_) {
+         throw new IllegalStateException("Enum not extended");
+      }
+
+      @Override
+      @Deprecated
+      public void init() {
+         f_69282_.put(m_69297_(), this);
       }
    }
 }
