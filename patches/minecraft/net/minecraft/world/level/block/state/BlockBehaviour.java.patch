--- a/net/minecraft/world/level/block/state/BlockBehaviour.java
+++ b/net/minecraft/world/level/block/state/BlockBehaviour.java
@@ -102,6 +_,17 @@
       this.f_60438_ = p_60452_.f_60903_;
       this.f_243733_ = p_60452_.f_244138_;
       this.f_60439_ = p_60452_;
+      final ResourceLocation lootTableCache = p_60452_.f_60894_;
+      if (lootTableCache != null) {
+         this.lootTableSupplier = () -> lootTableCache;
+      } else if (p_60452_.lootTableSupplier != null) {
+         this.lootTableSupplier = p_60452_.lootTableSupplier;
+      } else {
+         this.lootTableSupplier = () -> {
+            ResourceLocation registryName = net.minecraftforge.registries.ForgeRegistries.BLOCKS.getKey((Block) this);
+            return new ResourceLocation(registryName.m_135827_(), "blocks/" + registryName.m_135815_());
+         };
+      }
    }
 
    /** @deprecated */
@@ -150,7 +_,7 @@
    /** @deprecated */
    @Deprecated
    public void m_6810_(BlockState p_60515_, Level p_60516_, BlockPos p_60517_, BlockState p_60518_, boolean p_60519_) {
-      if (p_60515_.m_155947_() && !p_60515_.m_60713_(p_60518_.m_60734_())) {
+      if (p_60515_.m_155947_() && (!p_60515_.m_60713_(p_60518_.m_60734_()) || !p_60518_.m_155947_())) {
          p_60516_.m_46747_(p_60517_);
       }
 
@@ -355,14 +_,15 @@
       if (f == -1.0F) {
          return 0.0F;
       } else {
-         int i = p_60467_.m_36298_(p_60466_) ? 30 : 100;
-         return p_60467_.m_36281_(p_60466_) / f / (float)i;
+         int i = net.minecraftforge.common.ForgeHooks.isCorrectToolForDrops(p_60466_, p_60467_) ? 30 : 100;
+         return p_60467_.getDigSpeed(p_60466_, p_60469_) / f / (float)i;
       }
    }
 
    /** @deprecated */
    @Deprecated
    public void m_213646_(BlockState p_222949_, ServerLevel p_222950_, BlockPos p_222951_, ItemStack p_222952_, boolean p_222953_) {
+      if (p_222953_) net.minecraftforge.common.ForgeHooks.dropXpForBlock(p_222949_, p_222950_, p_222951_, p_222952_);
    }
 
    /** @deprecated */
@@ -389,8 +_,7 @@
 
    public final ResourceLocation m_60589_() {
       if (this.f_60440_ == null) {
-         ResourceLocation resourcelocation = BuiltInRegistries.f_256975_.m_7981_(this.m_7374_());
-         this.f_60440_ = resourcelocation.m_246208_("blocks/");
+         this.f_60440_ = this.lootTableSupplier.get();
       }
 
       return this.f_60440_;
@@ -413,6 +_,14 @@
       return this.f_60439_.f_60888_;
    }
 
+   protected boolean isAir(BlockState state) {
+      return ((BlockStateBase)state).f_60596_;
+   }
+
+   /* ======================================== FORGE START ===================================== */
+   private final java.util.function.Supplier<ResourceLocation> lootTableSupplier;
+   /* ========================================= FORGE END ====================================== */
+
    public abstract static class BlockStateBase extends StateHolder<Block, BlockState> {
       private final int f_60594_;
       private final boolean f_60595_;
@@ -548,12 +_,14 @@
          return this.f_60595_;
       }
 
+      /** @deprecated Forge: Use {@link BlockState#getLightEmission(BlockGetter, BlockPos)} instead */
+      @Deprecated
       public int m_60791_() {
          return this.f_60594_;
       }
 
       public boolean m_60795_() {
-         return this.f_60596_;
+         return this.m_60734_().isAir((BlockState)this);
       }
 
       public boolean m_278200_() {
@@ -567,9 +_,11 @@
       }
 
       public MapColor m_284242_(BlockGetter p_285002_, BlockPos p_285293_) {
-         return this.f_283893_;
+         return m_60734_().getMapColor(this.m_7160_(), p_285002_, p_285293_, this.f_283893_);
       }
 
+      /** @deprecated use {@link BlockState#rotate(LevelAccessor, BlockPos, Rotation)} */
+      @Deprecated
       public BlockState m_60717_(Rotation p_60718_) {
          return this.m_60734_().m_6843_(this.m_7160_(), p_60718_);
       }
@@ -623,6 +_,8 @@
       }
 
       public PushReaction m_60811_() {
+         PushReaction reaction = m_60734_().getPistonPushReaction(m_7160_());
+         if (reaction != null) return reaction;
          return this.f_278134_;
       }
 
@@ -972,8 +_,9 @@
       boolean f_243850_ = true;
       NoteBlockInstrument f_279538_ = NoteBlockInstrument.HARP;
       boolean f_279630_;
+      private java.util.function.Supplier<ResourceLocation> lootTableSupplier;
       BlockBehaviour.StateArgumentPredicate<EntityType<?>> f_60897_ = (p_284893_, p_284894_, p_284895_, p_284896_) -> {
-         return p_284893_.m_60783_(p_284894_, p_284895_, Direction.UP) && p_284893_.m_60791_() < 14;
+         return p_284893_.m_60783_(p_284894_, p_284895_, Direction.UP) && p_284893_.getLightEmission(p_284894_, p_284895_) < 14;
       };
       BlockBehaviour.StatePredicate f_60898_ = (p_284888_, p_284889_, p_284890_) -> {
          return p_284888_.m_60838_(p_284889_, p_284890_);
@@ -1111,9 +_,15 @@
          return this;
       }
 
+      @Deprecated // FORGE: Use the variant that takes a Supplier below
       public BlockBehaviour.Properties m_60916_(Block p_60917_) {
-         this.f_60894_ = p_60917_.m_60589_();
+         this.lootTableSupplier = () -> net.minecraftforge.registries.ForgeRegistries.BLOCKS.getDelegateOrThrow(p_60917_).get().m_60589_();
          return this;
+      }
+
+      public BlockBehaviour.Properties lootFrom(java.util.function.Supplier<? extends Block> blockIn) {
+          this.lootTableSupplier = () -> blockIn.get().m_60589_();
+          return this;
       }
 
       public BlockBehaviour.Properties m_278183_() {
