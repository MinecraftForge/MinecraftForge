--- a/net/minecraft/world/level/block/StemBlock.java
+++ b/net/minecraft/world/level/block/StemBlock.java
@@ -79,9 +_,11 @@
 
     @Override
     protected void randomTick(BlockState p_222538_, ServerLevel p_222539_, BlockPos p_222540_, RandomSource p_222541_) {
+        if (!p_222539_.isAreaLoaded(p_222540_, 1)) return; // Forge: prevent loading unloaded chunks when checking neighbor's light
         if (p_222539_.getRawBrightness(p_222540_, 0) >= 9) {
             float f = CropBlock.getGrowthSpeed(this, p_222539_, p_222540_);
-            if (p_222541_.nextInt((int)(25.0F / f) + 1) == 0) {
+            var vanilla = p_222541_.nextInt((int)(25.0F / f) + 1) == 0;
+            if (net.minecraftforge.common.ForgeHooks.onCropsGrowPre(p_222539_, p_222540_, p_222538_, vanilla)) {
                 int i = p_222538_.getValue(AGE);
                 if (i < 7) {
                     p_222538_ = p_222538_.setValue(AGE, Integer.valueOf(i + 1));
@@ -100,6 +_,7 @@
                         }
                     }
                 }
+                net.minecraftforge.common.ForgeHooks.onCropsGrowPost(p_222539_, p_222540_, p_222538_);
             }
         }
     }
@@ -132,5 +_,10 @@
     @Override
     protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> p_57040_) {
         p_57040_.add(AGE);
+    }
+
+    @Override
+    public net.minecraftforge.common.PlantType getPlantType(BlockGetter world, BlockPos pos) {
+        return net.minecraftforge.common.PlantType.CROP;
     }
 }
