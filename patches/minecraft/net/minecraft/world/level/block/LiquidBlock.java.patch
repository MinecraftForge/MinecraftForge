--- a/net/minecraft/world/level/block/LiquidBlock.java
+++ b/net/minecraft/world/level/block/LiquidBlock.java
@@ -30,11 +_,13 @@
 
 public class LiquidBlock extends Block implements BucketPickup {
    public static final IntegerProperty f_54688_ = BlockStateProperties.f_61422_;
-   protected final FlowingFluid f_54689_;
+   @Deprecated // Use getFluid
+   private final FlowingFluid f_54689_;
    private final List<FluidState> f_54691_;
    public static final VoxelShape f_54690_ = Block.m_49796_(0.0D, 0.0D, 0.0D, 16.0D, 8.0D, 16.0D);
    public static final ImmutableList<Direction> f_181233_ = ImmutableList.of(Direction.DOWN, Direction.SOUTH, Direction.NORTH, Direction.EAST, Direction.WEST);
 
+   @Deprecated  // Forge: Use the constructor that takes a supplier
    public LiquidBlock(FlowingFluid p_54694_, BlockBehaviour.Properties p_54695_) {
       super(p_54695_);
       this.f_54689_ = p_54694_;
@@ -47,6 +_,19 @@
 
       this.f_54691_.add(p_54694_.m_75953_(8, true));
       this.m_49959_(this.f_49792_.m_61090_().m_61124_(f_54688_, Integer.valueOf(0)));
+      fluidStateCacheInitialized = true;
+      supplier = net.minecraftforge.registries.ForgeRegistries.FLUIDS.getDelegateOrThrow(p_54694_);
+   }
+
+   /**
+    * @param p_54694_ A fluid supplier such as {@link net.minecraftforge.registries.RegistryObject<FlowingFluid>}
+    */
+   public LiquidBlock(java.util.function.Supplier<? extends FlowingFluid> p_54694_, BlockBehaviour.Properties p_54695_) {
+      super(p_54695_);
+      this.f_54689_ = null;
+      this.f_54691_ = Lists.newArrayList();
+      this.m_49959_(this.f_49792_.m_61090_().m_61124_(f_54688_, Integer.valueOf(0)));
+      this.supplier = p_54694_;
    }
 
    public VoxelShape m_5939_(BlockState p_54760_, BlockGetter p_54761_, BlockPos p_54762_, CollisionContext p_54763_) {
@@ -71,6 +_,7 @@
 
    public FluidState m_5888_(BlockState p_54765_) {
       int i = p_54765_.m_61143_(f_54688_);
+      if (!fluidStateCacheInitialized) initFluidStateCache();
       return this.f_54691_.get(Math.min(i, 8));
    }
 
@@ -91,7 +_,7 @@
    }
 
    public void m_6807_(BlockState p_54754_, Level p_54755_, BlockPos p_54756_, BlockState p_54757_, boolean p_54758_) {
-      if (this.m_54696_(p_54755_, p_54756_, p_54754_)) {
+      if (!net.minecraftforge.fluids.FluidInteractionRegistry.canInteract(p_54755_, p_54756_)) {
          p_54755_.m_186469_(p_54756_, p_54754_.m_60819_().m_76152_(), this.f_54689_.m_6718_(p_54755_));
       }
 
@@ -106,12 +_,13 @@
    }
 
    public void m_6861_(BlockState p_54709_, Level p_54710_, BlockPos p_54711_, Block p_54712_, BlockPos p_54713_, boolean p_54714_) {
-      if (this.m_54696_(p_54710_, p_54711_, p_54709_)) {
+      if (!net.minecraftforge.fluids.FluidInteractionRegistry.canInteract(p_54710_, p_54711_)) {
          p_54710_.m_186469_(p_54711_, p_54709_.m_60819_().m_76152_(), this.f_54689_.m_6718_(p_54710_));
       }
 
    }
 
+   @Deprecated // FORGE: Use FluidInteractionRegistry#canInteract instead
    private boolean m_54696_(Level p_54697_, BlockPos p_54698_, BlockState p_54699_) {
       if (this.f_54689_.m_205067_(FluidTags.f_13132_)) {
          boolean flag = p_54697_.m_8055_(p_54698_.m_7495_()).m_60713_(Blocks.f_50136_);
@@ -150,6 +_,25 @@
          return new ItemStack(this.f_54689_.m_6859_());
       } else {
          return ItemStack.f_41583_;
+      }
+   }
+
+   // Forge start
+   private final java.util.function.Supplier<? extends net.minecraft.world.level.material.Fluid> supplier;
+   public FlowingFluid getFluid() {
+      return (FlowingFluid)supplier.get();
+   }
+
+   private boolean fluidStateCacheInitialized = false;
+   protected synchronized void initFluidStateCache() {
+      if (fluidStateCacheInitialized == false) {
+         this.f_54691_.add(getFluid().m_76068_(false));
+
+         for (int i = 1; i < 8; ++i)
+            this.f_54691_.add(getFluid().m_75953_(8 - i, false));
+
+         this.f_54691_.add(getFluid().m_75953_(8, true));
+         fluidStateCacheInitialized = true;
       }
    }
 
