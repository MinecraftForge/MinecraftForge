--- a/net/minecraft/world/level/block/StairBlock.java
+++ b/net/minecraft/world/level/block/StairBlock.java
@@ -81,11 +_,21 @@
       return voxelshape;
    }
 
+   @Deprecated // Forge: Use the other constructor that takes a Supplier
    public StairBlock(BlockState p_56862_, BlockBehaviour.Properties p_56863_) {
       super(p_56863_);
       this.registerDefaultState(this.stateDefinition.any().setValue(FACING, Direction.NORTH).setValue(HALF, Half.BOTTOM).setValue(SHAPE, StairsShape.STRAIGHT).setValue(WATERLOGGED, Boolean.valueOf(false)));
       this.base = p_56862_.getBlock();
       this.baseState = p_56862_;
+      this.stateSupplier = () -> p_56862_;
+   }
+
+   public StairBlock(java.util.function.Supplier<BlockState> state, BlockBehaviour.Properties properties) {
+      super(properties);
+      this.registerDefaultState(this.stateDefinition.any().setValue(FACING, Direction.NORTH).setValue(HALF, Half.BOTTOM).setValue(SHAPE, StairsShape.STRAIGHT).setValue(WATERLOGGED, Boolean.valueOf(false)));
+      this.base = Blocks.AIR; // These are unused, fields are redirected
+      this.baseState = Blocks.AIR.defaultBlockState();
+      this.stateSupplier = state;
    }
 
    public boolean useShapeForLightOcclusion(BlockState p_56967_) {
@@ -262,4 +_,14 @@
    public boolean isPathfindable(BlockState p_56891_, BlockGetter p_56892_, BlockPos p_56893_, PathComputationType p_56894_) {
       return false;
    }
+
+   // Forge Start
+   private final java.util.function.Supplier<BlockState> stateSupplier;
+   private Block getModelBlock() {
+       return getModelState().getBlock();
+   }
+   private BlockState getModelState() {
+       return stateSupplier.get();
+   }
+   // Forge end
 }
