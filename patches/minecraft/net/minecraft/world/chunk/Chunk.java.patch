--- a/net/minecraft/world/chunk/Chunk.java
+++ b/net/minecraft/world/chunk/Chunk.java
@@ -53,7 +53,7 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public class Chunk implements IChunk {
+public class Chunk implements IChunk, net.minecraftforge.common.extensions.IForgeChunk {
    private static final Logger LOGGER = LogManager.getLogger();
    public static final ChunkSection NULL_BLOCK_STORAGE = null;
    private final ChunkSection[] storageArrays;
@@ -125,6 +125,7 @@
       this.field_201621_s = p_i49379_6_;
       this.field_205325_u = p_i49379_7_;
       this.inhabitedTime = p_i49379_8_;
+      capabilities = net.minecraftforge.event.ForgeEventFactory.gatherCapabilities(this);
    }
 
    public Chunk(World p_i48703_1_, ChunkPrimer p_i48703_2_, int p_i48703_3_, int p_i48703_4_) {
@@ -1164,4 +1165,20 @@
       QUEUED,
       CHECK;
    }
+   
+   /* ======================================== FORGE START =====================================*/
+   
+   private final net.minecraftforge.common.capabilities.CapabilityDispatcher capabilities;
+   
+   @Nullable
+   public net.minecraftforge.common.capabilities.CapabilityDispatcher getCapabilities()
+   {
+       return capabilities;
 }
+
+   @Override
+   public <T> net.minecraftforge.common.capabilities.OptionalCapabilityInstance<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable EnumFacing facing)
+   {
+       return capabilities == null ? net.minecraftforge.common.capabilities.OptionalCapabilityInstance.empty() : capabilities.getCapability(capability, facing);
+   }
+}
