--- ../src-base/minecraft/net/minecraft/world/chunk/storage/AnvilChunkLoader.java
+++ ../src-work/minecraft/net/minecraft/world/chunk/storage/AnvilChunkLoader.java
@@ -47,9 +47,43 @@
         this.field_186055_e = p_i46673_2_;
     }
 
+    public boolean chunkExists(World world, int x, int z)
+    {
+        ChunkPos chunkcoordintpair = new ChunkPos(x, z);
+
+        if (this.field_75826_b.contains(chunkcoordintpair))
+        {
+            for(ChunkPos pendingChunkCoord : this.field_75828_a.keySet())
+            {
+                if (pendingChunkCoord.equals(chunkcoordintpair))
+                {
+                    return true;
+                }
+            }
+        }
+
+        return RegionFileCache.func_76550_a(this.field_75825_d, x, z).chunkExists(x & 31, z & 31);
+    }
+
+
     @Nullable
     public Chunk func_75815_a(World p_75815_1_, int p_75815_2_, int p_75815_3_) throws IOException
     {
+        Object[] data = this.loadChunk__Async(p_75815_1_, p_75815_2_, p_75815_3_);
+
+        if (data != null)
+        {
+            Chunk chunk = (Chunk) data[0];
+            NBTTagCompound nbttagcompound = (NBTTagCompound) data[1];
+            this.loadEntities(p_75815_1_, nbttagcompound.func_74775_l("Level"), chunk);
+            return chunk;
+        }
+
+        return null;
+    }
+
+    public Object[] loadChunk__Async(World p_75815_1_, int p_75815_2_, int p_75815_3_) throws IOException
+    {
         ChunkPos chunkpos = new ChunkPos(p_75815_2_, p_75815_3_);
         NBTTagCompound nbttagcompound = (NBTTagCompound)this.field_75828_a.get(chunkpos);
 
@@ -65,11 +99,17 @@
             nbttagcompound = this.field_186055_e.func_188257_a(FixTypes.CHUNK, CompressedStreamTools.func_74794_a(datainputstream));
         }
 
-        return this.func_75822_a(p_75815_1_, p_75815_2_, p_75815_3_, nbttagcompound);
+        return this.checkedReadChunkFromNBT__Async(p_75815_1_, p_75815_2_, p_75815_3_, nbttagcompound);
     }
 
     protected Chunk func_75822_a(World p_75822_1_, int p_75822_2_, int p_75822_3_, NBTTagCompound p_75822_4_)
     {
+        Object[] data = this.checkedReadChunkFromNBT__Async(p_75822_1_, p_75822_2_, p_75822_3_, p_75822_4_);
+        return data != null ? (Chunk)data[0] : null;
+    }
+
+    protected Object[] checkedReadChunkFromNBT__Async(World p_75822_1_, int p_75822_2_, int p_75822_3_, NBTTagCompound p_75822_4_)
+    {
         if (!p_75822_4_.func_150297_b("Level", 10))
         {
             field_151505_a.error("Chunk file at " + p_75822_2_ + "," + p_75822_3_ + " is missing level data, skipping");
@@ -93,10 +133,29 @@
                     field_151505_a.error("Chunk file at " + p_75822_2_ + "," + p_75822_3_ + " is in the wrong location; relocating. (Expected " + p_75822_2_ + ", " + p_75822_3_ + ", got " + chunk.field_76635_g + ", " + chunk.field_76647_h + ")");
                     nbttagcompound.func_74768_a("xPos", p_75822_2_);
                     nbttagcompound.func_74768_a("zPos", p_75822_3_);
+
+                    // Have to move tile entities since we don't load them at this stage
+                    NBTTagList _tileEntities = nbttagcompound.func_150295_c("TileEntities", 10);
+
+                    if (_tileEntities != null)
+                    {
+                        for (int te = 0; te < _tileEntities.func_74745_c(); te++)
+                        {
+                            NBTTagCompound _nbt = (NBTTagCompound) _tileEntities.func_150305_b(te);
+                            _nbt.func_74768_a("x", p_75822_2_ * 16 + (_nbt.func_74762_e("x") - chunk.field_76635_g * 16));
+                            _nbt.func_74768_a("z", p_75822_3_ * 16 + (_nbt.func_74762_e("z") - chunk.field_76647_h * 16));
+                        }
+                    }
+
                     chunk = this.func_75823_a(p_75822_1_, nbttagcompound);
                 }
 
-                return chunk;
+                Object[] data = new Object[2];
+                data[0] = chunk;
+                data[1] = p_75822_4_;
+                // event is fired in ChunkIOProvider.callStage2 since it must be fired after TE's load.
+                // MinecraftForge.EVENT_BUS.post(new ChunkDataEvent.Load(chunk, par4NBTTagCompound));
+                return data;
             }
         }
     }
@@ -112,6 +171,7 @@
             nbttagcompound.func_74782_a("Level", nbttagcompound1);
             nbttagcompound.func_74768_a("DataVersion", 184);
             this.func_75820_a(p_75816_2_, p_75816_1_, nbttagcompound1);
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkDataEvent.Save(p_75816_2_, nbttagcompound));
             this.func_75824_a(p_75816_2_.func_76632_l(), nbttagcompound);
         }
         catch (Exception exception)
@@ -195,13 +255,7 @@
         {
             this.field_183014_e = true;
 
-            while (true)
-            {
-                if (this.func_75814_c())
-                {
-                    continue;
-                }
-            }
+            while (this.func_75814_c()); // Fernflower decompile issue...
         }
         finally
         {
@@ -267,8 +321,17 @@
 
                 if (entity.func_70039_c(nbttagcompound2))
                 {
+                    try
+                    {
                     p_75820_1_.func_177409_g(true);
                     nbttaglist1.func_74742_a(nbttagcompound2);
+                    }
+                    catch (Exception e)
+                    {
+                        net.minecraftforge.fml.common.FMLLog.log(org.apache.logging.log4j.Level.ERROR, e,
+                                "An Entity type %s has thrown an exception trying to write state. It will not persist. Report this to the mod author",
+                                entity.getClass().getName());
+                    }
                 }
             }
         }
@@ -278,8 +341,17 @@
 
         for (TileEntity tileentity : p_75820_1_.func_177434_r().values())
         {
+            try
+            {
             NBTTagCompound nbttagcompound3 = tileentity.func_189515_b(new NBTTagCompound());
             nbttaglist2.func_74742_a(nbttagcompound3);
+            }
+            catch (Exception e)
+            {
+                net.minecraftforge.fml.common.FMLLog.log(org.apache.logging.log4j.Level.ERROR, e,
+                        "A TileEntity type %s has throw an exception trying to write state. It will not persist. Report this to the mod author",
+                        tileentity.getClass().getName());
+            }
         }
 
         p_75820_3_.func_74782_a("TileEntities", nbttaglist2);
@@ -348,6 +420,12 @@
             chunk.func_76616_a(p_75823_2_.func_74770_j("Biomes"));
         }
 
+        // End this method here and split off entity loading to another method
+        return chunk;
+    }
+
+    public void loadEntities(World p_75823_1_, NBTTagCompound p_75823_2_, Chunk chunk)
+    {
         NBTTagList nbttaglist1 = p_75823_2_.func_150295_c("Entities", 10);
 
         if (nbttaglist1 != null)
@@ -400,8 +478,6 @@
                 }
             }
         }
-
-        return chunk;
     }
 
     @Nullable
