--- a/net/minecraft/world/dimension/Dimension.java
+++ b/net/minecraft/world/dimension/Dimension.java
@@ -12,7 +12,7 @@
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
 
-public abstract class Dimension {
+public abstract class Dimension implements net.minecraftforge.common.extensions.IForgeDimension {
    public static final float[] field_111203_a = new float[]{1.0F, 0.75F, 0.5F, 0.25F, 0.0F, 0.25F, 0.5F, 0.75F};
    protected final World field_76579_a;
    private final DimensionType field_222669_f;
@@ -63,7 +63,7 @@
 
    @OnlyIn(Dist.CLIENT)
    public float func_76571_f() {
-      return 128.0F;
+      return this.getWorld().func_72912_H().func_76067_t().getCloudHeight();
    }
 
    @OnlyIn(Dist.CLIENT)
@@ -78,7 +78,7 @@
 
    @OnlyIn(Dist.CLIENT)
    public double func_76565_k() {
-      return this.field_76579_a.func_72912_H().func_76067_t() == WorldType.field_77138_c ? 1.0D : 0.03125D;
+      return this.field_76579_a.func_72912_H().func_76067_t().voidFadeMagnitude();
    }
 
    public boolean func_177500_n() {
@@ -107,6 +107,7 @@
    public void func_186059_r() {
    }
 
+   @Deprecated //Forge: Use WorldType.createChunkGenerator
    public abstract ChunkGenerator<?> func_186060_c();
 
    @Nullable
@@ -127,5 +128,64 @@
    @OnlyIn(Dist.CLIENT)
    public abstract boolean func_76568_b(int p_76568_1_, int p_76568_2_);
 
-   public abstract DimensionType func_186058_p();
+   public DimensionType func_186058_p() {
+       return this.field_222669_f;
+   }
+
+   /*======================================= Forge Start =========================================*/
+   private net.minecraftforge.client.IRenderHandler skyRenderer = null;
+   private net.minecraftforge.client.IRenderHandler cloudRenderer = null;
+   private net.minecraftforge.client.IRenderHandler weatherRenderer = null;
+
+   @Nullable
+   @OnlyIn(Dist.CLIENT)
+   @Override
+   public net.minecraftforge.client.IRenderHandler getSkyRenderer() {
+      return this.skyRenderer;
+   }
+
+   @OnlyIn(Dist.CLIENT)
+   @Override
+   public void setSkyRenderer(net.minecraftforge.client.IRenderHandler skyRenderer) {
+      this.skyRenderer = skyRenderer;
+   }
+
+   @Nullable
+   @OnlyIn(Dist.CLIENT)
+   @Override
+   public net.minecraftforge.client.IRenderHandler getCloudRenderer() {
+      return cloudRenderer;
+   }
+
+   @OnlyIn(Dist.CLIENT)
+   @Override
+   public void setCloudRenderer(net.minecraftforge.client.IRenderHandler renderer) {
+      cloudRenderer = renderer;
+   }
+
+   @Nullable
+   @OnlyIn(Dist.CLIENT)
+   @Override
+   public net.minecraftforge.client.IRenderHandler getWeatherRenderer() {
+      return weatherRenderer;
+   }
+
+   @OnlyIn(Dist.CLIENT)
+   @Override
+   public void setWeatherRenderer(net.minecraftforge.client.IRenderHandler renderer) {
+      weatherRenderer = renderer;
+   }
+
+   @Override
+   public void resetRainAndThunder() {
+      field_76579_a.func_72912_H().func_76080_g(0);
+      field_76579_a.func_72912_H().func_76084_b(false);
+      field_76579_a.func_72912_H().func_76090_f(0);
+      field_76579_a.func_72912_H().func_76069_a(false);
+   }
+
+   @Override
+   public World getWorld() {
+      return this.field_76579_a;
+   }
 }
