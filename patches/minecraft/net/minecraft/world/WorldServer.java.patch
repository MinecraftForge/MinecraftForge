--- a/net/minecraft/world/WorldServer.java
+++ b/net/minecraft/world/WorldServer.java
@@ -86,7 +86,7 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public class WorldServer extends World implements IThreadListener {
+public class WorldServer extends World implements IThreadListener, net.minecraftforge.common.extensions.IForgeWorldServer {
    private static final Logger field_147491_a = LogManager.getLogger();
    private final MinecraftServer field_73061_a;
    private final EntityTracker field_73062_L;
@@ -106,6 +106,9 @@
    protected final VillageSiege field_175740_d = new VillageSiege(this);
    ObjectLinkedOpenHashSet<BlockEventData> field_147490_S = new ObjectLinkedOpenHashSet<>();
    private boolean field_211159_Q;
+   /** Stores the recently processed (lighting) chunks */
+   protected java.util.Set<ChunkPos> doneChunks = new java.util.HashSet<ChunkPos>();
+   public List<Teleporter> customTeleporters = new java.util.ArrayList<Teleporter>();
 
    public WorldServer(MinecraftServer p_i49819_1_, ISaveHandler p_i49819_2_, WorldSavedDataStorage p_i49819_3_, WorldInfo p_i49819_4_, DimensionType p_i49819_5_, Profiler p_i49819_6_) {
       super(p_i49819_2_, p_i49819_3_, p_i49819_4_, p_i49819_5_.func_186070_d(), p_i49819_6_, false);
@@ -122,19 +125,20 @@
 
    public WorldServer func_212251_i__() {
       String s = VillageCollection.func_176062_a(this.field_73011_w);
-      VillageCollection villagecollection = this.func_212411_a(DimensionType.OVERWORLD, VillageCollection::new, s);
+      DimensionType key = func_201675_m().func_186058_p().isVanilla() ? DimensionType.OVERWORLD : func_201675_m().func_186058_p();
+      VillageCollection villagecollection = this.func_212411_a(key, VillageCollection::new, s);
       if (villagecollection == null) {
          this.field_72982_D = new VillageCollection(this);
-         this.func_212409_a(DimensionType.OVERWORLD, s, this.field_72982_D);
+         this.func_212409_a(key, s, this.field_72982_D);
       } else {
          this.field_72982_D = villagecollection;
          this.field_72982_D.func_82566_a(this);
       }
 
-      ScoreboardSaveData scoreboardsavedata = this.func_212411_a(DimensionType.OVERWORLD, ScoreboardSaveData::new, "scoreboard");
+      ScoreboardSaveData scoreboardsavedata = this.func_212411_a(func_201675_m().func_186058_p(), ScoreboardSaveData::new, "scoreboard");
       if (scoreboardsavedata == null) {
          scoreboardsavedata = new ScoreboardSaveData();
-         this.func_212409_a(DimensionType.OVERWORLD, "scoreboard", scoreboardsavedata);
+         this.func_212409_a(func_201675_m().func_186058_p(), "scoreboard", scoreboardsavedata);
       }
 
       scoreboardsavedata.func_96499_a(this.field_73061_a.func_200251_aP());
@@ -150,6 +154,7 @@
          this.func_175723_af().func_177750_a(this.field_72986_A.func_176137_E());
       }
 
+      this.initCapabilities();
       return this;
    }
 
@@ -163,8 +168,8 @@
       this.field_73020_y.func_201711_g().func_202090_b().func_73660_a();
       if (this.func_73056_e()) {
          if (this.func_82736_K().func_82766_b("doDaylightCycle")) {
-            long i = this.field_72986_A.func_76073_f() + 24000L;
-            this.field_72986_A.func_76068_b(i - i % 24000L);
+            long i = this.func_72820_D() + 24000L;
+            this.func_72877_b(i - i % 24000L);
          }
 
          this.func_73053_d();
@@ -185,7 +190,7 @@
 
       this.field_72986_A.func_82572_b(this.field_72986_A.func_82573_f() + 1L);
       if (this.func_82736_K().func_82766_b("doDaylightCycle")) {
-         this.field_72986_A.func_76068_b(this.field_72986_A.func_76073_f() + 1L);
+         this.func_72877_b(this.func_72820_D() + 1L);
       }
 
       this.field_72984_F.func_76318_c("tickPending");
@@ -199,6 +204,7 @@
       this.field_175740_d.func_75528_a();
       this.field_72984_F.func_76318_c("portalForcer");
       this.field_85177_Q.func_85189_a(this.func_82737_E());
+      customTeleporters.forEach(t -> t.func_85189_a(func_82737_E()));
       this.field_72984_F.func_76319_b();
       this.func_147488_Z();
       this.field_211159_Q = false;
@@ -211,11 +217,13 @@
    @Nullable
    public Biome.SpawnListEntry func_175734_a(EnumCreatureType p_175734_1_, BlockPos p_175734_2_) {
       List<Biome.SpawnListEntry> list = this.func_72863_F().func_177458_a(p_175734_1_, p_175734_2_);
+      list = net.minecraftforge.event.ForgeEventFactory.getPotentialSpawns(this, p_175734_1_, p_175734_2_, list);
       return list.isEmpty() ? null : WeightedRandom.func_76271_a(this.field_73012_v, list);
    }
 
    public boolean func_175732_a(EnumCreatureType p_175732_1_, Biome.SpawnListEntry p_175732_2_, BlockPos p_175732_3_) {
       List<Biome.SpawnListEntry> list = this.func_72863_F().func_177458_a(p_175732_1_, p_175732_3_);
+      list = net.minecraftforge.event.ForgeEventFactory.getPotentialSpawns(this, p_175732_1_, p_175732_3_, list);
       return list != null && !list.isEmpty() ? list.contains(p_175732_2_) : false;
    }
 
@@ -256,10 +264,7 @@
    }
 
    private void func_73051_P() {
-      this.field_72986_A.func_76080_g(0);
-      this.field_72986_A.func_76084_b(false);
-      this.field_72986_A.func_76090_f(0);
-      this.field_72986_A.func_76069_a(false);
+      this.field_73011_w.resetRainAndThunder();
    }
 
    public boolean func_73056_e() {
@@ -286,7 +291,7 @@
       int j = this.field_72986_A.func_76074_e();
       int k = 0;
 
-      while(this.func_184141_c(new BlockPos(i, 0, j)).func_196958_f()) {
+      while(this.func_184141_c(new BlockPos(i, 0, j)).isAir(this, new BlockPos(i, 0, j))) {
          i += this.field_73012_v.nextInt(8) - this.field_73012_v.nextInt(8);
          j += this.field_73012_v.nextInt(8) - this.field_73012_v.nextInt(8);
          ++k;
@@ -336,7 +341,13 @@
          boolean flag1 = this.func_72911_I();
          this.field_72984_F.func_76320_a("pollingChunks");
 
-         for(Iterator<Chunk> iterator = this.field_73063_M.func_187300_b(); iterator.hasNext(); this.field_72984_F.func_76319_b()) {
+         //Forge: Tick forced loaded chunks as well as normal chunks.
+         Stream<Chunk> chunks = Stream.concat(
+            java.util.stream.StreamSupport.stream(java.util.Spliterators.spliteratorUnknownSize(this.field_73063_M.func_187300_b(), 0), false),
+            func_212412_ag().stream().map(l -> func_72964_e(ChunkPos.func_212578_a(l), ChunkPos.func_212579_b(l)))
+         ).distinct();// We need distinct so we don't double tick chunks.
+
+         for(Iterator<Chunk> iterator = chunks.iterator(); iterator.hasNext(); this.field_72984_F.func_76319_b()) {
             this.field_72984_F.func_76320_a("getChunk");
             Chunk chunk = iterator.next();
             int j = chunk.field_76635_g * 16;
@@ -346,7 +357,7 @@
             this.field_72984_F.func_76318_c("tickChunk");
             chunk.func_150804_b(false);
             this.field_72984_F.func_76318_c("thunder");
-            if (flag && flag1 && this.field_73012_v.nextInt(100000) == 0) {
+            if (this.field_73011_w.canDoLightning(chunk) && flag && flag1 && this.field_73012_v.nextInt(100000) == 0) {
                this.field_73005_l = this.field_73005_l * 3 + 1013904223;
                int l = this.field_73005_l >> 2;
                BlockPos blockpos = this.func_175736_a(new BlockPos(j + (l & 15), 0, k + (l >> 8 & 15)));
@@ -366,12 +377,13 @@
             }
 
             this.field_72984_F.func_76318_c("iceandsnow");
-            if (this.field_73012_v.nextInt(16) == 0) {
+            if (this.field_73011_w.canDoRainSnowIce(chunk) && this.field_73012_v.nextInt(16) == 0) {
                this.field_73005_l = this.field_73005_l * 3 + 1013904223;
                int i2 = this.field_73005_l >> 2;
                BlockPos blockpos1 = this.func_205770_a(Heightmap.Type.MOTION_BLOCKING, new BlockPos(j + (i2 & 15), 0, k + (i2 >> 8 & 15)));
                BlockPos blockpos2 = blockpos1.func_177977_b();
                Biome biome = this.func_180494_b(blockpos1);
+               if (this.func_175648_a(blockpos2, 1, false)) // Forge: check area to avoid loading neighbors in unloaded chunks
                if (biome.func_201848_a(this, blockpos2)) {
                   this.func_175656_a(blockpos2, Blocks.field_150432_aD.func_176223_P());
                }
@@ -435,7 +447,7 @@
    }
 
    public void func_72939_s() {
-      if (this.field_73010_i.isEmpty()) {
+      if (this.field_73010_i.isEmpty() && func_212412_ag().isEmpty()) {
          if (this.field_80004_Q++ >= 300) {
             return;
          }
@@ -541,10 +553,15 @@
 
    protected IChunkProvider func_72970_h() {
       IChunkLoader ichunkloader = this.field_73019_z.func_75763_a(this.field_73011_w);
-      return new ChunkProviderServer(this, ichunkloader, this.field_73011_w.func_186060_c(), this.field_73061_a);
+      return new ChunkProviderServer(this, ichunkloader, this.func_175624_G().createChunkGenerator(this), this.field_73061_a);
    }
 
    public boolean func_175660_a(EntityPlayer p_175660_1_, BlockPos p_175660_2_) {
+      return super.func_175660_a(p_175660_1_, p_175660_2_);
+   }
+
+   @Override
+   public boolean canMineBlockBody(EntityPlayer p_175660_1_, BlockPos p_175660_2_) {
       return !this.field_73061_a.func_175579_a(this, p_175660_2_, p_175660_1_) && this.func_175723_af().func_177746_a(p_175660_2_);
    }
 
@@ -594,6 +611,7 @@
       } else if (this.field_72986_A.func_76067_t() == WorldType.field_180272_g) {
          this.field_72986_A.func_176143_a(BlockPos.field_177992_a.func_177984_a());
       } else {
+         if (net.minecraftforge.event.ForgeEventFactory.onCreateWorldSpawn(this, p_73052_1_)) return;
          BiomeProvider biomeprovider = this.field_73020_y.func_201711_g().func_202090_b();
          List<Biome> list = biomeprovider.func_76932_a();
          Random random = new Random(this.func_72905_C());
@@ -676,6 +694,7 @@
             p_73044_2_.func_200209_c(new TextComponentTranslation("menu.savingChunks"));
          }
 
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.WorldEvent.Save(this));
          chunkproviderserver.func_186027_a(p_73044_1_);
 
          for(Chunk chunk : Lists.newArrayList(chunkproviderserver.func_189548_a())) {
@@ -723,7 +742,7 @@
 
    public void func_212420_a(Stream<Entity> p_212420_1_) {
       p_212420_1_.forEach((p_212421_1_) -> {
-         if (this.func_184165_i(p_212421_1_)) {
+         if (this.func_184165_i(p_212421_1_) && !net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinWorldEvent(p_212421_1_, this))) {
             this.field_72996_f.add(p_212421_1_);
             this.func_72923_a(p_212421_1_);
          }
@@ -802,6 +821,7 @@
 
    public Explosion func_211529_a(@Nullable Entity p_211529_1_, DamageSource p_211529_2_, double p_211529_3_, double p_211529_5_, double p_211529_7_, float p_211529_9_, boolean p_211529_10_, boolean p_211529_11_) {
       Explosion explosion = new Explosion(this, p_211529_1_, p_211529_3_, p_211529_5_, p_211529_7_, p_211529_9_, p_211529_10_, p_211529_11_);
+      if (net.minecraftforge.event.ForgeEventFactory.onExplosionStart(this, explosion)) return explosion;
       if (p_211529_2_ != null) {
          explosion.func_199592_a(p_211529_2_);
       }
@@ -856,15 +876,19 @@
          this.field_73061_a.func_184103_al().func_148537_a(new SPacketChangeGameState(8, this.field_73017_q), this.field_73011_w.func_186058_p());
       }
 
+      /* The function in use here has been replaced in order to only send the weather info to players in the correct dimension,
+       * rather than to all players on the server. This is what causes the client-side rain, as the
+       * client believes that it has started raining locally, rather than in another dimension.
+       */
       if (flag != this.func_72896_J()) {
          if (flag) {
-            this.field_73061_a.func_184103_al().func_148540_a(new SPacketChangeGameState(2, 0.0F));
+            this.field_73061_a.func_184103_al().func_148537_a(new SPacketChangeGameState(2, 0.0F), this.field_73011_w.func_186058_p());
          } else {
-            this.field_73061_a.func_184103_al().func_148540_a(new SPacketChangeGameState(1, 0.0F));
+            this.field_73061_a.func_184103_al().func_148537_a(new SPacketChangeGameState(1, 0.0F), this.field_73011_w.func_186058_p());
          }
 
-         this.field_73061_a.func_184103_al().func_148540_a(new SPacketChangeGameState(7, this.field_73004_o));
-         this.field_73061_a.func_184103_al().func_148540_a(new SPacketChangeGameState(8, this.field_73017_q));
+         this.field_73061_a.func_184103_al().func_148537_a(new SPacketChangeGameState(7, this.field_73004_o), this.field_73011_w.func_186058_p());
+         this.field_73061_a.func_184103_al().func_148537_a(new SPacketChangeGameState(8, this.field_73017_q), this.field_73011_w.func_186058_p());
       }
 
    }
@@ -957,4 +981,8 @@
    public NetworkTagManager func_205772_D() {
       return this.field_73061_a.func_199731_aO();
    }
+
+   public java.io.File getChunkSaveLocation() {
+      return ((net.minecraft.world.chunk.storage.AnvilChunkLoader)func_72863_F().field_73247_e).field_75825_d;
+   }
 }
