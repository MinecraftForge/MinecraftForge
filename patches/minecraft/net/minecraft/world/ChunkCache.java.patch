--- ../src_base/minecraft/net/minecraft/world/ChunkCache.java
+++ ../src_work/minecraft/net/minecraft/world/ChunkCache.java
@@ -8,6 +8,7 @@
 import net.minecraft.util.Vec3Pool;
 import net.minecraft.world.biome.BiomeGenBase;
 import net.minecraft.world.chunk.Chunk;
+import net.minecraftforge.common.ForgeDirection;
 
 public class ChunkCache implements IBlockAccess
 {
@@ -108,7 +109,15 @@
     {
         int l = (par1 >> 4) - this.chunkX;
         int i1 = (par3 >> 4) - this.chunkZ;
-        return this.chunkArray[l][i1].getChunkBlockTileEntity(par1 & 15, par2, par3 & 15);
+        if (l >= 0 && l < this.chunkArray.length && i1 >= 0 && i1 < this.chunkArray[l].length)
+        {
+            Chunk chunk = this.chunkArray[l][i1];
+            return chunk == null ? null : chunk.getChunkBlockTileEntity(par1 & 15, par2, par3 & 15);
+        }
+        else
+        {
+            return null;
+        }
     }
 
     @SideOnly(Side.CLIENT)
@@ -159,7 +168,12 @@
         {
             int l = (par1 >> 4) - this.chunkX;
             int i1 = (par3 >> 4) - this.chunkZ;
-            return this.chunkArray[l][i1].getBlockMetadata(par1 & 15, par2, par3 & 15);
+            if (l >= 0 && l < this.chunkArray.length && i1 >= 0 && i1 < this.chunkArray[l].length)
+            {
+                Chunk chunk = this.chunkArray[l][i1];
+                return chunk == null ? 0 : chunk.getBlockMetadata(par1 & 15, par2, par3 & 15);
+            }
+            return 0;
         }
     }
 
@@ -306,8 +320,7 @@
      */
     public boolean doesBlockHaveSolidTopSurface(int par1, int par2, int par3)
     {
-        Block block = Block.blocksList[this.getBlockId(par1, par2, par3)];
-        return this.worldObj.isBlockTopFacingSurfaceSolid(block, this.getBlockMetadata(par1, par2, par3));
+        return this.worldObj.doesBlockHaveSolidTopSurface(par1, par2, par3);
     }
 
     /**
@@ -318,15 +331,13 @@
         return this.worldObj.getWorldVec3Pool();
     }
 
-    @SideOnly(Side.CLIENT)
-
     /**
      * Returns true if the block at the specified coordinates is empty
      */
     public boolean isAirBlock(int par1, int par2, int par3)
     {
-        Block block = Block.blocksList[this.getBlockId(par1, par2, par3)];
-        return block == null;
+        int id = getBlockId(par1, par2, par3);
+        return id == 0 || Block.blocksList[id] == null || Block.blocksList[id].isAirBlock(this.worldObj, par1, par2, par3);
     }
 
     @SideOnly(Side.CLIENT)
@@ -449,4 +460,22 @@
         int i1 = this.getBlockId(par1, par2, par3);
         return i1 == 0 ? 0 : Block.blocksList[i1].isProvidingStrongPower(this, par1, par2, par3, par4);
     }
+
+    public boolean isBlockSolidOnSide(int x, int y, int z, ForgeDirection side, boolean _default)
+    {
+        if (x < -30000000 || z < -30000000 || x >= 30000000 || z >= 30000000)
+        {
+            return _default;
+        }
+
+        int blockId = getBlockId(x, y, z);
+        Block block = Block.blocksList[blockId];
+
+        if (block != null)
+        {
+            return block.isBlockSolidOnSide(this.worldObj, x, y, z, side);
+        }
+
+        return false;
+    }
 }
