--- ../src_base/minecraft/net/minecraft/dispenser/DispenserBehaviorMobEgg.java
+++ ../src_work/minecraft/net/minecraft/dispenser/DispenserBehaviorMobEgg.java
@@ -7,6 +7,11 @@
 import net.minecraft.item.ItemMonsterPlacer;
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.EnumFacing;
+// CraftBukkit start
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.block.BlockDispenseEvent;
+import net.minecraft.world.World;
+// CraftBukkit end
 
 final class DispenserBehaviorMobEgg extends BehaviorDefaultDispenseItem
 {
@@ -19,14 +24,48 @@
         double d0 = par1IBlockSource.getX() + (double)enumfacing.getFrontOffsetX();
         double d1 = (double)((float)par1IBlockSource.getYInt() + 0.2F);
         double d2 = par1IBlockSource.getZ() + (double)enumfacing.getFrontOffsetZ();
-        Entity entity = ItemMonsterPlacer.spawnCreature(par1IBlockSource.getWorld(), par2ItemStack.getItemDamage(), d0, d1, d2);
+        // CraftBukkit start
+        World world = par1IBlockSource.getWorld();
+        ItemStack itemstack1 = par2ItemStack.splitStack(1);
+        org.bukkit.block.Block block = world.getWorld().getBlockAt(par1IBlockSource.getXInt(), par1IBlockSource.getYInt(), par1IBlockSource.getZInt());
+        CraftItemStack craftItem = CraftItemStack.asCraftMirror(itemstack1);
+        BlockDispenseEvent event = new BlockDispenseEvent(block, craftItem.clone(), new org.bukkit.util.Vector(d0, d1, d2));
+
+        if (!BlockDispenser.eventFired)
+        {
+            world.getServer().getPluginManager().callEvent(event);
+        }
+
+        if (event.isCancelled())
+        {
+            par2ItemStack.stackSize++;
+            return par2ItemStack;
+        }
+
+        if (!event.getItem().equals(craftItem))
+        {
+            par2ItemStack.stackSize++;
+            // Chain to handler for new item
+            ItemStack eventStack = CraftItemStack.asNMSCopy(event.getItem());
+            IBehaviorDispenseItem ibehaviordispenseitem = (IBehaviorDispenseItem) BlockDispenser.dispenseBehaviorRegistry.getObject(eventStack.getItem());
+
+            if (ibehaviordispenseitem != IBehaviorDispenseItem.itemDispenseBehaviorProvider && ibehaviordispenseitem != this)
+            {
+                ibehaviordispenseitem.dispense(par1IBlockSource, eventStack);
+                return par2ItemStack;
+            }
+        }
+
+        itemstack1 = CraftItemStack.asNMSCopy(event.getItem());
+        Entity entity = ItemMonsterPlacer.spawnCreature(par1IBlockSource.getWorld(), par2ItemStack.getItemDamage(), event.getVelocity().getX(), event.getVelocity().getY(), event.getVelocity().getZ());
 
         if (entity instanceof EntityLivingBase && par2ItemStack.hasDisplayName())
         {
             ((EntityLiving)entity).setCustomNameTag(par2ItemStack.getDisplayName());
         }
 
-        par2ItemStack.splitStack(1);
+        // itemstack1.splitStack(1); // Handled during event processing
+        // CraftBukkit end
         return par2ItemStack;
     }
 }
