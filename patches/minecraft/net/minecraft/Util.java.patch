--- a/net/minecraft/Util.java
+++ b/net/minecraft/Util.java
@@ -172,6 +_,11 @@
       return 255;
    }
 
+   // We add these inner classes to compensate for Mojang's missing inner classes and shift the anonymous class index.
+   // This allows us to obfuscate subsequent anonymous inner classes correctly.
+   @SuppressWarnings("unused") private static java.util.function.LongSupplier INNER_CLASS_SHIFT1 = new java.util.function.LongSupplier() { public long getAsLong() { return 0; } };
+   @SuppressWarnings("unused") private static java.util.function.LongSupplier INNER_CLASS_SHIFT2 = new java.util.function.LongSupplier() { public long getAsLong() { return 0; } };
+
    public static ExecutorService backgroundExecutor() {
       return BACKGROUND_EXECUTOR;
    }
@@ -240,7 +_,7 @@
       try {
          type = DataFixers.getDataFixer().getSchema(DataFixUtils.makeKey(SharedConstants.getCurrentVersion().getDataVersion().getVersion())).getChoiceType(p_137552_, p_137553_);
       } catch (IllegalArgumentException illegalargumentexception) {
-         LOGGER.error("No data fixer registered for {}", (Object)p_137553_);
+         LOGGER.debug("No data fixer registered for {}", (Object)p_137553_);
          if (SharedConstants.IS_RUNNING_IN_IDE) {
             throw illegalargumentexception;
          }
