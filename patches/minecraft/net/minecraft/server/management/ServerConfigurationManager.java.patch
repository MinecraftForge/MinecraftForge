--- ../src-base/minecraft/net/minecraft/server/management/ServerConfigurationManager.java
+++ ../src-work/minecraft/net/minecraft/server/management/ServerConfigurationManager.java
@@ -54,7 +54,9 @@
 import net.minecraft.util.EnumChatFormatting;
 import net.minecraft.util.IChatComponent;
 import net.minecraft.util.MathHelper;
+import net.minecraft.world.Teleporter;
 import net.minecraft.world.World;
+import net.minecraft.world.WorldProvider;
 import net.minecraft.world.WorldServer;
 import net.minecraft.world.WorldSettings;
 import net.minecraft.world.demo.DemoWorldManager;
@@ -375,13 +377,23 @@
     // JAVADOC METHOD $$ func_72368_a
     public EntityPlayerMP respawnPlayer(EntityPlayerMP par1EntityPlayerMP, int par2, boolean par3)
     {
+        World world = mcServer.worldServerForDimension(par2);
+        if (world == null)
+        {
+            par2 = 0;
+        }
+        else if (!world.provider.canRespawnHere())
+        {
+            par2 = world.provider.getRespawnDimension(par1EntityPlayerMP);
+        }
+
         par1EntityPlayerMP.getServerForPlayer().getEntityTracker().removePlayerFromTrackers(par1EntityPlayerMP);
         par1EntityPlayerMP.getServerForPlayer().getEntityTracker().removeEntityFromAllTrackingPlayers(par1EntityPlayerMP);
         par1EntityPlayerMP.getServerForPlayer().getPlayerManager().removePlayer(par1EntityPlayerMP);
         this.playerEntityList.remove(par1EntityPlayerMP);
         this.mcServer.worldServerForDimension(par1EntityPlayerMP.dimension).removePlayerEntityDangerously(par1EntityPlayerMP);
-        ChunkCoordinates chunkcoordinates = par1EntityPlayerMP.getBedLocation();
-        boolean flag1 = par1EntityPlayerMP.isSpawnForced();
+        ChunkCoordinates chunkcoordinates = par1EntityPlayerMP.getBedLocation(par2);
+        boolean flag1 = par1EntityPlayerMP.isSpawnForced(par2);
         par1EntityPlayerMP.dimension = par2;
         Object object;
 
@@ -397,6 +409,7 @@
         EntityPlayerMP entityplayermp1 = new EntityPlayerMP(this.mcServer, this.mcServer.worldServerForDimension(par1EntityPlayerMP.dimension), par1EntityPlayerMP.func_146103_bH(), (ItemInWorldManager)object);
         entityplayermp1.playerNetServerHandler = par1EntityPlayerMP.playerNetServerHandler;
         entityplayermp1.clonePlayer(par1EntityPlayerMP, par3);
+        entityplayermp1.dimension = par2;
         entityplayermp1.func_145769_d(par1EntityPlayerMP.func_145782_y());
         WorldServer worldserver = this.mcServer.worldServerForDimension(par1EntityPlayerMP.dimension);
         this.func_72381_a(entityplayermp1, par1EntityPlayerMP, worldserver);
@@ -441,6 +454,11 @@
 
     public void transferPlayerToDimension(EntityPlayerMP par1EntityPlayerMP, int par2)
     {
+        transferPlayerToDimension(par1EntityPlayerMP, par2, mcServer.worldServerForDimension(par2).getDefaultTeleporter());
+    }
+
+    public void transferPlayerToDimension(EntityPlayerMP par1EntityPlayerMP, int par2, Teleporter teleporter)
+    {
         int j = par1EntityPlayerMP.dimension;
         WorldServer worldserver = this.mcServer.worldServerForDimension(par1EntityPlayerMP.dimension);
         par1EntityPlayerMP.dimension = par2;
@@ -448,7 +466,7 @@
         par1EntityPlayerMP.playerNetServerHandler.func_147359_a(new S07PacketRespawn(par1EntityPlayerMP.dimension, par1EntityPlayerMP.worldObj.difficultySetting, par1EntityPlayerMP.worldObj.getWorldInfo().getTerrainType(), par1EntityPlayerMP.theItemInWorldManager.getGameType()));
         worldserver.removePlayerEntityDangerously(par1EntityPlayerMP);
         par1EntityPlayerMP.isDead = false;
-        this.transferEntityToWorld(par1EntityPlayerMP, j, worldserver, worldserver1);
+        this.transferEntityToWorld(par1EntityPlayerMP, j, worldserver, worldserver1, teleporter);
         this.func_72375_a(par1EntityPlayerMP, worldserver);
         par1EntityPlayerMP.playerNetServerHandler.func_147364_a(par1EntityPlayerMP.posX, par1EntityPlayerMP.posY, par1EntityPlayerMP.posZ, par1EntityPlayerMP.rotationYaw, par1EntityPlayerMP.rotationPitch);
         par1EntityPlayerMP.theItemInWorldManager.setWorld(worldserver1);
@@ -467,15 +485,23 @@
     // JAVADOC METHOD $$ func_82448_a
     public void transferEntityToWorld(Entity par1Entity, int par2, WorldServer par3WorldServer, WorldServer par4WorldServer)
     {
-        double d0 = par1Entity.posX;
-        double d1 = par1Entity.posZ;
-        double d2 = 8.0D;
+        transferEntityToWorld(par1Entity, par2, par3WorldServer, par4WorldServer, mcServer.worldServerForDimension(par2).getDefaultTeleporter());
+    }
+
+    public void transferEntityToWorld(Entity par1Entity, int par2, WorldServer par3WorldServer, WorldServer par4WorldServer, Teleporter teleporter)
+    {
+        WorldProvider pOld = par3WorldServer.provider;
+        WorldProvider pNew = par4WorldServer.provider;
+        double moveFactor = pOld.getMovementFactor() / pNew.getMovementFactor();
+        double d0 = par1Entity.posX * moveFactor;
+        double d1 = par1Entity.posZ * moveFactor;
         double d3 = par1Entity.posX;
         double d4 = par1Entity.posY;
         double d5 = par1Entity.posZ;
         float f = par1Entity.rotationYaw;
         par3WorldServer.theProfiler.startSection("moving");
 
+        /*
         if (par1Entity.dimension == -1)
         {
             d0 /= d2;
@@ -498,7 +524,8 @@
                 par3WorldServer.updateEntityWithOptionalForce(par1Entity, false);
             }
         }
-        else
+        */
+        if (par1Entity.dimension == 1)
         {
             ChunkCoordinates chunkcoordinates;
 
@@ -533,7 +560,7 @@
             if (par1Entity.isEntityAlive())
             {
                 par1Entity.setLocationAndAngles(d0, par1Entity.posY, d1, par1Entity.rotationYaw, par1Entity.rotationPitch);
-                par4WorldServer.getDefaultTeleporter().placeInPortal(par1Entity, d3, d4, d5, f);
+                teleporter.placeInPortal(par1Entity, d3, d4, d5, f);
                 par4WorldServer.spawnEntityInWorld(par1Entity);
                 par4WorldServer.updateEntityWithOptionalForce(par1Entity, false);
             }
