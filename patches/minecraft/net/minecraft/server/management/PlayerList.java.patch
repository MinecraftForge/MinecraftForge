--- a/net/minecraft/server/management/PlayerList.java
+++ b/net/minecraft/server/management/PlayerList.java
@@ -110,6 +_,7 @@
    private GameType overrideGameMode;
    private boolean allowCheatsForAllPlayers;
    private int sendAllPlayerInfoIn;
+   private final List<ServerPlayerEntity> playersView = java.util.Collections.unmodifiableList(players);
 
    public PlayerList(MinecraftServer p_i231425_1_, DynamicRegistries.Impl p_i231425_2_, PlayerData p_i231425_3_, int p_i231425_4_) {
       this.server = p_i231425_1_;
@@ -146,6 +_,7 @@
       IWorldInfo iworldinfo = serverworld1.getLevelData();
       this.updatePlayerGameMode(p_72355_2_, (ServerPlayerEntity)null, serverworld1);
       ServerPlayNetHandler serverplaynethandler = new ServerPlayNetHandler(this.server, p_72355_1_, p_72355_2_);
+      net.minecraftforge.fml.network.NetworkHooks.sendMCRegistryPackets(p_72355_1_, "PLAY_TO_CLIENT");
       GameRules gamerules = serverworld1.getGameRules();
       boolean flag = gamerules.getBoolean(GameRules.RULE_DO_IMMEDIATE_RESPAWN);
       boolean flag1 = gamerules.getBoolean(GameRules.RULE_REDUCEDDEBUGINFO);
@@ -154,8 +_,10 @@
       serverplaynethandler.send(new SServerDifficultyPacket(iworldinfo.getDifficulty(), iworldinfo.isDifficultyLocked()));
       serverplaynethandler.send(new SPlayerAbilitiesPacket(p_72355_2_.abilities));
       serverplaynethandler.send(new SHeldItemChangePacket(p_72355_2_.inventory.selected));
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.OnDatapackSyncEvent(this, p_72355_2_));
       serverplaynethandler.send(new SUpdateRecipesPacket(this.server.getRecipeManager().getRecipes()));
       serverplaynethandler.send(new STagsListPacket(this.server.getTags()));
+      net.minecraftforge.fml.network.NetworkHooks.syncCustomTagTypes(p_72355_2_, this.server.getTags());
       this.sendPlayerPermissionLevel(p_72355_2_);
       p_72355_2_.getStats().markAllDirty();
       p_72355_2_.getRecipeBook().sendInitialRecipeBook(p_72355_2_);
@@ -170,7 +_,7 @@
 
       this.broadcastMessage(iformattabletextcomponent.withStyle(TextFormatting.YELLOW), ChatType.SYSTEM, Util.NIL_UUID);
       serverplaynethandler.teleport(p_72355_2_.getX(), p_72355_2_.getY(), p_72355_2_.getZ(), p_72355_2_.yRot, p_72355_2_.xRot);
-      this.players.add(p_72355_2_);
+      this.addPlayer(p_72355_2_);
       this.playersByUUID.put(p_72355_2_.getUUID(), p_72355_2_);
       this.broadcastAll(new SPlayerListItemPacket(SPlayerListItemPacket.Action.ADD_PLAYER, p_72355_2_));
 
@@ -225,6 +_,7 @@
       }
 
       p_72355_2_.initMenu();
+      net.minecraftforge.fml.hooks.BasicEventHooks.firePlayerLoggedIn( p_72355_2_ );
    }
 
    protected void updateEntireScoreboard(ServerScoreboard p_96456_1_, ServerPlayerEntity p_96456_2_) {
@@ -285,6 +_,7 @@
          compoundnbt1 = compoundnbt;
          p_72380_1_.load(compoundnbt);
          LOGGER.debug("loading single player");
+         net.minecraftforge.event.ForgeEventFactory.firePlayerLoadingEvent(p_72380_1_, this.playerIo, p_72380_1_.getUUID().toString());
       } else {
          compoundnbt1 = this.playerIo.load(p_72380_1_);
       }
@@ -293,6 +_,7 @@
    }
 
    protected void save(ServerPlayerEntity p_72391_1_) {
+      if (p_72391_1_.connection == null) return;
       this.playerIo.save(p_72391_1_);
       ServerStatisticsManager serverstatisticsmanager = this.stats.get(p_72391_1_.getUUID());
       if (serverstatisticsmanager != null) {
@@ -307,6 +_,7 @@
    }
 
    public void remove(ServerPlayerEntity p_72367_1_) {
+      net.minecraftforge.fml.hooks.BasicEventHooks.firePlayerLoggedOut(p_72367_1_);
       ServerWorld serverworld = p_72367_1_.getLevel();
       p_72367_1_.awardStat(Stats.LEAVE_GAME);
       this.save(p_72367_1_);
@@ -330,7 +_,7 @@
       p_72367_1_.unRide();
       serverworld.removePlayerImmediately(p_72367_1_);
       p_72367_1_.getAdvancements().stopListening();
-      this.players.remove(p_72367_1_);
+      this.removePlayer(p_72367_1_);
       this.server.getCustomBossEvents().onPlayerDisconnect(p_72367_1_);
       UUID uuid = p_72367_1_.getUUID();
       ServerPlayerEntity serverplayerentity = this.playersByUUID.get(uuid);
@@ -400,8 +_,8 @@
    }
 
    public ServerPlayerEntity respawn(ServerPlayerEntity p_232644_1_, boolean p_232644_2_) {
-      this.players.remove(p_232644_1_);
-      p_232644_1_.getLevel().removePlayerImmediately(p_232644_1_);
+      this.removePlayer(p_232644_1_);
+      p_232644_1_.getLevel().removePlayer(p_232644_1_, true); // Forge: keep data until copyFrom called
       BlockPos blockpos = p_232644_1_.getRespawnPosition();
       float f = p_232644_1_.getRespawnAngle();
       boolean flag = p_232644_1_.isRespawnForced();
@@ -424,6 +_,7 @@
       ServerPlayerEntity serverplayerentity = new ServerPlayerEntity(this.server, serverworld1, p_232644_1_.getGameProfile(), playerinteractionmanager);
       serverplayerentity.connection = p_232644_1_.connection;
       serverplayerentity.restoreFrom(p_232644_1_, p_232644_2_);
+      p_232644_1_.remove(false); // Forge: clone event had a chance to see old data, now discard it
       serverplayerentity.setId(p_232644_1_.getId());
       serverplayerentity.setMainArm(p_232644_1_.getMainArm());
 
@@ -465,10 +_,11 @@
       this.sendLevelInfo(serverplayerentity, serverworld1);
       this.sendPlayerPermissionLevel(serverplayerentity);
       serverworld1.addRespawnedPlayer(serverplayerentity);
-      this.players.add(serverplayerentity);
+      this.addPlayer(serverplayerentity);
       this.playersByUUID.put(serverplayerentity.getUUID(), serverplayerentity);
       serverplayerentity.initMenu();
       serverplayerentity.setHealth(serverplayerentity.getHealth());
+      net.minecraftforge.fml.hooks.BasicEventHooks.firePlayerRespawnEvent(serverplayerentity, p_232644_2_);
       if (flag2) {
          serverplayerentity.connection.send(new SPlaySoundEffectPacket(SoundEvents.RESPAWN_ANCHOR_DEPLETE, SoundCategory.BLOCKS, (double)blockpos.getX(), (double)blockpos.getY(), (double)blockpos.getZ(), 1.0F, 1.0F));
       }
@@ -745,12 +_,6 @@
       if (serverstatisticsmanager == null) {
          File file1 = this.server.getWorldPath(FolderName.PLAYER_STATS_DIR).toFile();
          File file2 = new File(file1, uuid + ".json");
-         if (!file2.exists()) {
-            File file3 = new File(file1, p_152602_1_.getName().getString() + ".json");
-            if (file3.exists() && file3.isFile()) {
-               file3.renameTo(file2);
-            }
-         }
 
          serverstatisticsmanager = new ServerStatisticsManager(this.server, file2);
          this.stats.put(uuid, serverstatisticsmanager);
@@ -769,6 +_,8 @@
          this.advancements.put(uuid, playeradvancements);
       }
 
+      // Forge: don't overwrite active player with a fake one.
+      if (!(p_192054_1_ instanceof net.minecraftforge.common.util.FakePlayer))
       playeradvancements.setPlayer(p_192054_1_);
       return playeradvancements;
    }
@@ -786,7 +_,7 @@
    }
 
    public List<ServerPlayerEntity> getPlayers() {
-      return this.players;
+      return this.playersView; //Unmodifiable view, we don't want people removing things without us knowing.
    }
 
    @Nullable
@@ -803,7 +_,9 @@
          playeradvancements.reload(this.server.getAdvancements());
       }
 
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.OnDatapackSyncEvent(this, null));
       this.broadcastAll(new STagsListPacket(this.server.getTags()));
+      net.minecraftforge.fml.network.NetworkHooks.syncCustomTagTypes(this.server.getTags());
       SUpdateRecipesPacket supdaterecipespacket = new SUpdateRecipesPacket(this.server.getRecipeManager().getRecipes());
 
       for(ServerPlayerEntity serverplayerentity : this.players) {
@@ -815,5 +_,13 @@
 
    public boolean isAllowCheatsForAllPlayers() {
       return this.allowCheatsForAllPlayers;
+   }
+
+   public boolean addPlayer(ServerPlayerEntity player) {
+      return players.add(player);
+   }
+
+   public boolean removePlayer(ServerPlayerEntity player) {
+       return this.players.remove(player);
    }
 }
