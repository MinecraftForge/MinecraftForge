--- a/net/minecraft/server/management/PlayerInteractionManager.java
+++ b/net/minecraft/server/management/PlayerInteractionManager.java
@@ -87,7 +_,7 @@
       ++this.gameTicks;
       if (this.hasDelayedDestroy) {
          BlockState blockstate = this.level.getBlockState(this.delayedDestroyPos);
-         if (blockstate.isAir()) {
+         if (blockstate.isAir(level, delayedDestroyPos)) {
             this.hasDelayedDestroy = false;
          } else {
             float f = this.incrementDestroyProgress(blockstate, this.delayedDestroyPos, this.delayedTickStart);
@@ -98,7 +_,7 @@
          }
       } else if (this.isDestroyingBlock) {
          BlockState blockstate1 = this.level.getBlockState(this.destroyPos);
-         if (blockstate1.isAir()) {
+         if (blockstate1.isAir(level, destroyPos)) {
             this.level.destroyBlockProgress(this.player.getId(), this.destroyPos, -1);
             this.lastSentState = -1;
             this.isDestroyingBlock = false;
@@ -126,7 +_,15 @@
       double d1 = this.player.getY() - ((double)p_225416_1_.getY() + 0.5D) + 1.5D;
       double d2 = this.player.getZ() - ((double)p_225416_1_.getZ() + 0.5D);
       double d3 = d0 * d0 + d1 * d1 + d2 * d2;
-      if (d3 > 36.0D) {
+      double dist = player.getAttribute(net.minecraftforge.common.ForgeMod.REACH_DISTANCE.get()).getValue() + 1;
+      net.minecraftforge.event.entity.player.PlayerInteractEvent.LeftClickBlock event = net.minecraftforge.common.ForgeHooks.onLeftClickBlock(player, p_225416_1_, p_225416_3_);
+      if (event.isCanceled() || (!this.isCreative() && event.getUseItem() == net.minecraftforge.eventbus.api.Event.Result.DENY)) { // Restore block and te data
+         player.connection.send(new SPlayerDiggingPacket(p_225416_1_, level.getBlockState(p_225416_1_), p_225416_2_, false, "mod canceled"));
+         level.sendBlockUpdated(p_225416_1_, level.getBlockState(p_225416_1_), level.getBlockState(p_225416_1_), 3);
+         return;
+      }
+      dist *= dist;
+      if (d3 > dist) {
          this.player.connection.send(new SPlayerDiggingPacket(p_225416_1_, this.level.getBlockState(p_225416_1_), p_225416_2_, false, "too far"));
       } else if (p_225416_1_.getY() >= p_225416_4_) {
          this.player.connection.send(new SPlayerDiggingPacket(p_225416_1_, this.level.getBlockState(p_225416_1_), p_225416_2_, false, "too high"));
@@ -150,12 +_,13 @@
             this.destroyProgressStart = this.gameTicks;
             float f = 1.0F;
             BlockState blockstate = this.level.getBlockState(p_225416_1_);
-            if (!blockstate.isAir()) {
+            if (!blockstate.isAir(level, p_225416_1_)) {
+               if (event.getUseBlock() != net.minecraftforge.eventbus.api.Event.Result.DENY)
                blockstate.attack(this.level, p_225416_1_, this.player);
                f = blockstate.getDestroyProgress(this.player, this.player.level, p_225416_1_);
             }
 
-            if (!blockstate.isAir() && f >= 1.0F) {
+            if (!blockstate.isAir(level, p_225416_1_) && f >= 1.0F) {
                this.destroyAndAck(p_225416_1_, p_225416_2_, "insta mine");
             } else {
                if (this.isDestroyingBlock) {
@@ -218,7 +_,8 @@
 
    public boolean destroyBlock(BlockPos p_180237_1_) {
       BlockState blockstate = this.level.getBlockState(p_180237_1_);
-      if (!this.player.getMainHandItem().getItem().canAttackBlock(blockstate, this.level, p_180237_1_, this.player)) {
+      int exp = net.minecraftforge.common.ForgeHooks.onBlockBreakEvent(level, gameModeForPlayer, player, p_180237_1_);
+      if (exp == -1) {
          return false;
       } else {
          TileEntity tileentity = this.level.getBlockEntity(p_180237_1_);
@@ -226,30 +_,42 @@
          if ((block instanceof CommandBlockBlock || block instanceof StructureBlock || block instanceof JigsawBlock) && !this.player.canUseGameMasterBlocks()) {
             this.level.sendBlockUpdated(p_180237_1_, blockstate, blockstate, 3);
             return false;
+         } else if (player.getMainHandItem().onBlockStartBreak(p_180237_1_, player)) {
+            return false;
          } else if (this.player.blockActionRestricted(this.level, p_180237_1_, this.gameModeForPlayer)) {
             return false;
          } else {
-            block.playerWillDestroy(this.level, p_180237_1_, blockstate, this.player);
-            boolean flag = this.level.removeBlock(p_180237_1_, false);
-            if (flag) {
-               block.destroy(this.level, p_180237_1_, blockstate);
-            }
-
             if (this.isCreative()) {
+               removeBlock(p_180237_1_, false);
                return true;
             } else {
                ItemStack itemstack = this.player.getMainHandItem();
                ItemStack itemstack1 = itemstack.copy();
-               boolean flag1 = this.player.hasCorrectToolForDrops(blockstate);
+               boolean flag1 = blockstate.canHarvestBlock(this.level, p_180237_1_, this.player); // previously player.hasCorrectToolForDrops(blockstate)
                itemstack.mineBlock(this.level, blockstate, p_180237_1_, this.player);
+               if (itemstack.isEmpty() && !itemstack1.isEmpty())
+                  net.minecraftforge.event.ForgeEventFactory.onPlayerDestroyItem(this.player, itemstack1, Hand.MAIN_HAND);
+               boolean flag = removeBlock(p_180237_1_, flag1);
+
                if (flag && flag1) {
                   block.playerDestroy(this.level, this.player, p_180237_1_, blockstate, tileentity, itemstack1);
                }
 
+               if (flag && exp > 0)
+                  blockstate.getBlock().popExperience(level, p_180237_1_, exp);
+
                return true;
             }
          }
       }
+   }
+
+   private boolean removeBlock(BlockPos p_180235_1_, boolean canHarvest) {
+      BlockState state = this.level.getBlockState(p_180235_1_);
+      boolean removed = state.removedByPlayer(this.level, p_180235_1_, this.player, canHarvest, this.level.getFluidState(p_180235_1_));
+      if (removed)
+         state.getBlock().destroy(this.level, p_180235_1_, state);
+      return removed;
    }
 
    public ActionResultType useItem(ServerPlayerEntity p_187250_1_, World p_187250_2_, ItemStack p_187250_3_, Hand p_187250_4_) {
@@ -258,6 +_,8 @@
       } else if (p_187250_1_.getCooldowns().isOnCooldown(p_187250_3_.getItem())) {
          return ActionResultType.PASS;
       } else {
+         ActionResultType cancelResult = net.minecraftforge.common.ForgeHooks.onItemRightClick(p_187250_1_, p_187250_4_);
+         if (cancelResult != null) return cancelResult;
          int i = p_187250_3_.getCount();
          int j = p_187250_3_.getDamageValue();
          ActionResult<ItemStack> actionresult = p_187250_3_.use(p_187250_2_, p_187250_1_, p_187250_4_);
@@ -291,6 +_,8 @@
    public ActionResultType useItemOn(ServerPlayerEntity p_219441_1_, World p_219441_2_, ItemStack p_219441_3_, Hand p_219441_4_, BlockRayTraceResult p_219441_5_) {
       BlockPos blockpos = p_219441_5_.getBlockPos();
       BlockState blockstate = p_219441_2_.getBlockState(blockpos);
+      net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock event = net.minecraftforge.common.ForgeHooks.onRightClickBlock(p_219441_1_, p_219441_4_, blockpos, p_219441_5_);
+      if (event.isCanceled()) return event.getCancellationResult();
       if (this.gameModeForPlayer == GameType.SPECTATOR) {
          INamedContainerProvider inamedcontainerprovider = blockstate.getMenuProvider(p_219441_2_, blockpos);
          if (inamedcontainerprovider != null) {
@@ -300,10 +_,15 @@
             return ActionResultType.PASS;
          }
       } else {
+         ItemUseContext itemusecontext = new ItemUseContext(p_219441_1_, p_219441_4_, p_219441_5_);
+         if (event.getUseItem() != net.minecraftforge.eventbus.api.Event.Result.DENY) {
+            ActionResultType result = p_219441_3_.onItemUseFirst(itemusecontext);
+            if (result != ActionResultType.PASS) return result;
+         }
          boolean flag = !p_219441_1_.getMainHandItem().isEmpty() || !p_219441_1_.getOffhandItem().isEmpty();
-         boolean flag1 = p_219441_1_.isSecondaryUseActive() && flag;
+         boolean flag1 = (p_219441_1_.isSecondaryUseActive() && flag) && !(p_219441_1_.getMainHandItem().doesSneakBypassUse(p_219441_2_, blockpos, p_219441_1_) && p_219441_1_.getOffhandItem().doesSneakBypassUse(p_219441_2_, blockpos, p_219441_1_));
          ItemStack itemstack = p_219441_3_.copy();
-         if (!flag1) {
+         if (event.getUseBlock() == net.minecraftforge.eventbus.api.Event.Result.ALLOW || (event.getUseBlock() != net.minecraftforge.eventbus.api.Event.Result.DENY && !flag1)) {
             ActionResultType actionresulttype = blockstate.use(p_219441_2_, p_219441_1_, p_219441_4_, p_219441_5_);
             if (actionresulttype.consumesAction()) {
                CriteriaTriggers.ITEM_USED_ON_BLOCK.trigger(p_219441_1_, blockpos, itemstack);
@@ -311,8 +_,8 @@
             }
          }
 
-         if (!p_219441_3_.isEmpty() && !p_219441_1_.getCooldowns().isOnCooldown(p_219441_3_.getItem())) {
-            ItemUseContext itemusecontext = new ItemUseContext(p_219441_1_, p_219441_4_, p_219441_5_);
+         if (event.getUseItem() == net.minecraftforge.eventbus.api.Event.Result.ALLOW || (!p_219441_3_.isEmpty() && !p_219441_1_.getCooldowns().isOnCooldown(p_219441_3_.getItem()))) {
+            if (event.getUseItem() == net.minecraftforge.eventbus.api.Event.Result.DENY) return ActionResultType.PASS;
             ActionResultType actionresulttype1;
             if (this.isCreative()) {
                int i = p_219441_3_.getCount();
