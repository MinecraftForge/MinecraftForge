--- a/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -183,6 +_,12 @@
 public class ServerGamePacketListenerImpl implements ServerPlayerConnection, TickablePacketListener, ServerGamePacketListener {
    static final Logger f_9744_ = LogUtils.getLogger();
    private static final int f_143608_ = 15000;
+   /**
+    * Forge: Deprecated in favor of range/reach attributes.
+    * @see net.minecraftforge.common.ForgeMod#REACH_DISTANCE
+    * @see net.minecraftforge.common.ForgeMod#ATTACK_RANGE
+    */
+   @Deprecated
    public static final double f_215198_ = Mth.m_144952_(6.0D);
    private static final int f_215199_ = -1;
    private static final int f_241635_ = 4096;
@@ -432,9 +_,11 @@
             }
 
             entity.m_19890_(d3, d4, d5, f, f1);
+            this.f_9743_.m_19890_(d3, d4, d5, this.f_9743_.m_146908_(), this.f_9743_.m_146909_()); // Forge - Resync player position on vehicle moving
             boolean flag3 = serverlevel.m_45756_(entity, entity.m_20191_().m_82406_(0.0625D));
             if (flag && (flag2 || !flag3)) {
                entity.m_19890_(d0, d1, d2, f, f1);
+               this.f_9743_.m_19890_(d3, d4, d5, this.f_9743_.m_146908_(), this.f_9743_.m_146909_()); // Forge - Resync player position on vehicle moving
                this.f_9742_.m_129512_(new ClientboundMoveVehiclePacket(entity));
                return;
             }
@@ -451,7 +_,7 @@
    }
 
    private boolean m_9793_(Entity p_9794_) {
-      return p_9794_.f_19853_.m_45556_(p_9794_.m_20191_().m_82400_(0.0625D).m_82363_(0.0D, -0.55D, 0.0D)).allMatch(BlockBehaviour.BlockStateBase::m_60795_);
+      return BlockPos.m_121921_(p_9794_.m_20191_().m_82400_(0.0625D).m_82363_(0.0D, -0.55D, 0.0D)).allMatch(b -> p_9794_.f_19853_.m_8055_(b).m_60795_());
    }
 
    public void m_7376_(ServerboundAcceptTeleportationPacket p_9835_) {
@@ -1040,7 +_,7 @@
       Vec3 vec3 = blockhitresult.m_82450_();
       BlockPos blockpos = blockhitresult.m_82425_();
       Vec3 vec31 = Vec3.m_82512_(blockpos);
-      if (!(this.f_9743_.m_146892_().m_82557_(vec31) > f_215198_)) {
+      if (this.f_9743_.canInteractWith(blockpos, 3)) {
          Vec3 vec32 = vec3.m_82546_(vec31);
          double d0 = 1.0000001D;
          if (Math.abs(vec32.m_7096_()) < 1.0000001D && Math.abs(vec32.m_7098_()) < 1.0000001D && Math.abs(vec32.m_7094_()) < 1.0000001D) {
@@ -1048,7 +_,7 @@
             this.f_9743_.m_9243_();
             int i = this.f_9743_.f_19853_.m_151558_();
             if (blockpos.m_123342_() < i) {
-               if (this.f_9766_ == null && this.f_9743_.m_20275_((double)blockpos.m_123341_() + 0.5D, (double)blockpos.m_123342_() + 0.5D, (double)blockpos.m_123343_() + 0.5D) < 64.0D && serverlevel.m_7966_(this.f_9743_, blockpos)) {
+               if (this.f_9766_ == null && serverlevel.m_7966_(this.f_9743_, blockpos)) {
                   InteractionResult interactionresult = this.f_9743_.f_8941_.m_7179_(this.f_9743_, serverlevel, itemstack, interactionhand, blockhitresult);
                   if (direction == Direction.UP && !interactionresult.m_19077_() && blockpos.m_123342_() >= i - 1 && m_9790_(this.f_9743_, itemstack)) {
                      Component component = Component.m_237110_("build.tooHigh", i - 1).m_130940_(ChatFormatting.RED);
@@ -1184,10 +_,12 @@
                if (this.m_242598_(playerchatmessage)) {
                   this.f_241681_.m_241849_(() -> {
                      CompletableFuture<FilteredText> completablefuture = this.m_243132_(playerchatmessage.m_241775_().f_241656_());
-                     CompletableFuture<PlayerChatMessage> completablefuture1 = this.f_9745_.m_236742_().m_243107_(this.f_9743_, playerchatmessage);
+                     CompletableFuture<PlayerChatMessage> completablefuture1 = net.minecraftforge.common.ForgeHooks.getServerChatSubmittedDecorator().m_243107_(this.f_9743_, playerchatmessage);
                      return CompletableFuture.allOf(completablefuture, completablefuture1).thenAcceptAsync((p_243197_) -> {
                         FilterMask filtermask = completablefuture.join().f_243010_();
-                        PlayerChatMessage playerchatmessage1 = completablefuture1.join().m_243072_(filtermask);
+                        PlayerChatMessage playerchatmessage1 = completablefuture1.join();
+                        if (playerchatmessage1 == null) return; // Forge: ServerChatEvent was canceled if this is null.
+                        playerchatmessage1 = playerchatmessage1.m_243072_(filtermask);
                         this.m_243086_(playerchatmessage1);
                      }, this.f_9745_);
                   });
@@ -1375,7 +_,7 @@
 
    private CompletableFuture<Component> m_215246_(String p_215247_) {
       Component component = Component.m_237113_(p_215247_);
-      CompletableFuture<Component> completablefuture = this.f_9745_.m_236742_().m_236961_(this.f_9743_, component).thenApply((p_238202_) -> {
+      CompletableFuture<Component> completablefuture = net.minecraftforge.common.ForgeHooks.getServerChatPreviewDecorator().m_236961_(this.f_9743_, component).thenApply((p_238202_) -> {
          return !component.equals(p_238202_) ? p_238202_ : null;
       });
       completablefuture.thenAcceptAsync((p_242747_) -> {
@@ -1524,11 +_,13 @@
             return;
          }
 
-         if (entity.m_20238_(this.f_9743_.m_146892_()) < f_215198_) {
+         if (true) { //Forge: Perform distance checks below since interactions and attacks differ.
             p_9866_.m_179617_(new ServerboundInteractPacket.Handler() {
                private void m_143678_(InteractionHand p_143679_, ServerGamePacketListenerImpl.EntityInteraction p_143680_) {
+                  if(!ServerGamePacketListenerImpl.this.f_9743_.canInteractWith(entity, 1.5D)) return; //Forge: If the entity cannot be reached, do nothing. Original check was dist < 6, range is 4.5, so vanilla used padding=1.5
                   ItemStack itemstack = ServerGamePacketListenerImpl.this.f_9743_.m_21120_(p_143679_).m_41777_();
                   InteractionResult interactionresult = p_143680_.m_143694_(ServerGamePacketListenerImpl.this.f_9743_, entity, p_143679_);
+                  if (net.minecraftforge.common.ForgeHooks.onInteractEntityAt(f_9743_, entity, entity.m_20182_(), p_143679_) != null) return;
                   if (interactionresult.m_19077_()) {
                      CriteriaTriggers.f_10565_.m_61494_(ServerGamePacketListenerImpl.this.f_9743_, itemstack, entity);
                      if (interactionresult.m_19080_()) {
@@ -1550,7 +_,7 @@
 
                public void m_141994_() {
                   if (!(entity instanceof ItemEntity) && !(entity instanceof ExperienceOrb) && !(entity instanceof AbstractArrow) && entity != ServerGamePacketListenerImpl.this.f_9743_) {
-                     ServerGamePacketListenerImpl.this.f_9743_.m_5706_(entity);
+                     if(ServerGamePacketListenerImpl.this.f_9743_.canHit(entity, 3)) ServerGamePacketListenerImpl.this.f_9743_.m_5706_(entity); //Forge: Perform attack range check. Original check was dist < 6, range is 3, so vanilla used padding=3
                   } else {
                      ServerGamePacketListenerImpl.this.m_9942_(Component.m_237115_("multiplayer.disconnect.invalid_entity_attacked"));
                      ServerGamePacketListenerImpl.f_9744_.warn("Player {} tried to attack an invalid entity", (Object)ServerGamePacketListenerImpl.this.f_9743_.m_7755_().getString());
@@ -1749,6 +_,7 @@
    }
 
    public void m_7423_(ServerboundCustomPayloadPacket p_9860_) {
+      net.minecraftforge.network.NetworkHooks.onCustomPayload(p_9860_, this.f_9742_);
    }
 
    public void m_7477_(ServerboundChangeDifficultyPacket p_9839_) {
