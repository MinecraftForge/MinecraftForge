--- a/net/minecraft/server/packs/VanillaPackResources.java
+++ b/net/minecraft/server/packs/VanillaPackResources.java
@@ -32,6 +_,19 @@
       this.f_10314_ = p_250468_;
       this.f_244169_ = p_248798_;
       this.f_244459_ = p_251106_;
+      this.cacheManager = new net.minecraftforge.resource.ResourceCacheManager(false, "indexVanillaPackCachesOnThread",
+          (packType, namespace) -> {
+             List<Path> validPaths = new java.util.ArrayList<>();
+
+             for (Path basePath : this.f_244459_.getOrDefault(packType, List.of())) {
+                Path path = basePath.resolve(namespace);
+                if (Files.exists(path) && PathPackResources.m_246877_(path)) {
+                   validPaths.add(path);
+                }
+             }
+
+             return validPaths;
+          });
    }
 
    @Nullable
@@ -66,6 +_,14 @@
    public void m_8031_(PackType p_248974_, String p_248703_, String p_250848_, PackResources.ResourceOutput p_249668_) {
       FileUtil.m_245538_(p_250848_).get().ifLeft((p_248228_) -> {
          List<Path> list = this.f_244459_.get(p_248974_);
+         // TODO 1.19.3: Fix resource caching to actually work and produce valid results -SS
+         // if (net.minecraftforge.resource.ResourceCacheManager.shouldUseCache() && this.cacheManager.hasCached(p_248974_, p_248703_)) {
+         //    for (Path rootPath : list) {
+         //       this.cacheManager.listResources(p_248974_, p_248703_, FileUtil.resolvePath(rootPath, p_248228_), this::getResource, p_249668_);
+         //    }
+         //    return;
+         // }
+
          int i = list.size();
          if (i == 1) {
             m_246310_(p_249668_, p_248703_, list.get(0), p_248228_);
@@ -161,5 +_,20 @@
             return new Resource(this, p_248221_);
          });
       };
+   }
+
+   private final net.minecraftforge.resource.ResourceCacheManager cacheManager;
+
+   @Override
+   public void initForNamespace(final String namespace) {
+      if (net.minecraftforge.resource.ResourceCacheManager.shouldUseCache())
+         this.cacheManager.index(namespace);
+   }
+
+   @Override
+   public void init(final PackType packType) {
+      // Forge: Init vanilla namespaces
+      initForNamespace("minecraft");
+      initForNamespace("realms");
    }
 }
