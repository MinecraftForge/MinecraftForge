--- a/net/minecraft/server/players/PlayerList.java
+++ b/net/minecraft/server/players/PlayerList.java
@@ -128,6 +_,7 @@
     private boolean allowCommandsForAllPlayers;
     private static final boolean ALLOW_LOGOUTIVATOR = false;
     private int sendAllPlayerInfoIn;
+    private final List<ServerPlayer> playersView = java.util.Collections.unmodifiableList(players);
 
     public PlayerList(MinecraftServer p_203842_, LayeredRegistryAccess<RegistryLayer> p_251844_, PlayerDataStorage p_203844_, int p_203845_) {
         this.server = p_203842_;
@@ -199,6 +_,7 @@
         servergamepacketlistenerimpl.send(new ClientboundChangeDifficultyPacket(leveldata.getDifficulty(), leveldata.isDifficultyLocked()));
         servergamepacketlistenerimpl.send(new ClientboundPlayerAbilitiesPacket(p_11263_.getAbilities()));
         servergamepacketlistenerimpl.send(new ClientboundSetCarriedItemPacket(p_11263_.getInventory().selected));
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.OnDatapackSyncEvent(this, null));
         servergamepacketlistenerimpl.send(new ClientboundUpdateRecipesPacket(this.server.getRecipeManager().getOrderedRecipes()));
         this.sendPlayerPermissionLevel(p_11263_);
         p_11263_.getStats().markAllDirty();
@@ -261,6 +_,7 @@
         }
 
         p_11263_.initInventoryMenu();
+        net.minecraftforge.event.ForgeEventFactory.firePlayerLoggedIn(p_11263_);
     }
 
     protected void updateEntireScoreboard(ServerScoreboard p_11274_, ServerPlayer p_11275_) {
@@ -326,6 +_,7 @@
             optional = Optional.of(compoundtag);
             p_11225_.load(compoundtag);
             LOGGER.debug("loading single player");
+            net.minecraftforge.event.ForgeEventFactory.firePlayerLoadingEvent(p_11225_, this.playerIo, p_11225_.getUUID().toString());
         } else {
             optional = this.playerIo.load(p_11225_);
         }
@@ -334,6 +_,7 @@
     }
 
     protected void save(ServerPlayer p_11277_) {
+        if (p_11277_.connection == null) return; // Not sure if still needed -Paint_Ninja
         this.playerIo.save(p_11277_);
         ServerStatsCounter serverstatscounter = this.stats.get(p_11277_.getUUID());
         if (serverstatscounter != null) {
@@ -347,6 +_,7 @@
     }
 
     public void remove(ServerPlayer p_11287_) {
+        net.minecraftforge.event.ForgeEventFactory.firePlayerLoggedOut(p_11287_);
         ServerLevel serverlevel = p_11287_.serverLevel();
         p_11287_.awardStat(Stats.LEAVE_GAME);
         this.save(p_11287_);
@@ -467,6 +_,7 @@
         this.playersByUUID.put(serverplayer.getUUID(), serverplayer);
         serverplayer.initInventoryMenu();
         serverplayer.setHealth(serverplayer.getHealth());
+        net.minecraftforge.event.ForgeEventFactory.firePlayerRespawnEvent(serverplayer, p_11238_);
         if (!p_11238_) {
             BlockPos blockpos = BlockPos.containing(dimensiontransition.pos());
             BlockState blockstate = serverlevel.getBlockState(blockpos);
@@ -572,6 +_,7 @@
     }
 
     public void op(GameProfile p_11254_) {
+        if (net.minecraftforge.event.ForgeEventFactory.onPermissionChanged(p_11254_, this.server.getOperatorUserPermissionLevel(), this)) return;
         this.ops.add(new ServerOpListEntry(p_11254_, this.server.getOperatorUserPermissionLevel(), this.ops.canBypassPlayerLimit(p_11254_)));
         ServerPlayer serverplayer = this.getPlayer(p_11254_.getId());
         if (serverplayer != null) {
@@ -580,6 +_,7 @@
     }
 
     public void deop(GameProfile p_11281_) {
+        if (net.minecraftforge.event.ForgeEventFactory.onPermissionChanged(p_11281_, 0, this)) return;
         this.ops.remove(p_11281_);
         ServerPlayer serverplayer = this.getPlayer(p_11281_.getId());
         if (serverplayer != null) {
@@ -793,13 +_,6 @@
         if (serverstatscounter == null) {
             File file1 = this.server.getWorldPath(LevelResource.PLAYER_STATS_DIR).toFile();
             File file2 = new File(file1, uuid + ".json");
-            if (!file2.exists()) {
-                File file3 = new File(file1, p_11240_.getName().getString() + ".json");
-                Path path = file3.toPath();
-                if (FileUtil.isPathNormalized(path) && FileUtil.isPathPortable(path) && path.startsWith(file1.getPath()) && file3.isFile()) {
-                    file3.renameTo(file2);
-                }
-            }
 
             serverstatscounter = new ServerStatsCounter(this.server, file2);
             this.stats.put(uuid, serverstatscounter);
@@ -844,7 +_,7 @@
     }
 
     public List<ServerPlayer> getPlayers() {
-        return this.players;
+        return this.playersView; //Unmodifiable view, we don't want people removing things without us knowing.
     }
 
     @Nullable
@@ -861,6 +_,7 @@
             playeradvancements.reload(this.server.getAdvancements());
         }
 
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.OnDatapackSyncEvent(this, null));
         this.broadcastAll(new ClientboundUpdateTagsPacket(TagNetworkSerialization.serializeTagsToNetwork(this.registries)));
         ClientboundUpdateRecipesPacket clientboundupdaterecipespacket = new ClientboundUpdateRecipesPacket(this.server.getRecipeManager().getOrderedRecipes());
 
