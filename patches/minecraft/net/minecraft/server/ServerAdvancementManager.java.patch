--- a/net/minecraft/server/ServerAdvancementManager.java
+++ b/net/minecraft/server/ServerAdvancementManager.java
@@ -32,12 +_,22 @@
       this.f_136024_ = p_136027_;
    }
 
+   @Deprecated(forRemoval = true, since = "1.19.3")
+   public ServerAdvancementManager(PredicateManager p_136027_, net.minecraftforge.common.crafting.conditions.ICondition.IContext context) {
+      this(p_136027_);
+      this.conditionContext = context;
+   }
+
    protected void m_5787_(Map<ResourceLocation, JsonElement> p_136034_, ResourceManager p_136035_, ProfilerFiller p_136036_) {
       Map<ResourceLocation, Advancement.Builder> map = Maps.newHashMap();
       p_136034_.forEach((p_136039_, p_136040_) -> {
          try {
             JsonObject jsonobject = GsonHelper.m_13918_(p_136040_, "advancement");
-            Advancement.Builder advancement$builder = Advancement.Builder.m_138380_(jsonobject, new DeserializationContext(p_136039_, this.f_136024_));
+            Advancement.Builder advancement$builder = Advancement.Builder.fromJson(jsonobject, new DeserializationContext(p_136039_, this.f_136024_), conditionContext);
+            if (advancement$builder == null) {
+                f_136021_.debug("Skipping loading advancement {} as it's conditions were not met", p_136039_);
+                return;
+            }
             map.put(p_136039_, advancement$builder);
          } catch (Exception exception) {
             f_136021_.error("Parsing error loading custom advancement {}: {}", p_136039_, exception.getMessage());
@@ -64,4 +_,7 @@
    public Collection<Advancement> m_136028_() {
       return this.f_136023_.m_139344_();
    }
+
+   @Override // TODO - 1.20: Change this to forge:conditions
+   protected String getConditionsMemberName() { return "conditions"; }
 }
