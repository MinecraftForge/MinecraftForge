--- a/net/minecraft/fluid/LavaFluid.java
+++ b/net/minecraft/fluid/LavaFluid.java
@@ -71,7 +_,7 @@
                BlockState blockstate = p_207186_1_.getBlockState(blockpos);
                if (blockstate.isAir()) {
                   if (this.hasFlammableNeighbours(p_207186_1_, blockpos)) {
-                     p_207186_1_.setBlockAndUpdate(blockpos, AbstractFireBlock.getState(p_207186_1_, blockpos));
+                     p_207186_1_.setBlockAndUpdate(blockpos, net.minecraftforge.event.ForgeEventFactory.fireFluidPlaceBlockEvent(p_207186_1_, blockpos, p_207186_2_, Blocks.FIRE.defaultBlockState()));
                      return;
                   }
                } else if (blockstate.getMaterial().blocksMotion()) {
@@ -85,8 +_,8 @@
                   return;
                }
 
-               if (p_207186_1_.isEmptyBlock(blockpos1.above()) && this.isFlammable(p_207186_1_, blockpos1)) {
-                  p_207186_1_.setBlockAndUpdate(blockpos1.above(), AbstractFireBlock.getState(p_207186_1_, blockpos1));
+               if (p_207186_1_.isEmptyBlock(blockpos1.above()) && this.isFlammable(p_207186_1_, blockpos1, Direction.UP)) {
+                  p_207186_1_.setBlockAndUpdate(blockpos1.above(), net.minecraftforge.event.ForgeEventFactory.fireFluidPlaceBlockEvent(p_207186_1_, blockpos1.above(), p_207186_2_, Blocks.FIRE.defaultBlockState()));
                }
             }
          }
@@ -96,7 +_,7 @@
 
    private boolean hasFlammableNeighbours(IWorldReader p_176369_1_, BlockPos p_176369_2_) {
       for(Direction direction : Direction.values()) {
-         if (this.isFlammable(p_176369_1_, p_176369_2_.relative(direction))) {
+         if (this.isFlammable(p_176369_1_, p_176369_2_.relative(direction), direction.getOpposite())) {
             return true;
          }
       }
@@ -104,10 +_,16 @@
       return false;
    }
 
+   /** @deprecated Forge: use {@link LavaFluid#isFlammable(IWorldReader,BlockPos,Direction)} instead */
+   @Deprecated
    private boolean isFlammable(IWorldReader p_176368_1_, BlockPos p_176368_2_) {
       return p_176368_2_.getY() >= 0 && p_176368_2_.getY() < 256 && !p_176368_1_.hasChunkAt(p_176368_2_) ? false : p_176368_1_.getBlockState(p_176368_2_).getMaterial().isFlammable();
    }
 
+   private boolean isFlammable(IWorldReader world, BlockPos pos, Direction face) {
+      return pos.getY() >= 0 && pos.getY() < 256 && !world.hasChunkAt(pos) ? false : world.getBlockState(pos).isFlammable(world, pos, face);
+   }
+
    @Nullable
    @OnlyIn(Dist.CLIENT)
    public IParticleData getDripParticle() {
@@ -164,7 +_,7 @@
          FluidState fluidstate = p_205574_1_.getFluidState(p_205574_2_);
          if (this.is(FluidTags.LAVA) && fluidstate.is(FluidTags.WATER)) {
             if (p_205574_3_.getBlock() instanceof FlowingFluidBlock) {
-               p_205574_1_.setBlock(p_205574_2_, Blocks.STONE.defaultBlockState(), 3);
+               p_205574_1_.setBlock(p_205574_2_, net.minecraftforge.event.ForgeEventFactory.fireFluidPlaceBlockEvent(p_205574_1_, p_205574_2_, p_205574_2_, Blocks.STONE.defaultBlockState()), 3);
             }
 
             this.fizz(p_205574_1_, p_205574_2_);
