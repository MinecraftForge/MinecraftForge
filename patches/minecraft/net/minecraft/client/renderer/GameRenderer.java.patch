--- a/net/minecraft/client/renderer/GameRenderer.java
+++ b/net/minecraft/client/renderer/GameRenderer.java
@@ -311,6 +_,8 @@
             this.loadEffect(ResourceLocation.withDefaultNamespace("shaders/post/spider.json"));
         } else if (p_109107_ instanceof EnderMan) {
             this.loadEffect(ResourceLocation.withDefaultNamespace("shaders/post/invert.json"));
+        } else {
+            net.minecraftforge.client.ForgeHooksClient.loadEntityShader(p_109107_, this);
         }
     }
 
@@ -350,8 +_,11 @@
     public void processBlurEffect(float p_333718_) {
         float f = (float)this.minecraft.options.getMenuBackgroundBlurriness();
         if (this.blurEffect != null && f >= 1.0F) {
+            // FORGE: Blending the blur was removed in 1.21. This is necessary for screen layering to work properly. https://github.com/MinecraftForge/MinecraftForge/issues/10114
+            RenderSystem.enableBlend();
             this.blurEffect.setUniform("Radius", f);
             this.blurEffect.process(p_333718_);
+            RenderSystem.disableBlend();
         }
     }
 
@@ -526,6 +_,7 @@
                 Pair.of(new ShaderInstance(p_250719_, "rendertype_gui_ghost_recipe_overlay", DefaultVertexFormat.POSITION_COLOR), p_286147_ -> rendertypeGuiGhostRecipeOverlayShader = p_286147_)
             );
             list1.add(Pair.of(new ShaderInstance(p_250719_, "rendertype_breeze_wind", DefaultVertexFormat.NEW_ENTITY), p_308287_ -> rendertypeBreezeWindShader = p_308287_));
+            net.minecraftforge.client.event.ForgeEventFactoryClient.onRegisterShaders(p_250719_, list1);
             this.loadBlurEffect(p_250719_);
         } catch (IOException ioexception) {
             list1.forEach(p_172729_ -> p_172729_.getFirst().close());
@@ -685,7 +_,7 @@
                 d0 *= Mth.lerp(this.minecraft.options.fovEffectScale().get(), 1.0, 0.85714287F);
             }
 
-            return d0;
+            return net.minecraftforge.client.event.ForgeEventFactoryClient.fireComputeFov(this, p_109142_, p_109143_, d0, p_109144_).getFOV();
         }
     }
 
@@ -843,12 +_,12 @@
                     (float)((double)window.getHeight() / window.getGuiScale()),
                     0.0F,
                     1000.0F,
-                    21000.0F
+                    net.minecraftforge.client.ForgeHooksClient.getGuiFarPlane()
                 );
             RenderSystem.setProjectionMatrix(matrix4f, VertexSorting.ORTHOGRAPHIC_Z);
             Matrix4fStack matrix4fstack = RenderSystem.getModelViewStack();
             matrix4fstack.pushMatrix();
-            matrix4fstack.translation(0.0F, 0.0F, -11000.0F);
+            matrix4fstack.translation(0.0F, 0.0F, 10000F - net.minecraftforge.client.ForgeHooksClient.getGuiFarPlane());
             RenderSystem.applyModelViewMatrix();
             Lighting.setupFor3DItems();
             GuiGraphics guigraphics = new GuiGraphics(this.minecraft, this.renderBuffers.bufferSource());
@@ -882,7 +_,7 @@
                 }
             } else if (flag && this.minecraft.screen != null) {
                 try {
-                    this.minecraft.screen.renderWithTooltip(guigraphics, i, j, p_343467_.getRealtimeDeltaTicks());
+                    net.minecraftforge.client.ForgeHooksClient.drawScreen(this.minecraft.screen, guigraphics, i, j, p_343467_.getRealtimeDeltaTicks());
                 } catch (Throwable throwable1) {
                     CrashReport crashreport1 = CrashReport.forThrowable(throwable1, "Rendering screen");
                     CrashReportCategory crashreportcategory1 = crashreport1.addCategory("Screen render details");
@@ -1053,12 +_,17 @@
         }
 
         this.resetProjectionMatrix(matrix4f);
+
+        var cameraSetup = net.minecraftforge.client.event.ForgeEventFactoryClient.fireComputeCameraAngles(this, camera, f);
+        camera.setRotation(cameraSetup.getYaw(), cameraSetup.getPitch(), cameraSetup.getRoll());
         Quaternionf quaternionf = camera.rotation().conjugate(new Quaternionf());
         Matrix4f matrix4f1 = new Matrix4f().rotation(quaternionf);
         this.minecraft
             .levelRenderer
             .prepareCullFrustum(camera.getPosition(), matrix4f1, this.getProjectionMatrix(Math.max(d0, (double)this.minecraft.options.fov().get().intValue())));
         this.minecraft.levelRenderer.renderLevel(p_342230_, flag, camera, this, this.lightTexture, matrix4f1, matrix4f);
+        this.minecraft.getProfiler().popPush("forge_render_last");
+        net.minecraftforge.client.event.RenderLevelStageEvent.Stage.AFTER_LEVEL.dispatch(this.minecraft.levelRenderer, posestack.last().pose(), matrix4f, this.minecraft.levelRenderer.getTicks(), camera, this.minecraft.levelRenderer.getFrustum());
         this.minecraft.getProfiler().popPush("hand");
         if (this.renderHand) {
             RenderSystem.clear(256, Minecraft.ON_OSX);
