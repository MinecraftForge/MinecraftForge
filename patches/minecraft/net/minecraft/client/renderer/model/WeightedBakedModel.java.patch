--- a/net/minecraft/client/renderer/model/WeightedBakedModel.java
+++ b/net/minecraft/client/renderer/model/WeightedBakedModel.java
@@ -12,7 +_,7 @@
 import net.minecraftforge.api.distmarker.OnlyIn;
 
 @OnlyIn(Dist.CLIENT)
-public class WeightedBakedModel implements IBakedModel {
+public class WeightedBakedModel implements net.minecraftforge.client.model.data.IDynamicBakedModel {
    private final int totalWeight;
    private final List<WeightedBakedModel.WeightedModel> list;
    private final IBakedModel wrapped;
@@ -23,14 +_,20 @@
       this.wrapped = (p_i46073_1_.get(0)).model;
    }
 
-   public List<BakedQuad> getQuads(@Nullable BlockState p_200117_1_, @Nullable Direction p_200117_2_, Random p_200117_3_) {
-      return (WeightedRandom.getWeightedItem(this.list, Math.abs((int)p_200117_3_.nextLong()) % this.totalWeight)).model.getQuads(p_200117_1_, p_200117_2_, p_200117_3_);
+   // FORGE: Implement our overloads (here and below) so child models can have custom logic 
+   public List<BakedQuad> getQuads(@Nullable BlockState p_200117_1_, @Nullable Direction p_200117_2_, Random p_200117_3_, net.minecraftforge.client.model.data.IModelData modelData) {
+      return (WeightedRandom.getWeightedItem(this.list, Math.abs((int)p_200117_3_.nextLong()) % this.totalWeight)).model.getQuads(p_200117_1_, p_200117_2_, p_200117_3_, modelData);
    }
 
    public boolean useAmbientOcclusion() {
       return this.wrapped.useAmbientOcclusion();
    }
 
+   @Override
+   public boolean isAmbientOcclusion(BlockState state) {
+      return this.wrapped.isAmbientOcclusion(state);
+   }
+
    public boolean isGui3d() {
       return this.wrapped.isGui3d();
    }
@@ -47,8 +_,16 @@
       return this.wrapped.getParticleIcon();
    }
 
+   public TextureAtlasSprite getParticleTexture(net.minecraftforge.client.model.data.IModelData modelData) {
+      return this.wrapped.getParticleTexture(modelData);
+   }
+
    public ItemCameraTransforms getTransforms() {
       return this.wrapped.getTransforms();
+   }
+
+   public IBakedModel handlePerspective(net.minecraft.client.renderer.model.ItemCameraTransforms.TransformType transformType, com.mojang.blaze3d.matrix.MatrixStack matrixStack) {
+      return this.wrapped.handlePerspective(transformType, matrixStack);
    }
 
    public ItemOverrideList getOverrides() {
