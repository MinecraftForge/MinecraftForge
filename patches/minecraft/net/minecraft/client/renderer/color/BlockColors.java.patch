--- ../src-base/minecraft/net/minecraft/client/renderer/color/BlockColors.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/color/BlockColors.java
@@ -40,6 +40,12 @@
                 BlockDoublePlant.EnumPlantType blockdoubleplant$enumplanttype = (BlockDoublePlant.EnumPlantType)state.getValue(BlockDoublePlant.VARIANT);
                 return worldIn == null || pos == null || blockdoubleplant$enumplanttype != BlockDoublePlant.EnumPlantType.GRASS && blockdoubleplant$enumplanttype != BlockDoublePlant.EnumPlantType.FERN ? -1 : BiomeColorHelper.getGrassColorAtPos(worldIn, pos);
             }
+
+            @Override
+            public boolean preventParticleDiggingColoring(IBlockState blockState, BlockPos pos) 
+            {
+                return false;
+            }
         }, new Block[] {Blocks.DOUBLE_PLANT});
         blockcolors.registerBlockColorHandler(new IBlockColor()
         {
@@ -67,6 +73,12 @@
                     return -1;
                 }
             }
+
+            @Override
+            public boolean preventParticleDiggingColoring(IBlockState blockState, BlockPos pos) 
+            {
+                return false;
+            }
         }, new Block[] {Blocks.FLOWER_POT});
         blockcolors.registerBlockColorHandler(new IBlockColor()
         {
@@ -74,6 +86,12 @@
             {
                 return worldIn != null && pos != null ? BiomeColorHelper.getGrassColorAtPos(worldIn, pos) : ColorizerGrass.getGrassColor(0.5D, 1.0D);
             }
+
+            @Override
+            public boolean preventParticleDiggingColoring(IBlockState blockState, BlockPos pos) 
+            {
+                return false;
+            }
         }, new Block[] {Blocks.GRASS});
         blockcolors.registerBlockColorHandler(new IBlockColor()
         {
@@ -82,6 +100,12 @@
                 BlockPlanks.EnumType blockplanks$enumtype = (BlockPlanks.EnumType)state.getValue(BlockOldLeaf.VARIANT);
                 return blockplanks$enumtype == BlockPlanks.EnumType.SPRUCE ? ColorizerFoliage.getFoliageColorPine() : (blockplanks$enumtype == BlockPlanks.EnumType.BIRCH ? ColorizerFoliage.getFoliageColorBirch() : (worldIn != null && pos != null ? BiomeColorHelper.getFoliageColorAtPos(worldIn, pos) : ColorizerFoliage.getFoliageColorBasic()));
             }
+
+            @Override
+            public boolean preventParticleDiggingColoring(IBlockState blockState, BlockPos pos) 
+            {
+                return false;
+            }
         }, new Block[] {Blocks.LEAVES});
         blockcolors.registerBlockColorHandler(new IBlockColor()
         {
@@ -89,6 +113,12 @@
             {
                 return worldIn != null && pos != null ? BiomeColorHelper.getFoliageColorAtPos(worldIn, pos) : ColorizerFoliage.getFoliageColorBasic();
             }
+
+            @Override
+            public boolean preventParticleDiggingColoring(IBlockState blockState, BlockPos pos) 
+            {
+                return false;
+            }
         }, new Block[] {Blocks.LEAVES2});
         blockcolors.registerBlockColorHandler(new IBlockColor()
         {
@@ -96,6 +126,12 @@
             {
                 return worldIn != null && pos != null ? BiomeColorHelper.getWaterColorAtPos(worldIn, pos) : -1;
             }
+
+            @Override
+            public boolean preventParticleDiggingColoring(IBlockState blockState, BlockPos pos) 
+            {
+                return false;
+            }
         }, new Block[] {Blocks.WATER, Blocks.FLOWING_WATER});
         blockcolors.registerBlockColorHandler(new IBlockColor()
         {
@@ -103,6 +139,12 @@
             {
                 return BlockRedstoneWire.colorMultiplier(((Integer)state.getValue(BlockRedstoneWire.POWER)).intValue());
             }
+
+            @Override
+            public boolean preventParticleDiggingColoring(IBlockState blockState, BlockPos pos) 
+            {
+                return false;
+            }
         }, new Block[] {Blocks.REDSTONE_WIRE});
         blockcolors.registerBlockColorHandler(new IBlockColor()
         {
@@ -110,6 +152,12 @@
             {
                 return worldIn != null && pos != null ? BiomeColorHelper.getGrassColorAtPos(worldIn, pos) : -1;
             }
+
+            @Override
+            public boolean preventParticleDiggingColoring(IBlockState blockState, BlockPos pos) 
+            {
+                return false;
+            }
         }, new Block[] {Blocks.REEDS});
         blockcolors.registerBlockColorHandler(new IBlockColor()
         {
@@ -121,6 +169,12 @@
                 int l = i * 4;
                 return j << 16 | k << 8 | l;
             }
+
+            @Override
+            public boolean preventParticleDiggingColoring(IBlockState blockState, BlockPos pos) 
+            {
+                return false;
+            }
         }, new Block[] {Blocks.MELON_STEM, Blocks.PUMPKIN_STEM});
         blockcolors.registerBlockColorHandler(new IBlockColor()
         {
@@ -128,6 +182,12 @@
             {
                 return worldIn != null && pos != null ? BiomeColorHelper.getGrassColorAtPos(worldIn, pos) : (state.getValue(BlockTallGrass.TYPE) == BlockTallGrass.EnumType.DEAD_BUSH ? 16777215 : ColorizerGrass.getGrassColor(0.5D, 1.0D));
             }
+
+            @Override
+            public boolean preventParticleDiggingColoring(IBlockState blockState, BlockPos pos) 
+            {
+                return false;
+            }
         }, new Block[] {Blocks.TALLGRASS});
         blockcolors.registerBlockColorHandler(new IBlockColor()
         {
@@ -135,6 +195,12 @@
             {
                 return worldIn != null && pos != null ? BiomeColorHelper.getFoliageColorAtPos(worldIn, pos) : ColorizerFoliage.getFoliageColorBasic();
             }
+
+            @Override
+            public boolean preventParticleDiggingColoring(IBlockState blockState, BlockPos pos) 
+            {
+                return false;
+            }
         }, new Block[] {Blocks.VINE});
         blockcolors.registerBlockColorHandler(new IBlockColor()
         {
@@ -142,6 +208,12 @@
             {
                 return worldIn != null && pos != null ? 2129968 : 7455580;
             }
+
+            @Override
+            public boolean preventParticleDiggingColoring(IBlockState blockState, BlockPos pos) 
+            {
+                return false;
+            }
         }, new Block[] {Blocks.WATERLILY});
         return blockcolors;
     }
@@ -160,6 +232,18 @@
             return mapcolor != null ? mapcolor.colorValue : -1;
         }
     }
+    
+    public boolean getPreventParticleDiggingColoring(IBlockState state, BlockPos pos) 
+    {
+        IBlockColor iblockcolor = (IBlockColor)this.blockColorMap.get(state.getBlock().delegate);
+        
+        if (iblockcolor != null)
+        {
+            return iblockcolor.preventParticleDiggingColoring(state, pos);
+        }
+        else
+            return false;
+    }
 
     public int colorMultiplier(IBlockState state, @Nullable IBlockAccess blockAccess, @Nullable BlockPos pos, int renderPass)
     {
