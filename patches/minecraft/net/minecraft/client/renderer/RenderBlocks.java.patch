--- ../src_base/minecraft/net/minecraft/client/renderer/RenderBlocks.java
+++ ../src_work/minecraft/net/minecraft/client/renderer/RenderBlocks.java
@@ -45,6 +45,8 @@
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.opengl.GL12;
 
+import static net.minecraftforge.common.ForgeDirection.*;
+
 @SideOnly(Side.CLIENT)
 public class RenderBlocks
 {
@@ -534,9 +536,8 @@
     public boolean renderBlockBed(Block par1Block, int par2, int par3, int par4)
     {
         Tessellator tessellator = Tessellator.instance;
-        int l = this.blockAccess.getBlockMetadata(par2, par3, par4);
-        int i1 = BlockBed.getDirection(l);
-        boolean flag = BlockBed.isBlockHeadOfBed(l);
+        int i1 = par1Block.getBedDirection(blockAccess, par2, par3, par4);
+        boolean flag = par1Block.isBedFoot(blockAccess, par2, par3, par4);
         float f = 0.5F;
         float f1 = 1.0F;
         float f2 = 0.8F;
@@ -545,6 +546,7 @@
         tessellator.setBrightness(j1);
         tessellator.setColorOpaque_F(f, f, f);
         Icon icon = this.getBlockIcon(par1Block, this.blockAccess, par2, par3, par4, 0);
+        if (hasOverrideBlockTexture()) icon = overrideBlockTexture; //BugFix Proper breaking texture on underside
         double d0 = (double)icon.getMinU();
         double d1 = (double)icon.getMaxU();
         double d2 = (double)icon.getMinV();
@@ -561,6 +563,7 @@
         tessellator.setBrightness(par1Block.getMixedBrightnessForBlock(this.blockAccess, par2, par3 + 1, par4));
         tessellator.setColorOpaque_F(f1, f1, f1);
         icon = this.getBlockIcon(par1Block, this.blockAccess, par2, par3, par4, 1);
+        if (hasOverrideBlockTexture()) icon = overrideBlockTexture; //BugFix Proper breaking texture on underside
         d0 = (double)icon.getMinU();
         d1 = (double)icon.getMaxU();
         d2 = (double)icon.getMinV();
@@ -776,14 +779,14 @@
         this.renderFaceXNeg(par1BlockCauldron, (double)((float)par2 + 1.0F - f4), (double)par3, (double)par4, icon);
         this.renderFaceZPos(par1BlockCauldron, (double)par2, (double)par3, (double)((float)par4 - 1.0F + f4), icon);
         this.renderFaceZNeg(par1BlockCauldron, (double)par2, (double)par3, (double)((float)par4 + 1.0F - f4), icon);
-        Icon icon1 = BlockCauldron.func_94375_b("inner");
+        Icon icon1 = BlockCauldron.getCauldronIcon("inner");
         this.renderFaceYPos(par1BlockCauldron, (double)par2, (double)((float)par3 - 1.0F + 0.25F), (double)par4, icon1);
         this.renderFaceYNeg(par1BlockCauldron, (double)par2, (double)((float)par3 + 1.0F - 0.75F), (double)par4, icon1);
         int i1 = this.blockAccess.getBlockMetadata(par2, par3, par4);
 
         if (i1 > 0)
         {
-            Icon icon2 = BlockFluid.func_94424_b("water_still");
+            Icon icon2 = BlockFluid.getFluidIcon("water_still");
 
             if (i1 > 3)
             {
@@ -1406,7 +1409,7 @@
      */
     public void renderPistonRodUD(double par1, double par3, double par5, double par7, double par9, double par11, float par13, double par14)
     {
-        Icon icon = BlockPistonBase.func_94496_b("piston_side");
+        Icon icon = BlockPistonBase.getPistonBaseIcon("piston_side");
 
         if (this.hasOverrideBlockTexture())
         {
@@ -1430,7 +1433,7 @@
      */
     public void renderPistonRodSN(double par1, double par3, double par5, double par7, double par9, double par11, float par13, double par14)
     {
-        Icon icon = BlockPistonBase.func_94496_b("piston_side");
+        Icon icon = BlockPistonBase.getPistonBaseIcon("piston_side");
 
         if (this.hasOverrideBlockTexture())
         {
@@ -1454,7 +1457,7 @@
      */
     public void renderPistonRodEW(double par1, double par3, double par5, double par7, double par9, double par11, float par13, double par14)
     {
-        Icon icon = BlockPistonBase.func_94496_b("piston_side");
+        Icon icon = BlockPistonBase.getPistonBaseIcon("piston_side");
 
         if (this.hasOverrideBlockTexture())
         {
@@ -2334,8 +2337,8 @@
     public boolean renderBlockFire(BlockFire par1BlockFire, int par2, int par3, int par4)
     {
         Tessellator tessellator = Tessellator.instance;
-        Icon icon = par1BlockFire.func_94438_c(0);
-        Icon icon1 = par1BlockFire.func_94438_c(1);
+        Icon icon = par1BlockFire.getFireIcon(0);
+        Icon icon1 = par1BlockFire.getFireIcon(1);
         Icon icon2 = icon;
 
         if (this.hasOverrideBlockTexture())
@@ -2358,7 +2361,7 @@
         double d9;
         double d10;
 
-        if (!this.blockAccess.doesBlockHaveSolidTopSurface(par2, par3 - 1, par4) && !Block.fire.canBlockCatchFire(this.blockAccess, par2, par3 - 1, par4))
+        if (!this.blockAccess.doesBlockHaveSolidTopSurface(par2, par3 - 1, par4) && !Block.fire.canBlockCatchFire(this.blockAccess, par2, par3 - 1, par4, UP))
         {
             float f1 = 0.2F;
             float f2 = 0.0625F;
@@ -2378,7 +2381,7 @@
                 d0 = d5;
             }
 
-            if (Block.fire.canBlockCatchFire(this.blockAccess, par2 - 1, par3, par4))
+            if (Block.fire.canBlockCatchFire(this.blockAccess, par2 - 1, par3, par4, EAST))
             {
                 tessellator.addVertexWithUV((double)((float)par2 + f1), (double)((float)par3 + f + f2), (double)(par4 + 1), d2, d1);
                 tessellator.addVertexWithUV((double)(par2 + 0), (double)((float)(par3 + 0) + f2), (double)(par4 + 1), d2, d3);
@@ -2390,7 +2393,7 @@
                 tessellator.addVertexWithUV((double)((float)par2 + f1), (double)((float)par3 + f + f2), (double)(par4 + 1), d2, d1);
             }
 
-            if (Block.fire.canBlockCatchFire(this.blockAccess, par2 + 1, par3, par4))
+            if (Block.fire.canBlockCatchFire(this.blockAccess, par2 + 1, par3, par4, WEST))
             {
                 tessellator.addVertexWithUV((double)((float)(par2 + 1) - f1), (double)((float)par3 + f + f2), (double)(par4 + 0), d0, d1);
                 tessellator.addVertexWithUV((double)(par2 + 1 - 0), (double)((float)(par3 + 0) + f2), (double)(par4 + 0), d0, d3);
@@ -2402,7 +2405,7 @@
                 tessellator.addVertexWithUV((double)((float)(par2 + 1) - f1), (double)((float)par3 + f + f2), (double)(par4 + 0), d0, d1);
             }
 
-            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3, par4 - 1))
+            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3, par4 - 1, SOUTH))
             {
                 tessellator.addVertexWithUV((double)(par2 + 0), (double)((float)par3 + f + f2), (double)((float)par4 + f1), d2, d1);
                 tessellator.addVertexWithUV((double)(par2 + 0), (double)((float)(par3 + 0) + f2), (double)(par4 + 0), d2, d3);
@@ -2414,7 +2417,7 @@
                 tessellator.addVertexWithUV((double)(par2 + 0), (double)((float)par3 + f + f2), (double)((float)par4 + f1), d2, d1);
             }
 
-            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3, par4 + 1))
+            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3, par4 + 1, NORTH))
             {
                 tessellator.addVertexWithUV((double)(par2 + 1), (double)((float)par3 + f + f2), (double)((float)(par4 + 1) - f1), d0, d1);
                 tessellator.addVertexWithUV((double)(par2 + 1), (double)((float)(par3 + 0) + f2), (double)(par4 + 1 - 0), d0, d3);
@@ -2426,7 +2429,7 @@
                 tessellator.addVertexWithUV((double)(par2 + 1), (double)((float)par3 + f + f2), (double)((float)(par4 + 1) - f1), d0, d1);
             }
 
-            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3 + 1, par4))
+            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3 + 1, par4, DOWN))
             {
                 d5 = (double)par2 + 0.5D + 0.5D;
                 d6 = (double)par2 + 0.5D - 0.5D;
@@ -2545,10 +2548,10 @@
     {
         Tessellator tessellator = Tessellator.instance;
         int l = this.blockAccess.getBlockMetadata(par2, par3, par4);
-        Icon icon = BlockRedstoneWire.func_94409_b("cross");
-        Icon icon1 = BlockRedstoneWire.func_94409_b("line");
-        Icon icon2 = BlockRedstoneWire.func_94409_b("cross_overlay");
-        Icon icon3 = BlockRedstoneWire.func_94409_b("line_overlay");
+        Icon icon = BlockRedstoneWire.getRedstoneWireIcon("cross");
+        Icon icon1 = BlockRedstoneWire.getRedstoneWireIcon("line");
+        Icon icon2 = BlockRedstoneWire.getRedstoneWireIcon("cross_overlay");
+        Icon icon3 = BlockRedstoneWire.getRedstoneWireIcon("line_overlay");
         tessellator.setBrightness(par1Block.getMixedBrightnessForBlock(this.blockAccess, par2, par3, par4));
         float f = 1.0F;
         float f1 = (float)l / 15.0F;
@@ -3057,10 +3060,10 @@
         double d17 = (double)par2 + 0.5D + 0.0625D;
         double d18 = (double)par4 + 0.5D - 0.0625D;
         double d19 = (double)par4 + 0.5D + 0.0625D;
-        boolean flag = par1BlockPane.canThisPaneConnectToThisBlockID(this.blockAccess.getBlockId(par2, par3, par4 - 1));
-        boolean flag1 = par1BlockPane.canThisPaneConnectToThisBlockID(this.blockAccess.getBlockId(par2, par3, par4 + 1));
-        boolean flag2 = par1BlockPane.canThisPaneConnectToThisBlockID(this.blockAccess.getBlockId(par2 - 1, par3, par4));
-        boolean flag3 = par1BlockPane.canThisPaneConnectToThisBlockID(this.blockAccess.getBlockId(par2 + 1, par3, par4));
+        boolean flag = par1BlockPane.canPaneConnectTo(this.blockAccess,par2, par3, par4, NORTH);
+        boolean flag1 = par1BlockPane.canPaneConnectTo(this.blockAccess,par2, par3, par4, SOUTH);
+        boolean flag2 = par1BlockPane.canPaneConnectTo(this.blockAccess,par2, par3, par4, WEST);
+        boolean flag3 = par1BlockPane.canPaneConnectTo(this.blockAccess,par2, par3, par4, EAST);
         boolean flag4 = par1BlockPane.shouldSideBeRendered(this.blockAccess, par2, par3 + 1, par4, 1);
         boolean flag5 = par1BlockPane.shouldSideBeRendered(this.blockAccess, par2, par3 - 1, par4, 0);
         double d20 = 0.01D;
@@ -3716,7 +3719,7 @@
     public void renderBlockStemBig(BlockStem par1BlockStem, int par2, int par3, double par4, double par6, double par8, double par10)
     {
         Tessellator tessellator = Tessellator.instance;
-        Icon icon = par1BlockStem.func_94368_p();
+        Icon icon = par1BlockStem.getStemIcon();
 
         if (this.hasOverrideBlockTexture())
         {
@@ -4168,7 +4171,7 @@
             f2 = f5;
         }
 
-        return Minecraft.isAmbientOcclusionEnabled() && Block.lightValue[par1Block.blockID] == 0 ? (this.partialRenderBounds ? this.renderBlockWithAmbientOcclusion(par1Block, par2, par3, par4, f, f1, f2) : this.renderStandardBlockWithAmbientOcclusion(par1Block, par2, par3, par4, f, f1, f2)) : this.renderStandardBlockWithColorMultiplier(par1Block, par2, par3, par4, f, f1, f2);
+        return Minecraft.isAmbientOcclusionEnabled() && Block.lightValue[par1Block.blockID] == 0 ? (this.partialRenderBounds ? this.renderStandardBlockWithAmbientOcclusionPartial(par1Block, par2, par3, par4, f, f1, f2) : this.renderStandardBlockWithAmbientOcclusion(par1Block, par2, par3, par4, f, f1, f2)) : this.renderStandardBlockWithColorMultiplier(par1Block, par2, par3, par4, f, f1, f2);
     }
 
     /**
@@ -5022,7 +5025,7 @@
     /**
      * Renders non-full-cube block with ambient occusion.  Args: block, x, y, z, red, green, blue (lighting)
      */
-    public boolean renderBlockWithAmbientOcclusion(Block par1Block, int par2, int par3, int par4, float par5, float par6, float par7)
+    public boolean renderStandardBlockWithAmbientOcclusionPartial(Block par1Block, int par2, int par3, int par4, float par5, float par6, float par7)
     {
         this.enableAO = true;
         boolean flag = false;
@@ -6018,7 +6021,7 @@
         int l = this.blockAccess.getBlockMetadata(par2, par3, par4);
         int i1 = BlockDirectional.getDirection(l);
         int j1 = BlockCocoa.func_72219_c(l);
-        Icon icon = par1BlockCocoa.func_94468_i_(j1);
+        Icon icon = par1BlockCocoa.getCocoaIcon(j1);
         int k1 = 4 + j1 * 2;
         int l1 = 5 + j1 * 2;
         double d0 = 15.0D - (double)k1;
@@ -8178,7 +8181,7 @@
     {
         if (par1Icon == null)
         {
-            par1Icon = ((TextureMap)Minecraft.getMinecraft().func_110434_K().func_110581_b(TextureMap.field_110575_b)).func_110572_b("missingno");
+            par1Icon = ((TextureMap)Minecraft.getMinecraft().getTextureManager().getTexture(TextureMap.locationBlocksTexture)).getAtlasSprite("missingno");
         }
 
         return (Icon)par1Icon;
