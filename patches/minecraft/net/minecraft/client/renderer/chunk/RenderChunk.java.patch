--- ../src-base/minecraft/net/minecraft/client/renderer/chunk/RenderChunk.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/chunk/RenderChunk.java
@@ -131,7 +131,7 @@
                 return;
             }
 
-            iblockaccess = new RegionRenderCache(this.field_178588_d, blockpos.func_177982_a(-1, -1, -1), blockpos1.func_177982_a(1, 1, 1), 1);
+            iblockaccess = createRegionRenderCache(this.field_178588_d, blockpos.func_177982_a(-1, -1, -1), blockpos1.func_177982_a(1, 1, 1), 1);
             p_178581_4_.func_178543_a(compiledchunk);
         }
         finally
@@ -158,7 +158,7 @@
                     lvt_10_1_.func_178606_a(blockpos$mutableblockpos);
                 }
 
-                if (block.func_149716_u())
+                if (block.hasTileEntity(iblockstate))
                 {
                     TileEntity tileentity = iblockaccess.func_175625_s(new BlockPos(blockpos$mutableblockpos));
                     TileEntitySpecialRenderer<TileEntity> tileentityspecialrenderer = TileEntityRendererDispatcher.field_147556_a.<TileEntity>func_147547_b(tileentity);
@@ -174,7 +174,9 @@
                     }
                 }
 
-                EnumWorldBlockLayer enumworldblocklayer1 = block.func_180664_k();
+                for(EnumWorldBlockLayer enumworldblocklayer1 : EnumWorldBlockLayer.values()) {
+                    if(!block.canRenderInLayer(enumworldblocklayer1)) continue;
+                    net.minecraftforge.client.ForgeHooksClient.setRenderLayer(enumworldblocklayer1);
                 int j = enumworldblocklayer1.ordinal();
 
                 if (block.func_149645_b() != -1)
@@ -189,6 +191,7 @@
 
                     aboolean[j] |= blockrendererdispatcher.func_175018_a(iblockstate, blockpos$mutableblockpos, iblockaccess, worldrenderer);
                 }
+                }
             }
 
             for (EnumWorldBlockLayer enumworldblocklayer : EnumWorldBlockLayer.values())
@@ -385,6 +388,26 @@
         return this.field_178593_n;
     }
 
+    /* ======================================== FORGE START =====================================*/
+    /**
+     * Creates a new RegionRenderCache instance.<br>
+     * Extending classes can change the behavior of the cache, allowing to visually change
+     * blocks (schematics etc).
+     *
+     * @see RegionRenderCache
+     * @param world The world to cache.
+     * @param from The starting position of the chunk minus one on each axis.
+     * @param to The ending position of the chunk plus one on each axis.
+     * @param subtract Padding used internally by the RegionRenderCache constructor to make
+     *                 the cache a 20x20x20 cube, for a total of 8000 states in the cache.
+     * @return new RegionRenderCache instance
+     */
+    protected RegionRenderCache createRegionRenderCache(World world, BlockPos from, BlockPos to, int subtract)
+    {
+        return new RegionRenderCache(world, from, to, subtract);
+    }
+    /* ========================================= FORGE END ======================================*/
+
     public BlockPos func_181701_a(EnumFacing p_181701_1_)
     {
         return (BlockPos)this.field_181702_p.get(p_181701_1_);
