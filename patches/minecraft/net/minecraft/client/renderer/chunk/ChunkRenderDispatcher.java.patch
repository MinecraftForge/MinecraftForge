--- a/net/minecraft/client/renderer/chunk/ChunkRenderDispatcher.java
+++ b/net/minecraft/client/renderer/chunk/ChunkRenderDispatcher.java
@@ -78,12 +_,15 @@
    private Vec3 f_112683_ = Vec3.f_82478_;
 
    public ChunkRenderDispatcher(ClientLevel p_194405_, LevelRenderer p_194406_, Executor p_194407_, boolean p_194408_, ChunkBufferBuilderPack p_194409_) {
+      this(p_194405_, p_194406_, p_194407_, p_194408_, p_194409_, -1);
+   }
+   public ChunkRenderDispatcher(ClientLevel p_194405_, LevelRenderer p_194406_, Executor p_194407_, boolean p_194408_, ChunkBufferBuilderPack p_194409_, int countRenderBuilders) {
       this.f_112681_ = p_194405_;
       this.f_112682_ = p_194406_;
       int i = Math.max(1, (int)((double)Runtime.getRuntime().maxMemory() * 0.3D) / (RenderType.m_110506_().stream().mapToInt(RenderType::m_110507_).sum() * 4) - 1);
       int j = Runtime.getRuntime().availableProcessors();
       int k = p_194408_ ? j : Math.min(j, 4);
-      int l = Math.max(1, Math.min(k, i));
+      int l = countRenderBuilders < 0 ? Math.max(1, Math.min(k, i)) : countRenderBuilders;
       this.f_112678_ = p_194409_;
       List<ChunkBufferBuilderPack> list = Lists.newArrayListWithExpectedSize(l);
 
@@ -419,7 +_,7 @@
          if (!chunkrenderdispatcher$compiledchunk.f_112749_.contains(p_112810_)) {
             return false;
          } else {
-            this.f_112788_ = new ChunkRenderDispatcher.RenderChunk.ResortTransparencyTask(this.m_112832_(), chunkrenderdispatcher$compiledchunk);
+            this.f_112788_ = new ChunkRenderDispatcher.RenderChunk.ResortTransparencyTask(new net.minecraft.world.level.ChunkPos(m_112839_()), this.m_112832_(), chunkrenderdispatcher$compiledchunk);
             p_112811_.m_112709_(this.f_112788_);
             return true;
          }
@@ -451,7 +_,7 @@
             this.f_202433_.incrementAndGet();
          }
 
-         this.f_112787_ = new ChunkRenderDispatcher.RenderChunk.RebuildTask(this.m_112832_(), renderchunkregion, !flag1 || this.f_202433_.get() > 2);
+         this.f_112787_ = new ChunkRenderDispatcher.RenderChunk.RebuildTask(new net.minecraft.world.level.ChunkPos(m_112839_()), this.m_112832_(), renderchunkregion, flag || this.f_112784_.get() != ChunkRenderDispatcher.CompiledChunk.f_112748_);
          return this.f_112787_;
       }
 
@@ -484,10 +_,20 @@
          protected final double f_112847_;
          protected final AtomicBoolean f_112848_ = new AtomicBoolean(false);
          protected final boolean f_194420_;
+         protected java.util.Map<net.minecraft.core.BlockPos, net.minecraftforge.client.model.data.ModelData> modelData;
 
          public ChunkCompileTask(double p_194423_, boolean p_194424_) {
+            this(null, p_194423_, p_194424_);
+         }
+
+         public ChunkCompileTask(@Nullable net.minecraft.world.level.ChunkPos pos, double p_194423_, boolean p_194424_) {
             this.f_112847_ = p_194423_;
             this.f_194420_ = p_194424_;
+            if (pos == null) {
+               this.modelData = java.util.Collections.emptyMap();
+            } else {
+               this.modelData = net.minecraft.client.Minecraft.m_91087_().f_91073_.getModelDataManager().getAt(pos);
+            }
          }
 
          public abstract CompletableFuture<ChunkRenderDispatcher.ChunkTaskResult> m_5869_(ChunkBufferBuilderPack p_112853_);
@@ -499,6 +_,10 @@
          public int compareTo(ChunkRenderDispatcher.RenderChunk.ChunkCompileTask p_112855_) {
             return Doubles.compare(this.f_112847_, p_112855_.f_112847_);
          }
+
+         public net.minecraftforge.client.model.data.ModelData getModelData(net.minecraft.core.BlockPos pos) {
+            return modelData.getOrDefault(pos, net.minecraftforge.client.model.data.ModelData.EMPTY);
+         }
       }
 
       @OnlyIn(Dist.CLIENT)
@@ -506,8 +_,13 @@
          @Nullable
          protected RenderChunkRegion f_112858_;
 
+         @Deprecated
          public RebuildTask(@Nullable double p_194427_, RenderChunkRegion p_194428_, boolean p_194429_) {
-            super(p_194427_, p_194429_);
+            this(null, p_194427_, p_194428_, p_194429_);
+         }
+
+         public RebuildTask(@Nullable net.minecraft.world.level.ChunkPos pos, double p_194427_, @Nullable RenderChunkRegion p_194428_, boolean p_194429_) {
+            super(pos, p_194427_, p_194429_);
             this.f_112858_ = p_194428_;
          }
 
@@ -604,7 +_,10 @@
                   }
 
                   if (blockstate.m_60799_() != RenderShape.INVISIBLE) {
-                     RenderType rendertype2 = ItemBlockRenderTypes.m_109282_(blockstate);
+                     var model = blockrenderdispatcher.m_110910_(blockstate);
+                     var modelData = model.getModelData(renderchunkregion, blockpos2, blockstate, getModelData(blockpos2));
+                     randomsource.m_188584_(blockstate.m_60726_(blockpos2));
+                     for (RenderType rendertype2 : model.getRenderTypes(blockstate, randomsource, modelData)) {
                      BufferBuilder bufferbuilder2 = p_234471_.m_108839_(rendertype2);
                      if (set.add(rendertype2)) {
                         RenderChunk.this.m_112805_(bufferbuilder2);
@@ -612,8 +_,9 @@
 
                      posestack.m_85836_();
                      posestack.m_252880_((float)(blockpos2.m_123341_() & 15), (float)(blockpos2.m_123342_() & 15), (float)(blockpos2.m_123343_() & 15));
-                     blockrenderdispatcher.m_234355_(blockstate, blockpos2, renderchunkregion, posestack, bufferbuilder2, true, randomsource);
+                     blockrenderdispatcher.renderBatched(blockstate, blockpos2, renderchunkregion, posestack, bufferbuilder2, true, randomsource, modelData, rendertype2, false);
                      posestack.m_85849_();
+                     }
                   }
                }
 
@@ -642,10 +_,10 @@
          private <E extends BlockEntity> void m_234476_(ChunkRenderDispatcher.RenderChunk.RebuildTask.CompileResults p_234477_, E p_234478_) {
             BlockEntityRenderer<E> blockentityrenderer = Minecraft.m_91087_().m_167982_().m_112265_(p_234478_);
             if (blockentityrenderer != null) {
-               p_234477_.f_234485_.add(p_234478_);
                if (blockentityrenderer.m_5932_(p_234478_)) {
                   p_234477_.f_234484_.add(p_234478_);
                }
+               else p_234477_.f_234485_.add(p_234478_); //FORGE: Fix MC-112730
             }
 
          }
@@ -673,8 +_,13 @@
       class ResortTransparencyTask extends ChunkRenderDispatcher.RenderChunk.ChunkCompileTask {
          private final ChunkRenderDispatcher.CompiledChunk f_112886_;
 
+         @Deprecated
          public ResortTransparencyTask(double p_112889_, ChunkRenderDispatcher.CompiledChunk p_112890_) {
-            super(p_112889_, true);
+            this(null, p_112889_, p_112890_);
+         }
+
+         public ResortTransparencyTask(@Nullable net.minecraft.world.level.ChunkPos pos, double p_112889_, ChunkRenderDispatcher.CompiledChunk p_112890_) {
+            super(pos, p_112889_, true);
             this.f_112886_ = p_112890_;
          }
 
