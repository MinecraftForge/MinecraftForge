--- a/net/minecraft/client/renderer/entity/ItemRenderer.java
+++ b/net/minecraft/client/renderer/entity/ItemRenderer.java
@@ -54,17 +_,14 @@
       int j = this.getRenderAmount(itemstack);
       float f = 0.25F;
       float f1 = MathHelper.sin(((float)p_225623_1_.getAge() + p_225623_3_) / 10.0F + p_225623_1_.bobOffs) * 0.1F + 0.1F;
-      float f2 = ibakedmodel.getTransforms().getTransform(ItemCameraTransforms.TransformType.GROUND).scale.y();
+      float f2 = shouldBob() ? ibakedmodel.getTransforms().getTransform(ItemCameraTransforms.TransformType.GROUND).scale.y() : 0;
       p_225623_4_.translate(0.0D, (double)(f1 + 0.25F * f2), 0.0D);
       float f3 = p_225623_1_.getSpin(p_225623_3_);
       p_225623_4_.mulPose(Vector3f.YP.rotation(f3));
-      float f4 = ibakedmodel.getTransforms().ground.scale.x();
-      float f5 = ibakedmodel.getTransforms().ground.scale.y();
-      float f6 = ibakedmodel.getTransforms().ground.scale.z();
       if (!flag) {
-         float f7 = -0.0F * (float)(j - 1) * 0.5F * f4;
-         float f8 = -0.0F * (float)(j - 1) * 0.5F * f5;
-         float f9 = -0.09375F * (float)(j - 1) * 0.5F * f6;
+         float f7 = -0.0F * (float)(j - 1) * 0.5F;
+         float f8 = -0.0F * (float)(j - 1) * 0.5F;
+         float f9 = -0.09375F * (float)(j - 1) * 0.5F;
          p_225623_4_.translate((double)f7, (double)f8, (double)f9);
       }
 
@@ -75,18 +_,18 @@
                float f11 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.15F;
                float f13 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.15F;
                float f10 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.15F;
-               p_225623_4_.translate((double)f11, (double)f13, (double)f10);
+               p_225623_4_.translate(shouldSpreadItems() ? f11 : 0, shouldSpreadItems() ? f13 : 0, shouldSpreadItems() ? f10 : 0);
             } else {
                float f12 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.15F * 0.5F;
                float f14 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.15F * 0.5F;
-               p_225623_4_.translate((double)f12, (double)f14, 0.0D);
+               p_225623_4_.translate(shouldSpreadItems() ? f12 : 0, shouldSpreadItems() ? f14 : 0, 0.0D);
             }
          }
 
          this.itemRenderer.render(itemstack, ItemCameraTransforms.TransformType.GROUND, false, p_225623_4_, p_225623_5_, p_225623_6_, OverlayTexture.NO_OVERLAY, ibakedmodel);
          p_225623_4_.popPose();
          if (!flag) {
-            p_225623_4_.translate((double)(0.0F * f4), (double)(0.0F * f5), (double)(0.09375F * f6));
+            p_225623_4_.translate(0.0, 0.0, 0.09375F);
          }
       }
 
@@ -97,4 +_,21 @@
    public ResourceLocation getTextureLocation(ItemEntity p_110775_1_) {
       return AtlasTexture.LOCATION_BLOCKS;
    }
+   
+   /*==================================== FORGE START ===========================================*/
+
+   /**
+    * @return If items should spread out when rendered in 3D
+    */
+   public boolean shouldSpreadItems() {
+      return true;
+   }
+
+   /**
+    * @return If items should have a bob effect
+    */
+   public boolean shouldBob() {
+      return true;
+   }
+   /*==================================== FORGE END =============================================*/
 }
