--- a/net/minecraft/client/renderer/entity/layers/ElytraLayer.java
+++ b/net/minecraft/client/renderer/entity/layers/ElytraLayer.java
@@ -33,7 +_,7 @@
 
    public void m_6494_(PoseStack p_116951_, MultiBufferSource p_116952_, int p_116953_, T p_116954_, float p_116955_, float p_116956_, float p_116957_, float p_116958_, float p_116959_, float p_116960_) {
       ItemStack itemstack = p_116954_.m_6844_(EquipmentSlot.CHEST);
-      if (itemstack.m_150930_(Items.f_42741_)) {
+      if (shouldRender(itemstack, p_116954_)) {
          ResourceLocation resourcelocation;
          if (p_116954_ instanceof AbstractClientPlayer) {
             AbstractClientPlayer abstractclientplayer = (AbstractClientPlayer)p_116954_;
@@ -42,10 +_,10 @@
             } else if (abstractclientplayer.m_108555_() && abstractclientplayer.m_108561_() != null && abstractclientplayer.m_36170_(PlayerModelPart.CAPE)) {
                resourcelocation = abstractclientplayer.m_108561_();
             } else {
-               resourcelocation = f_116934_;
+               resourcelocation = getElytraTexture(itemstack, p_116954_);
             }
          } else {
-            resourcelocation = f_116934_;
+            resourcelocation = getElytraTexture(itemstack, p_116954_);
          }
 
          p_116951_.m_85836_();
@@ -56,5 +_,30 @@
          this.f_116935_.m_7695_(p_116951_, vertexconsumer, p_116953_, OverlayTexture.f_118083_, 1.0F, 1.0F, 1.0F, 1.0F);
          p_116951_.m_85849_();
       }
+   }
+
+   /**
+    * Determines if the ElytraLayer should render.
+    * ItemStack and Entity are provided for modder convenience,
+    * For example, using the same ElytraLayer for multiple custom Elytra.
+    *
+    * @param stack  The Elytra ItemStack
+    * @param entity The entity being rendered.
+    * @return If the ElytraLayer should render.
+    */
+   public boolean shouldRender(ItemStack stack, T entity) {
+      return stack.m_41720_() == Items.f_42741_;
+   }
+
+   /**
+    * Gets the texture to use with this ElytraLayer.
+    * This assumes the vanilla Elytra model.
+    *
+    * @param stack  The Elytra ItemStack.
+    * @param entity The entity being rendered.
+    * @return The texture.
+    */
+   public ResourceLocation getElytraTexture(ItemStack stack, T entity) {
+      return f_116934_;
    }
 }
