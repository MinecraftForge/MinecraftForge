--- ../src_base/minecraft/net/minecraft/client/renderer/entity/RenderBiped.java
+++ ../src_work/minecraft/net/minecraft/client/renderer/entity/RenderBiped.java
@@ -14,9 +14,15 @@
 import net.minecraft.item.EnumArmorMaterial;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemArmor;
+import net.minecraft.item.ItemBlock;
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.ResourceLocation;
 import org.lwjgl.opengl.GL11;
+import static net.minecraftforge.client.IItemRenderer.ItemRenderType.EQUIPPED;
+import static net.minecraftforge.client.IItemRenderer.ItemRendererHelper.BLOCK_3D;
+import net.minecraftforge.client.ForgeHooksClient;
+import net.minecraftforge.client.IItemRenderer;
+import net.minecraftforge.client.MinecraftForgeClient;
 
 @SideOnly(Side.CLIENT)
 public class RenderBiped extends RenderLiving
@@ -49,11 +55,13 @@
         this.field_82425_h = new ModelBiped(0.5F);
     }
 
+    @Deprecated //Use the more sensitve version getArmorResource below
     public static ResourceLocation func_110857_a(ItemArmor par0ItemArmor, int par1)
     {
         return func_110858_a(par0ItemArmor, par1, (String)null);
     }
 
+    @Deprecated //Use the more sensitve version getArmorResource below
     public static ResourceLocation func_110858_a(ItemArmor par0ItemArmor, int par1, String par2Str)
     {
         String s1 = String.format("textures/models/armor/%s_layer_%d%s.png", new Object[] {bipedArmorFilenamePrefix[par0ItemArmor.renderIndex], Integer.valueOf(par1 == 2 ? 2 : 1), par2Str == null ? "" : String.format("_%s", new Object[]{par2Str})});
@@ -68,6 +76,33 @@
         return resourcelocation;
     }
 
+    /**
+     * More generic ForgeHook version of the above function, it allows for Items to have more control over what texture they provide.
+     *
+     * @param entity Entity wearing the armor
+     * @param stack ItemStack for the armor
+     * @param slot Slot ID that the item is in
+     * @param type Subtype, can be null or "overlay"
+     * @return ResourceLocation pointing at the armor's texture
+     */
+    public static ResourceLocation getArmorResource(Entity entity, ItemStack stack, int slot, String type)
+    {
+        ItemArmor item = (ItemArmor)stack.getItem();
+        String s1 = String.format("textures/models/armor/%s_layer_%d%s.png",
+                bipedArmorFilenamePrefix[item.renderIndex], (slot == 2 ? 2 : 1), type == null ? "" : String.format("_%s", type));
+
+        s1 = ForgeHooksClient.getArmorTexture(entity, stack, s1, slot, type);
+        ResourceLocation resourcelocation = (ResourceLocation)field_110859_k.get(s1);
+
+        if (resourcelocation == null)
+        {
+            resourcelocation = new ResourceLocation(s1);
+            field_110859_k.put(s1, resourcelocation);
+        }
+
+        return resourcelocation;
+    }
+
     protected int func_130006_a(EntityLiving par1EntityLiving, int par2, float par3)
     {
         ItemStack itemstack = par1EntityLiving.func_130225_q(3 - par2);
@@ -79,7 +114,7 @@
             if (item instanceof ItemArmor)
             {
                 ItemArmor itemarmor = (ItemArmor)item;
-                this.bindTexture(func_110857_a(itemarmor, par2));
+                this.bindTexture(getArmorResource(par1EntityLiving, itemstack, par2, null));
                 ModelBiped modelbiped = par2 == 2 ? this.field_82425_h : this.field_82423_g;
                 modelbiped.bipedHead.showModel = par2 == 0;
                 modelbiped.bipedHeadwear.showModel = par2 == 0;
@@ -88,15 +123,17 @@
                 modelbiped.bipedLeftArm.showModel = par2 == 1;
                 modelbiped.bipedRightLeg.showModel = par2 == 2 || par2 == 3;
                 modelbiped.bipedLeftLeg.showModel = par2 == 2 || par2 == 3;
+                modelbiped = ForgeHooksClient.getArmorModel(par1EntityLiving, itemstack, par2, modelbiped);
                 this.setRenderPassModel(modelbiped);
                 modelbiped.onGround = this.mainModel.onGround;
                 modelbiped.isRiding = this.mainModel.isRiding;
                 modelbiped.isChild = this.mainModel.isChild;
                 float f1 = 1.0F;
 
-                if (itemarmor.getArmorMaterial() == EnumArmorMaterial.CLOTH)
-                {
-                    int j = itemarmor.getColor(itemstack);
+                //Move out of if to allow for more then just CLOTH to have color
+                int j = itemarmor.getColor(itemstack);
+                if (j != -1)
+                {
                     float f2 = (float)(j >> 16 & 255) / 255.0F;
                     float f3 = (float)(j >> 8 & 255) / 255.0F;
                     float f4 = (float)(j & 255) / 255.0F;
@@ -134,7 +171,7 @@
 
             if (item instanceof ItemArmor)
             {
-                this.bindTexture(func_110858_a((ItemArmor)item, par2, "overlay"));
+                this.bindTexture(getArmorResource(par1EntityLiving, itemstack, par2, "overlay"));
                 float f1 = 1.0F;
                 GL11.glColor3f(f1, f1, f1);
             }
@@ -185,9 +222,12 @@
             GL11.glPushMatrix();
             this.modelBipedMain.bipedHead.postRender(0.0625F);
 
-            if (itemstack1.getItem().itemID < 256)
-            {
-                if (RenderBlocks.renderItemIn3d(Block.blocksList[itemstack1.itemID].getRenderType()))
+            IItemRenderer customRenderer = MinecraftForgeClient.getItemRenderer(itemstack1, EQUIPPED);
+            boolean is3D = (customRenderer != null && customRenderer.shouldUseRenderHelper(EQUIPPED, itemstack1, BLOCK_3D));
+
+            if (itemstack1.getItem() instanceof ItemBlock)
+            {
+                if (is3D || RenderBlocks.renderItemIn3d(Block.blocksList[itemstack1.itemID].getRenderType()))
                 {
                     f2 = 0.625F;
                     GL11.glTranslatef(0.0F, -0.25F, 0.0F);
@@ -229,7 +269,10 @@
             this.modelBipedMain.bipedRightArm.postRender(0.0625F);
             GL11.glTranslatef(-0.0625F, 0.4375F, 0.0625F);
 
-            if (itemstack.itemID < 256 && RenderBlocks.renderItemIn3d(Block.blocksList[itemstack.itemID].getRenderType()))
+            IItemRenderer customRenderer = MinecraftForgeClient.getItemRenderer(itemstack, EQUIPPED);
+            boolean is3D = (customRenderer != null && customRenderer.shouldUseRenderHelper(EQUIPPED, itemstack, BLOCK_3D));
+
+            if (itemstack.getItem() instanceof ItemBlock && (is3D || RenderBlocks.renderItemIn3d(Block.blocksList[itemstack.itemID].getRenderType())))
             {
                 f2 = 0.5F;
                 GL11.glTranslatef(0.0F, 0.1875F, -0.3125F);
@@ -276,7 +319,10 @@
 
             if (itemstack.getItem().requiresMultipleRenderPasses())
             {
-                this.renderManager.itemRenderer.renderItem(par1EntityLiving, itemstack, 1);
+                for (int x = 1; x < itemstack.getItem().getRenderPasses(itemstack.getItemDamage()); x++)
+                {
+                    this.renderManager.itemRenderer.renderItem(par1EntityLiving, itemstack, x);
+                }
             }
 
             GL11.glPopMatrix();
