--- a/net/minecraft/client/renderer/entity/ItemEntityRenderer.java
+++ b/net/minecraft/client/renderer/entity/ItemEntityRenderer.java
@@ -61,18 +_,15 @@
       boolean flag = bakedmodel.isGui3d();
       int j = this.getRenderAmount(itemstack);
       float f = 0.25F;
-      float f1 = Mth.sin(((float)p_115036_.getAge() + p_115038_) / 10.0F + p_115036_.bobOffs) * 0.1F + 0.1F;
+      float f1 = shouldBob() ? Mth.sin(((float)p_115036_.getAge() + p_115038_) / 10.0F + p_115036_.bobOffs) * 0.1F + 0.1F : 0;
       float f2 = bakedmodel.getTransforms().getTransform(ItemDisplayContext.GROUND).scale.y();
       p_115039_.translate(0.0F, f1 + 0.25F * f2, 0.0F);
       float f3 = p_115036_.getSpin(p_115038_);
       p_115039_.mulPose(Axis.YP.rotation(f3));
-      float f4 = bakedmodel.getTransforms().ground.scale.x();
-      float f5 = bakedmodel.getTransforms().ground.scale.y();
-      float f6 = bakedmodel.getTransforms().ground.scale.z();
       if (!flag) {
-         float f7 = -0.0F * (float)(j - 1) * 0.5F * f4;
-         float f8 = -0.0F * (float)(j - 1) * 0.5F * f5;
-         float f9 = -0.09375F * (float)(j - 1) * 0.5F * f6;
+         float f7 = -0.0F * (float)(j - 1) * 0.5F;
+         float f8 = -0.0F * (float)(j - 1) * 0.5F;
+         float f9 = -0.09375F * (float)(j - 1) * 0.5F;
          p_115039_.translate(f7, f8, f9);
       }
 
@@ -83,18 +_,18 @@
                float f11 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.15F;
                float f13 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.15F;
                float f10 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.15F;
-               p_115039_.translate(f11, f13, f10);
+               p_115039_.translate(shouldSpreadItems() ? f11 : 0, shouldSpreadItems() ? f13 : 0, shouldSpreadItems() ? f10 : 0);
             } else {
                float f12 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.15F * 0.5F;
                float f14 = (this.random.nextFloat() * 2.0F - 1.0F) * 0.15F * 0.5F;
-               p_115039_.translate(f12, f14, 0.0F);
+               p_115039_.translate(shouldSpreadItems() ? f12 : 0, shouldSpreadItems() ? f14 : 0, 0.0D);
             }
          }
 
          this.itemRenderer.render(itemstack, ItemDisplayContext.GROUND, false, p_115039_, p_115040_, p_115041_, OverlayTexture.NO_OVERLAY, bakedmodel);
          p_115039_.popPose();
          if (!flag) {
-            p_115039_.translate(0.0F * f4, 0.0F * f5, 0.09375F * f6);
+            p_115039_.translate(0.0, 0.0, 0.09375F);
          }
       }
 
@@ -105,4 +_,21 @@
    public ResourceLocation getTextureLocation(ItemEntity p_115034_) {
       return TextureAtlas.LOCATION_BLOCKS;
    }
+
+   /*==================================== FORGE START ===========================================*/
+
+   /**
+    * @return If items should spread out when rendered in 3D
+    */
+   public boolean shouldSpreadItems() {
+      return true;
+   }
+
+   /**
+    * @return If items should have a bob effect
+    */
+   public boolean shouldBob() {
+      return true;
+   }
+   /*==================================== FORGE END =============================================*/
 }
