--- a/net/minecraft/client/renderer/BlockRendererDispatcher.java
+++ b/net/minecraft/client/renderer/BlockRendererDispatcher.java
@@ -33,7 +_,7 @@
    public BlockRendererDispatcher(BlockModelShapes p_i46577_1_, BlockColors p_i46577_2_) {
       this.blockModelShaper = p_i46577_1_;
       this.blockColors = p_i46577_2_;
-      this.modelRenderer = new BlockModelRenderer(this.blockColors);
+      this.modelRenderer = new net.minecraftforge.client.model.pipeline.ForgeBlockModelRenderer(this.blockColors);
       this.liquidBlockRenderer = new FluidBlockRenderer();
    }
 
@@ -41,22 +_,30 @@
       return this.blockModelShaper;
    }
 
+   @Deprecated //Forge: Model parameter
    public void renderBreakingTexture(BlockState p_228792_1_, BlockPos p_228792_2_, IBlockDisplayReader p_228792_3_, MatrixStack p_228792_4_, IVertexBuilder p_228792_5_) {
-      if (p_228792_1_.getRenderShape() == BlockRenderType.MODEL) {
-         IBakedModel ibakedmodel = this.blockModelShaper.getBlockModel(p_228792_1_);
-         long i = p_228792_1_.getSeed(p_228792_2_);
-         this.modelRenderer.tesselateBlock(p_228792_3_, ibakedmodel, p_228792_1_, p_228792_2_, p_228792_4_, p_228792_5_, true, this.random, i, OverlayTexture.NO_OVERLAY);
+       renderBlockDamage(p_228792_1_,p_228792_2_, p_228792_3_, p_228792_4_, p_228792_5_, net.minecraftforge.client.model.data.EmptyModelData.INSTANCE);
+   }
+   public void renderBlockDamage(BlockState blockStateIn, BlockPos posIn, IBlockDisplayReader lightReaderIn, MatrixStack matrixStackIn, IVertexBuilder vertexBuilderIn, net.minecraftforge.client.model.data.IModelData modelData) {
+      if (blockStateIn.getRenderShape() == BlockRenderType.MODEL) {
+         IBakedModel ibakedmodel = this.blockModelShaper.getBlockModel(blockStateIn);
+         long i = blockStateIn.getSeed(posIn);
+         this.modelRenderer.renderModel(lightReaderIn, ibakedmodel, blockStateIn, posIn, matrixStackIn, vertexBuilderIn, true, this.random, i, OverlayTexture.NO_OVERLAY, modelData);
       }
    }
 
+   @Deprecated //Forge: Model parameter
    public boolean renderBatched(BlockState p_228793_1_, BlockPos p_228793_2_, IBlockDisplayReader p_228793_3_, MatrixStack p_228793_4_, IVertexBuilder p_228793_5_, boolean p_228793_6_, Random p_228793_7_) {
+       return renderModel(p_228793_1_, p_228793_2_, p_228793_3_, p_228793_4_, p_228793_5_, p_228793_6_, p_228793_7_, net.minecraftforge.client.model.data.EmptyModelData.INSTANCE);
+   }
+   public boolean renderModel(BlockState blockStateIn, BlockPos posIn, IBlockDisplayReader lightReaderIn, MatrixStack matrixStackIn, IVertexBuilder vertexBuilderIn, boolean checkSides, Random rand, net.minecraftforge.client.model.data.IModelData modelData) {
       try {
-         BlockRenderType blockrendertype = p_228793_1_.getRenderShape();
-         return blockrendertype != BlockRenderType.MODEL ? false : this.modelRenderer.tesselateBlock(p_228793_3_, this.getBlockModel(p_228793_1_), p_228793_1_, p_228793_2_, p_228793_4_, p_228793_5_, p_228793_6_, p_228793_7_, p_228793_1_.getSeed(p_228793_2_), OverlayTexture.NO_OVERLAY);
+         BlockRenderType blockrendertype = blockStateIn.getRenderShape();
+         return blockrendertype != BlockRenderType.MODEL ? false : this.modelRenderer.renderModel(lightReaderIn, this.getBlockModel(blockStateIn), blockStateIn, posIn, matrixStackIn, vertexBuilderIn, checkSides, rand, blockStateIn.getSeed(posIn), OverlayTexture.NO_OVERLAY, modelData);
       } catch (Throwable throwable) {
          CrashReport crashreport = CrashReport.forThrowable(throwable, "Tesselating block in world");
          CrashReportCategory crashreportcategory = crashreport.addCategory("Block being tesselated");
-         CrashReportCategory.populateBlockDetails(crashreportcategory, p_228793_2_, p_228793_1_);
+         CrashReportCategory.populateBlockDetails(crashreportcategory, posIn, blockStateIn);
          throw new ReportedException(crashreport);
       }
    }
@@ -80,7 +_,11 @@
       return this.blockModelShaper.getBlockModel(p_184389_1_);
    }
 
+   @Deprecated //Forge: Model parameter
    public void renderSingleBlock(BlockState p_228791_1_, MatrixStack p_228791_2_, IRenderTypeBuffer p_228791_3_, int p_228791_4_, int p_228791_5_) {
+      renderBlock(p_228791_1_, p_228791_2_, p_228791_3_, p_228791_4_, p_228791_5_, net.minecraftforge.client.model.data.EmptyModelData.INSTANCE);
+   }
+   public void renderBlock(BlockState p_228791_1_, MatrixStack p_228791_2_, IRenderTypeBuffer p_228791_3_, int p_228791_4_, int p_228791_5_, net.minecraftforge.client.model.data.IModelData modelData) {
       BlockRenderType blockrendertype = p_228791_1_.getRenderShape();
       if (blockrendertype != BlockRenderType.INVISIBLE) {
          switch(blockrendertype) {
@@ -90,10 +_,11 @@
             float f = (float)(i >> 16 & 255) / 255.0F;
             float f1 = (float)(i >> 8 & 255) / 255.0F;
             float f2 = (float)(i & 255) / 255.0F;
-            this.modelRenderer.renderModel(p_228791_2_.last(), p_228791_3_.getBuffer(RenderTypeLookup.getRenderType(p_228791_1_, false)), p_228791_1_, ibakedmodel, f, f1, f2, p_228791_4_, p_228791_5_);
+            this.modelRenderer.renderModel(p_228791_2_.last(), p_228791_3_.getBuffer(RenderTypeLookup.getRenderType(p_228791_1_, false)), p_228791_1_, ibakedmodel, f, f1, f2, p_228791_4_, p_228791_5_, modelData);
             break;
          case ENTITYBLOCK_ANIMATED:
-            ItemStackTileEntityRenderer.instance.renderByItem(new ItemStack(p_228791_1_.getBlock()), ItemCameraTransforms.TransformType.NONE, p_228791_2_, p_228791_3_, p_228791_4_, p_228791_5_);
+            ItemStack stack = new ItemStack(p_228791_1_.getBlock());
+            stack.getItem().getItemStackTileEntityRenderer().renderByItem(stack, ItemCameraTransforms.TransformType.NONE, p_228791_2_, p_228791_3_, p_228791_4_, p_228791_5_);
          }
 
       }
@@ -101,5 +_,10 @@
 
    public void onResourceManagerReload(IResourceManager p_195410_1_) {
       this.liquidBlockRenderer.setupSprites();
+   }
+
+   @Override
+   public net.minecraftforge.resource.IResourceType getResourceType() {
+      return net.minecraftforge.resource.VanillaResourceType.MODELS;
    }
 }
