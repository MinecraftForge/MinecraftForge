--- a/net/minecraft/client/renderer/ItemRenderer.java
+++ b/net/minecraft/client/renderer/ItemRenderer.java
@@ -59,7 +_,7 @@
 
    public ItemRenderer(TextureManager p_i46552_1_, ModelManager p_i46552_2_, ItemColors p_i46552_3_) {
       this.textureManager = p_i46552_1_;
-      this.itemModelShaper = new ItemModelMesher(p_i46552_2_);
+      this.itemModelShaper = new net.minecraftforge.client.ItemModelMesherForge(p_i46552_2_);
 
       for(Item item : Registry.ITEM) {
          if (!IGNORED.contains(item)) {
@@ -95,7 +_,7 @@
             p_229111_8_ = this.itemModelShaper.getModelManager().getModel(new ModelResourceLocation("minecraft:trident#inventory"));
          }
 
-         p_229111_8_.getTransforms().getTransform(p_229111_2_).apply(p_229111_3_, p_229111_4_);
+         p_229111_8_ = net.minecraftforge.client.ForgeHooksClient.handleCameraTransforms(p_229111_4_, p_229111_8_, p_229111_2_, p_229111_3_);
          p_229111_4_.translate(-0.5D, -0.5D, -0.5D);
          if (!p_229111_8_.isCustomRenderer() && (p_229111_1_.getItem() != Items.TRIDENT || flag)) {
             boolean flag1;
@@ -105,7 +_,8 @@
             } else {
                flag1 = true;
             }
-
+            if (p_229111_8_.isLayered()) { net.minecraftforge.client.ForgeHooksClient.drawItemLayered(this, p_229111_8_, p_229111_1_, p_229111_4_, p_229111_5_, p_229111_6_, p_229111_7_, flag1); }
+            else {
             RenderType rendertype = RenderTypeLookup.getRenderType(p_229111_1_, flag1);
             IVertexBuilder ivertexbuilder;
             if (p_229111_1_.getItem() == Items.COMPASS && p_229111_1_.hasFoil()) {
@@ -131,8 +_,9 @@
             }
 
             this.renderModelLists(p_229111_8_, p_229111_1_, p_229111_6_, p_229111_7_, p_229111_4_, ivertexbuilder);
+            }
          } else {
-            ItemStackTileEntityRenderer.instance.renderByItem(p_229111_1_, p_229111_2_, p_229111_4_, p_229111_5_, p_229111_6_, p_229111_7_);
+            p_229111_1_.getItem().getItemStackTileEntityRenderer().renderByItem(p_229111_1_, p_229111_2_, p_229111_4_, p_229111_5_, p_229111_6_, p_229111_7_);
          }
 
          p_229111_4_.popPose();
@@ -176,7 +_,7 @@
          float f = (float)(i >> 16 & 255) / 255.0F;
          float f1 = (float)(i >> 8 & 255) / 255.0F;
          float f2 = (float)(i & 255) / 255.0F;
-         p_229112_2_.putBulkData(matrixstack$entry, bakedquad, f, f1, f2, p_229112_5_, p_229112_6_);
+         p_229112_2_.addVertexData(matrixstack$entry, bakedquad, f, f1, f2, p_229112_5_, p_229112_6_, true);
       }
 
    }
@@ -267,6 +_,7 @@
             crashreportcategory.setDetail("Item Type", () -> {
                return String.valueOf((Object)p_239387_2_.getItem());
             });
+            crashreportcategory.setDetail("Registry Name", () -> String.valueOf(p_239387_2_.getItem().getRegistryName()));
             crashreportcategory.setDetail("Item Damage", () -> {
                return String.valueOf(p_239387_2_.getDamageValue());
             });
@@ -298,18 +_,16 @@
             irendertypebuffer$impl.endBatch();
          }
 
-         if (p_180453_2_.isDamaged()) {
+         if (p_180453_2_.getItem().showDurabilityBar(p_180453_2_)) {
             RenderSystem.disableDepthTest();
             RenderSystem.disableTexture();
             RenderSystem.disableAlphaTest();
             RenderSystem.disableBlend();
             Tessellator tessellator = Tessellator.getInstance();
             BufferBuilder bufferbuilder = tessellator.getBuilder();
-            float f = (float)p_180453_2_.getDamageValue();
-            float f1 = (float)p_180453_2_.getMaxDamage();
-            float f2 = Math.max(0.0F, (f1 - f) / f1);
-            int i = Math.round(13.0F - f * 13.0F / f1);
-            int j = MathHelper.hsvToRgb(f2 / 3.0F, 1.0F, 1.0F);
+            double health = p_180453_2_.getItem().getDurabilityForDisplay(p_180453_2_);
+            int i = Math.round(13.0F - (float)health * 13.0F);
+            int j = p_180453_2_.getItem().getRGBDurabilityForDisplay(p_180453_2_);
             this.fillRect(bufferbuilder, p_180453_3_ + 2, p_180453_4_ + 13, 13, 2, 0, 0, 0, 255);
             this.fillRect(bufferbuilder, p_180453_3_ + 2, p_180453_4_ + 13, i, 1, j >> 16 & 255, j >> 8 & 255, j & 255, 255);
             RenderSystem.enableBlend();
@@ -346,5 +_,10 @@
 
    public void onResourceManagerReload(IResourceManager p_195410_1_) {
       this.itemModelShaper.rebuildCache();
+   }
+
+   @Override
+   public net.minecraftforge.resource.IResourceType getResourceType() {
+      return net.minecraftforge.resource.VanillaResourceType.MODELS;
    }
 }
