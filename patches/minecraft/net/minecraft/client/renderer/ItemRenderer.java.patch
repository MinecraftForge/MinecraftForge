--- ../src_base/minecraft/net/minecraft/client/renderer/ItemRenderer.java
+++ ../src_work/minecraft/net/minecraft/client/renderer/ItemRenderer.java
@@ -15,11 +15,19 @@
 import net.minecraft.entity.EntityLiving;
 import net.minecraft.item.EnumAction;
 import net.minecraft.item.Item;
+import net.minecraft.item.ItemBlock;
+import net.minecraft.item.ItemMap;
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.storage.MapData;
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.opengl.GL12;
+
+import net.minecraftforge.client.ForgeHooksClient;
+import net.minecraftforge.client.IItemRenderer;
+import net.minecraftforge.client.MinecraftForgeClient;
+import static net.minecraftforge.client.IItemRenderer.ItemRenderType.*;
+import static net.minecraftforge.client.IItemRenderer.ItemRendererHelper.*;
 
 @SideOnly(Side.CLIENT)
 public class ItemRenderer
@@ -54,30 +62,24 @@
     {
         GL11.glPushMatrix();
 
-        Block var4 = null;
-        if (par2ItemStack.itemID < Block.blocksList.length)
-        {
-            var4 = Block.blocksList[par2ItemStack.itemID];
-        }
-
-        if (var4 != null && RenderBlocks.renderItemIn3d(var4.getRenderType()))
-        {
-            GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/terrain.png"));
-            this.renderBlocksInstance.renderBlockAsItem(var4, par2ItemStack.getItemDamage(), 1.0F);
+        IItemRenderer customRenderer = MinecraftForgeClient.getItemRenderer(par2ItemStack, EQUIPPED);
+
+        if (customRenderer != null)
+        {
+            GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture(par2ItemStack.getItem().getTextureFile()));
+            ForgeHooksClient.renderEquippedItem(customRenderer, renderBlocksInstance, par1EntityLiving, par2ItemStack);
+        }
+        else if (par2ItemStack.getItem() instanceof ItemBlock && RenderBlocks.renderItemIn3d(Block.blocksList[par2ItemStack.itemID].getRenderType()))
+        {
+            GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture(par2ItemStack.getItem().getTextureFile()));
+            this.renderBlocksInstance.renderBlockAsItem(Block.blocksList[par2ItemStack.itemID], par2ItemStack.getItemDamage(), 1.0F);
         }
         else
         {
-            if (var4 != null)
-            {
-                GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/terrain.png"));
-            }
-            else
-            {
-                GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture("/gui/items.png"));
-            }
-
             Tessellator var5 = Tessellator.instance;
             int var6 = par1EntityLiving.getItemIcon(par2ItemStack, par3);
+            GL11.glBindTexture(GL11.GL_TEXTURE_2D, this.mc.renderEngine.getTexture(par2ItemStack.getItem().getTextureFile()));
+            
             float var7 = ((float)(var6 % 16 * 16) + 0.0F) / 256.0F;
             float var8 = ((float)(var6 % 16 * 16) + 15.99F) / 256.0F;
             float var9 = ((float)(var6 / 16 * 16) + 0.0F) / 256.0F;
@@ -279,8 +281,9 @@
         Render var24;
         RenderPlayer var26;
 
-        if (var17 != null && var17.itemID == Item.map.shiftedIndex)
-        {
+        if (var17 != null && var17.getItem() instanceof ItemMap)
+        {
+            IItemRenderer custom = MinecraftForgeClient.getItemRenderer(var17, FIRST_PERSON_MAP);
             GL11.glPushMatrix();
             var7 = 0.8F;
             var20 = var3.getSwingProgress(par1);
@@ -346,11 +349,17 @@
             var28.addVertexWithUV((double)(128 + var27), (double)(0 - var27), 0.0D, 1.0D, 0.0D);
             var28.addVertexWithUV((double)(0 - var27), (double)(0 - var27), 0.0D, 0.0D, 0.0D);
             var28.draw();
-            MapData var16 = Item.map.getMapData(var17, this.mc.theWorld);
-
-            if (var16 != null)
-            {
-                this.mapItemRenderer.renderMap(this.mc.thePlayer, this.mc.renderEngine, var16);
+            MapData var16 = ((ItemMap)var17.getItem()).getMapData(var17, this.mc.theWorld);
+            if (custom == null)
+            {
+                if (var16 != null)
+                {
+                    this.mapItemRenderer.renderMap(this.mc.thePlayer, this.mc.renderEngine, var16);
+                }
+            }
+            else
+            {
+                custom.renderItem(FIRST_PERSON_MAP, var17, mc.thePlayer, mc.renderEngine, var16);
             }
 
             GL11.glPopMatrix();
@@ -453,12 +462,15 @@
             if (var17.getItem().requiresMultipleRenderPasses())
             {
                 this.renderItem(var3, var17, 0);
-                int var25 = Item.itemsList[var17.itemID].getColorFromItemStack(var17, 1);
-                var13 = (float)(var25 >> 16 & 255) / 255.0F;
-                var14 = (float)(var25 >> 8 & 255) / 255.0F;
-                var15 = (float)(var25 & 255) / 255.0F;
-                GL11.glColor4f(var6 * var13, var6 * var14, var6 * var15, 1.0F);
-                this.renderItem(var3, var17, 1);
+                for (int x = 1; x < var17.getItem().getRenderPasses(var17.getItemDamage()); x++)
+                {
+                    int var25 = Item.itemsList[var17.itemID].getColorFromItemStack(var17, x);
+                    var13 = (float)(var25 >> 16 & 255) / 255.0F;
+                    var14 = (float)(var25 >> 8 & 255) / 255.0F;
+                    var15 = (float)(var25 & 255) / 255.0F;
+                    GL11.glColor4f(var6 * var13, var6 * var14, var6 * var15, 1.0F);
+                    this.renderItem(var3, var17, x);
+                }
             }
             else
             {
