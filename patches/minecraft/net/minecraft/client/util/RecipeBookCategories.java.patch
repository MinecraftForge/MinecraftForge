--- a/net/minecraft/client/util/RecipeBookCategories.java
+++ b/net/minecraft/client/util/RecipeBookCategories.java
@@ -9,31 +9,148 @@
 import net.minecraftforge.api.distmarker.OnlyIn;
 
 @OnlyIn(Dist.CLIENT)
-public enum RecipeBookCategories {
-   SEARCH(new ItemStack(Items.field_151111_aL)),
-   BUILDING_BLOCKS(new ItemStack(Blocks.field_196584_bK)),
-   REDSTONE(new ItemStack(Items.field_151137_ax)),
-   EQUIPMENT(new ItemStack(Items.field_151036_c), new ItemStack(Items.field_151010_B)),
-   MISC(new ItemStack(Items.field_151129_at), new ItemStack(Items.field_151034_e)),
-   FURNACE_SEARCH(new ItemStack(Items.field_151111_aL)),
-   FURNACE_FOOD(new ItemStack(Items.field_151147_al)),
-   FURNACE_BLOCKS(new ItemStack(Blocks.field_150348_b)),
-   FURNACE_MISC(new ItemStack(Items.field_151129_at), new ItemStack(Items.field_151166_bC)),
-   BLAST_FURNACE_SEARCH(new ItemStack(Items.field_151111_aL)),
-   BLAST_FURNACE_BLOCKS(new ItemStack(Blocks.field_150450_ax)),
-   BLAST_FURNACE_MISC(new ItemStack(Items.field_151037_a), new ItemStack(Items.field_151149_ai)),
-   SMOKER_SEARCH(new ItemStack(Items.field_151111_aL)),
-   SMOKER_FOOD(new ItemStack(Items.field_151147_al)),
-   STONECUTTER(new ItemStack(Items.field_221782_da)),
-   CAMPFIRE(new ItemStack(Items.field_151147_al));
+public enum RecipeBookCategories implements net.minecraftforge.common.extensions.IForgeRecipeBookCategory<net.minecraft.item.crafting.IRecipeType<?>> {
+   SEARCH(net.minecraft.item.crafting.IRecipeType.field_222149_a, "search", new ItemStack(Items.field_151111_aL)),
+   BUILDING_BLOCKS(net.minecraft.item.crafting.IRecipeType.field_222149_a, RecipeBookCategories::buildingBlocksPredicate, "building_blocks", new ItemStack(Blocks.field_196584_bK)),
+   REDSTONE(net.minecraft.item.crafting.IRecipeType.field_222149_a, RecipeBookCategories::redstonePredicate, "redstone", new ItemStack(Items.field_151137_ax)),
+   EQUIPMENT(net.minecraft.item.crafting.IRecipeType.field_222149_a, RecipeBookCategories::equipmentPredicate, "equipment", new ItemStack(Items.field_151036_c), new ItemStack(Items.field_151010_B)),
+   MISC(net.minecraft.item.crafting.IRecipeType.field_222149_a, RecipeBookCategories::miscPredicate, "misc", new ItemStack(Items.field_151129_at), new ItemStack(Items.field_151034_e)),
+   FURNACE_SEARCH(net.minecraft.item.crafting.IRecipeType.field_222150_b, "furnace_search", new ItemStack(Items.field_151111_aL)),
+   FURNACE_FOOD(net.minecraft.item.crafting.IRecipeType.field_222150_b, RecipeBookCategories::foodPredicate, "furnace_food", new ItemStack(Items.field_151147_al)),
+   FURNACE_BLOCKS(net.minecraft.item.crafting.IRecipeType.field_222150_b, RecipeBookCategories::furnaceBlocksPredicate, "furnace_blocks", new ItemStack(Blocks.field_150348_b)),
+   FURNACE_MISC(net.minecraft.item.crafting.IRecipeType.field_222150_b, RecipeBookCategories::furnaceMiscPredicate, "furnace_misc", new ItemStack(Items.field_151129_at), new ItemStack(Items.field_151166_bC)),
+   BLAST_FURNACE_SEARCH(net.minecraft.item.crafting.IRecipeType.field_222151_c, "blast_furnace_search", new ItemStack(Items.field_151111_aL)),
+   BLAST_FURNACE_BLOCKS(net.minecraft.item.crafting.IRecipeType.field_222151_c, RecipeBookCategories::blastFurnaceBlocksPredicate, "blast_furnace_blocks", new ItemStack(Blocks.field_150450_ax)),
+   BLAST_FURNACE_MISC(net.minecraft.item.crafting.IRecipeType.field_222151_c, RecipeBookCategories::blastFurnaceMiscPredicate, "blast_furnace_misc", new ItemStack(Items.field_151037_a), new ItemStack(Items.field_151149_ai)),
+   SMOKER_SEARCH(net.minecraft.item.crafting.IRecipeType.field_222152_d, "smoker_search", new ItemStack(Items.field_151111_aL)),
+   SMOKER_FOOD(net.minecraft.item.crafting.IRecipeType.field_222152_d, RecipeBookCategories::foodPredicate, "smoker_food", new ItemStack(Items.field_151147_al)),
+   STONECUTTER(net.minecraft.item.crafting.IRecipeType.field_222154_f, "stonecutter", new ItemStack(Items.field_221782_da)),
+   CAMPFIRE(net.minecraft.item.crafting.IRecipeType.field_222153_e, "campfire", new ItemStack(Items.field_151147_al));
 
    private final List<ItemStack> field_202904_j;
 
-   private RecipeBookCategories(ItemStack... p_i48836_3_) {
-      this.field_202904_j = ImmutableList.copyOf(p_i48836_3_);
+   @Override
+   public List<ItemStack> getIcons() {
+      return this.field_202904_j;
    }
 
-   public List<ItemStack> func_202903_a() {
-      return this.field_202904_j;
+   //--FORGE
+   private net.minecraft.util.ResourceLocation registryName;
+   private final boolean isSearch;
+   private final net.minecraft.item.crafting.IRecipeType<?> recipeType;
+   private final java.util.function.Predicate<net.minecraft.item.crafting.IRecipe<?>> predicate;
+
+   static {
+      for (RecipeBookCategories categories : RecipeBookCategories.values()) {
+         register(categories, categories.name().toLowerCase());
+      }
    }
+
+   private RecipeBookCategories(net.minecraft.item.crafting.IRecipeType<?> recipeType, String name, ItemStack... icons) {
+      this.isSearch = true;
+      this.recipeType = recipeType;
+      this.predicate = recipe -> true;
+      this.field_202904_j = ImmutableList.copyOf(icons);
+   }
+
+   private RecipeBookCategories(net.minecraft.item.crafting.IRecipeType<?> recipeType, java.util.function.Predicate<net.minecraft.item.crafting.IRecipe<?>> predicate, String name, ItemStack... icons) {
+      this.isSearch = false;
+      this.recipeType = recipeType;
+      this.predicate = predicate;
+      this.field_202904_j = ImmutableList.copyOf(icons);
+   }
+
+   @Override
+   public final RecipeBookCategories setRegistryName(net.minecraft.util.ResourceLocation name) {
+      return setRegistryName(name.toString());
+   }
+
+   @javax.annotation.Nullable
+   @Override
+   public net.minecraft.util.ResourceLocation getRegistryName() {
+      return registryName;
+   }
+
+   @Override
+   public Class<net.minecraftforge.common.extensions.IForgeRecipeBookCategory<? extends net.minecraft.item.crafting.IRecipeType<?>>> getRegistryType() {
+      //return RecipeBookCategories.class;
+      return null;
+   }
+
+   public final RecipeBookCategories setRegistryName(String modID, String name) {
+      return setRegistryName(modID + ":" + name);
+   }
+
+   public final RecipeBookCategories setRegistryName(String name) {
+      if (getRegistryName() != null) {
+         throw new IllegalStateException("Attempted to set registry name with existing registry name! New: " + name + " Old: " + getRegistryName());
+      }
+
+      this.registryName = net.minecraftforge.registries.GameData.checkPrefix(name, true);
+      return this;
+   }
+
+   @Override
+   public boolean isSearch() {
+      return isSearch;
+   }
+
+   @Override
+   public java.util.function.Predicate<net.minecraft.item.crafting.IRecipe<?>> getPredicate() {
+      return predicate;
+   }
+
+   @Override
+   public net.minecraft.item.crafting.IRecipeType<?> getRecipeType() {
+      return recipeType;
+   }
+
+   private static void register(RecipeBookCategories category, String resourceName) {
+      category.setRegistryName(resourceName);
+      net.minecraft.util.registry.Registry.func_218322_a(net.minecraft.util.registry.Registry.RECIPE_BOOK_CATEGORIES, new net.minecraft.util.ResourceLocation(resourceName), category);
+   }
+
+   private static boolean buildingBlocksPredicate(net.minecraft.item.crafting.IRecipe<?> recipe) {
+      ItemStack itemstack = recipe.func_77571_b();
+      net.minecraft.item.ItemGroup itemgroup = itemstack.func_77973_b().func_77640_w();
+      return itemgroup == net.minecraft.item.ItemGroup.field_78030_b;
+   }
+
+   private static boolean redstonePredicate(net.minecraft.item.crafting.IRecipe<?> recipe) {
+      ItemStack itemstack = recipe.func_77571_b();
+      net.minecraft.item.ItemGroup itemgroup = itemstack.func_77973_b().func_77640_w();
+      return itemgroup == net.minecraft.item.ItemGroup.field_78028_d;
+   }
+
+   private static boolean miscPredicate(net.minecraft.item.crafting.IRecipe<?> recipe) {
+      ItemStack itemstack = recipe.func_77571_b();
+      net.minecraft.item.ItemGroup itemgroup = itemstack.func_77973_b().func_77640_w();
+      return itemgroup != net.minecraft.item.ItemGroup.field_78028_d && itemgroup != net.minecraft.item.ItemGroup.field_78040_i && itemgroup != net.minecraft.item.ItemGroup.field_78037_j;
+   }
+
+   private static boolean equipmentPredicate(net.minecraft.item.crafting.IRecipe<?> recipe) {
+      ItemStack itemstack = recipe.func_77571_b();
+      net.minecraft.item.ItemGroup itemgroup = itemstack.func_77973_b().func_77640_w();
+      return itemgroup == net.minecraft.item.ItemGroup.field_78040_i || itemgroup == net.minecraft.item.ItemGroup.field_78037_j;
+   }
+
+   private static boolean foodPredicate(net.minecraft.item.crafting.IRecipe<?> recipe) {
+      return recipe.func_77571_b().func_77973_b().func_219971_r();
+   }
+
+   private static boolean furnaceBlocksPredicate(net.minecraft.item.crafting.IRecipe<?> recipe) {
+      return !recipe.func_77571_b().func_77973_b().func_219971_r() && recipe.func_77571_b().func_77973_b() instanceof net.minecraft.item.BlockItem;
+   }
+
+   private static boolean furnaceMiscPredicate(net.minecraft.item.crafting.IRecipe<?> recipe) {
+      return !recipe.func_77571_b().func_77973_b().func_219971_r() && !(recipe.func_77571_b().func_77973_b() instanceof net.minecraft.item.BlockItem);
+   }
+
+   private static boolean blastFurnaceBlocksPredicate(net.minecraft.item.crafting.IRecipe<?> recipe) {
+      return recipe.func_77571_b().func_77973_b() instanceof net.minecraft.item.BlockItem;
+   }
+
+   private static boolean blastFurnaceMiscPredicate(net.minecraft.item.crafting.IRecipe<?> recipe) {
+      return !(recipe.func_77571_b().func_77973_b() instanceof net.minecraft.item.BlockItem);
+   }
 }
