--- ../src_base/minecraft/net/minecraft/client/multiplayer/PlayerControllerMP.java
+++ ../src_work/minecraft/net/minecraft/client/multiplayer/PlayerControllerMP.java
@@ -20,6 +20,10 @@
 import net.minecraft.world.EnumGameType;
 import net.minecraft.world.World;
 
+import net.minecraftforge.common.ForgeHooks;
+import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.event.entity.player.PlayerDestroyItemEvent;
+
 @SideOnly(Side.CLIENT)
 public class PlayerControllerMP
 {
@@ -121,6 +125,12 @@
      */
     public boolean onPlayerDestroyBlock(int par1, int par2, int par3, int par4)
     {
+        ItemStack stack = mc.thePlayer.getCurrentEquippedItem();
+        if (stack != null && stack.getItem() != null && stack.getItem().onBlockStartBreak(stack, par1, par2, par3, mc.thePlayer))
+        {
+            return false;
+        }
+
         if (this.currentGameType.isAdventure() && !this.mc.thePlayer.canCurrentToolHarvestBlock(par1, par2, par3))
         {
             return false;
@@ -138,7 +148,7 @@
             {
                 var5.playAuxSFX(2001, par1, par2, par3, var6.blockID + (var5.getBlockMetadata(par1, par2, par3) << 12));
                 int var7 = var5.getBlockMetadata(par1, par2, par3);
-                boolean var8 = var5.setBlockWithNotify(par1, par2, par3, 0);
+                boolean var8 = var6.removeBlockByPlayer(var5, mc.thePlayer, par1, par2, par3);
 
                 if (var8)
                 {
@@ -264,7 +274,8 @@
 
                 if (this.stepSoundTickCounter % 4.0F == 0.0F && var6 != null)
                 {
-                    this.mc.sndManager.playSound(var6.stepSound.getStepSound(), (float)par1 + 0.5F, (float)par2 + 0.5F, (float)par3 + 0.5F, (var6.stepSound.getVolume() + 1.0F) / 8.0F, var6.stepSound.getPitch() * 0.5F);
+                    int meta = this.mc.theWorld.getBlockMetadata(par1, par2, par3);
+                    this.mc.sndManager.playSound(var6.getBlockStepSound(this.mc.theWorld, par1, par2, par3, meta).getStepSound(), (float)par1 + 0.5F, (float)par2 + 0.5F, (float)par3 + 0.5F, (var6.getBlockStepSound(this.mc.theWorld, par1, par2, par3, meta).getVolume() + 1.0F) / 8.0F, var6.getBlockStepSound(this.mc.theWorld, par1, par2, par3, meta).getPitch() * 0.5F);
                 }
 
                 ++this.stepSoundTickCounter;
@@ -334,6 +345,12 @@
         float var11 = (float)par8Vec3.zCoord - (float)par6;
         boolean var12 = false;
         int var13;
+        if (par3ItemStack != null &&
+                par3ItemStack.getItem() != null &&
+                par3ItemStack.getItem().onItemUseFirst(par3ItemStack, par1EntityPlayer, par2World, par4, par5, par6, par7, var9, var10, var11))
+        {
+                return true;
+        }
 
         if (!par1EntityPlayer.isSneaking() || par1EntityPlayer.getHeldItem() == null)
         {
@@ -344,6 +361,7 @@
                 var12 = true;
             }
         }
+
 
         if (!var12 && par3ItemStack != null && par3ItemStack.getItem() instanceof ItemBlock)
         {
@@ -376,7 +394,15 @@
         }
         else
         {
-            return par3ItemStack.tryPlaceItemIntoWorld(par1EntityPlayer, par2World, par4, par5, par6, par7, var9, var10, var11);
+            if (!par3ItemStack.tryPlaceItemIntoWorld(par1EntityPlayer, par2World, par4, par5, par6, par7, var9, var10, var11))
+            {
+                return false;
+            }
+            if (par3ItemStack.stackSize <= 0)
+            {
+                MinecraftForge.EVENT_BUS.post(new PlayerDestroyItemEvent(par1EntityPlayer, par3ItemStack));
+            }
+            return true;
         }
     }
 
@@ -398,9 +424,10 @@
         {
             par1EntityPlayer.inventory.mainInventory[par1EntityPlayer.inventory.currentItem] = var5;
 
-            if (var5.stackSize == 0)
+            if (var5.stackSize <= 0)
             {
                 par1EntityPlayer.inventory.mainInventory[par1EntityPlayer.inventory.currentItem] = null;
+                MinecraftForge.EVENT_BUS.post(new PlayerDestroyItemEvent(par1EntityPlayer, var5));
             }
 
             return true;
