--- ../src-base/minecraft/net/minecraft/client/Minecraft.java
+++ ../src-work/minecraft/net/minecraft/client/Minecraft.java
@@ -134,6 +134,14 @@
 import net.minecraft.world.storage.ISaveFormat;
 import net.minecraft.world.storage.ISaveHandler;
 import net.minecraft.world.storage.WorldInfo;
+import net.minecraftforge.client.ForgeHooksClient;
+import net.minecraftforge.client.GuiIngameForge;
+import net.minecraftforge.client.event.GuiOpenEvent;
+import net.minecraftforge.common.ForgeHooks;
+import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.event.ForgeEventFactory;
+import net.minecraftforge.event.entity.player.PlayerInteractEvent.Action;
+import net.minecraftforge.event.world.WorldEvent;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 import org.lwjgl.LWJGLException;
@@ -274,7 +282,7 @@
         this.startTimerHackThread();
         this.session = par1Session;
         field_147123_G.info("Setting user: " + par1Session.getUsername());
-        field_147123_G.info("(Session ID is " + par1Session.getSessionID() + ")");
+        //field_147123_G.info("(Session ID is " + par1Session.getSessionID() + ")"); //don't print the session to the console.. that's stupid...
         this.isDemo = par5;
         this.displayWidth = par2;
         this.displayHeight = par3;
@@ -447,7 +455,7 @@
 
         try
         {
-            Display.create((new PixelFormat()).withDepthBits(24));
+            ForgeHooksClient.createDisplay();
         }
         catch (LWJGLException lwjglexception)
         {
@@ -547,7 +555,7 @@
         this.effectRenderer = new EffectRenderer(this.theWorld, this.renderEngine);
         FMLClientHandler.instance().finishMinecraftLoading();
         this.checkGLError("Post startup");
-        this.ingameGUI = new GuiIngame(this);
+        this.ingameGUI = new GuiIngameForge(this);
 
         if (this.serverName != null)
         {
@@ -733,11 +741,6 @@
 
     public void func_147108_a(GuiScreen p_147108_1_)
     {
-        if (this.currentScreen != null)
-        {
-            this.currentScreen.func_146281_b();
-        }
-
         if (p_147108_1_ == null && this.theWorld == null)
         {
             p_147108_1_ = new GuiMainMenu();
@@ -747,6 +750,17 @@
             p_147108_1_ = new GuiGameOver();
         }
 
+        GuiScreen old = this.currentScreen;
+        GuiOpenEvent event = new GuiOpenEvent(p_147108_1_);
+
+        if (MinecraftForge.EVENT_BUS.post(event)) return;
+
+        p_147108_1_ = event.gui;
+        if (old != null && p_147108_1_ != old)
+        {
+            old.func_146281_b();
+        }
+        
         if (p_147108_1_ instanceof GuiMainMenu)
         {
             this.gameSettings.showDebugInfo = false;
@@ -1337,7 +1351,7 @@
 
                     if (this.thePlayer.isCurrentToolAdventureModeExempt(i, j, k))
                     {
-                        this.effectRenderer.addBlockHitEffects(i, j, k, this.objectMouseOver.sideHit);
+                        this.effectRenderer.addBlockHitEffects(i, j, k, this.objectMouseOver);
                         this.thePlayer.swingItem();
                     }
                 }
@@ -1418,11 +1432,12 @@
                     int j = this.objectMouseOver.blockY;
                     int k = this.objectMouseOver.blockZ;
 
-                    if (this.theWorld.func_147439_a(i, j, k).func_149688_o() != Material.field_151579_a)
+                    if (!this.theWorld.func_147439_a(i, j, k).isAir(theWorld, i, j, k))
                     {
                         int l = itemstack != null ? itemstack.stackSize : 0;
 
-                        if (this.playerController.onPlayerRightClick(this.thePlayer, this.theWorld, itemstack, i, j, k, this.objectMouseOver.sideHit, this.objectMouseOver.hitVec))
+                        boolean result = !ForgeEventFactory.onPlayerInteract(thePlayer, Action.RIGHT_CLICK_BLOCK, i, j, k, this.objectMouseOver.sideHit).isCanceled();
+                        if (result && this.playerController.onPlayerRightClick(this.thePlayer, this.theWorld, itemstack, i, j, k, this.objectMouseOver.sideHit, this.objectMouseOver.hitVec))
                         {
                             flag = false;
                             this.thePlayer.swingItem();
@@ -1449,7 +1464,8 @@
         {
             ItemStack itemstack1 = this.thePlayer.inventory.getCurrentItem();
 
-            if (itemstack1 != null && this.playerController.sendUseItem(this.thePlayer, this.theWorld, itemstack1))
+            boolean result = !ForgeEventFactory.onPlayerInteract(thePlayer, Action.RIGHT_CLICK_AIR, 0, 0, 0, -1).isCanceled();
+            if (result && itemstack1 != null && this.playerController.sendUseItem(this.thePlayer, this.theWorld, itemstack1))
             {
                 this.entityRenderer.itemRenderer.resetEquippedProgress2();
             }
@@ -1651,6 +1667,8 @@
 
             while (Mouse.next())
             {
+                if (ForgeHooksClient.postMouseEvent()) continue;
+
                 i = Mouse.getEventButton();
 
                 if (isRunningOnMac && i == 0 && (Keyboard.isKeyDown(29) || Keyboard.isKeyDown(157)))
@@ -2120,6 +2138,11 @@
     // JAVADOC METHOD $$ func_71353_a
     public void loadWorld(WorldClient par1WorldClient, String par2Str)
     {
+        if (theWorld != null)
+        {
+            MinecraftForge.EVENT_BUS.post(new WorldEvent.Unload(theWorld));
+        }
+
         if (par1WorldClient == null)
         {
             NetHandlerPlayClient nethandlerplayclient = this.func_147114_u();
@@ -2132,6 +2155,18 @@
             if (this.theIntegratedServer != null)
             {
                 this.theIntegratedServer.initiateShutdown();
+                if (loadingScreen != null)
+                {
+                    this.loadingScreen.resetProgresAndWorkingMessage("Shutting down internal server...");
+                }
+                while (!theIntegratedServer.isServerStopped())
+                {
+                    try
+                    {
+                        Thread.sleep(10);
+                    }
+                    catch (InterruptedException ie) {}
+                }
             }
 
             this.theIntegratedServer = null;
@@ -2287,113 +2322,10 @@
         if (this.objectMouseOver != null)
         {
             boolean flag = this.thePlayer.capabilities.isCreativeMode;
-            int i = 0;
-            boolean flag1 = false;
-            Item item;
             int j;
 
-            if (this.objectMouseOver.typeOfHit == MovingObjectPosition.MovingObjectType.BLOCK)
-            {
-                j = this.objectMouseOver.blockX;
-                int k = this.objectMouseOver.blockY;
-                int l = this.objectMouseOver.blockZ;
-                Block block = this.theWorld.func_147439_a(j, k, l);
-
-                if (block.func_149688_o() == Material.field_151579_a)
-                {
-                    return;
-                }
-
-                item = block.func_149694_d(this.theWorld, j, k, l);
-
-                if (item == null)
-                {
-                    return;
-                }
-
-                flag1 = item.getHasSubtypes();
-                Block block1 = item instanceof ItemBlock && !block.func_149648_K() ? Block.func_149634_a(item) : block;
-                i = block1.func_149643_k(this.theWorld, j, k, l);
-            }
-            else
-            {
-                if (this.objectMouseOver.typeOfHit != MovingObjectPosition.MovingObjectType.ENTITY || this.objectMouseOver.entityHit == null || !flag)
-                {
-                    return;
-                }
-
-                if (this.objectMouseOver.entityHit instanceof EntityPainting)
-                {
-                    item = Items.painting;
-                }
-                else if (this.objectMouseOver.entityHit instanceof EntityLeashKnot)
-                {
-                    item = Items.lead;
-                }
-                else if (this.objectMouseOver.entityHit instanceof EntityItemFrame)
-                {
-                    EntityItemFrame entityitemframe = (EntityItemFrame)this.objectMouseOver.entityHit;
-                    ItemStack itemstack = entityitemframe.getDisplayedItem();
-
-                    if (itemstack == null)
-                    {
-                        item = Items.item_frame;
-                    }
-                    else
-                    {
-                        item = itemstack.getItem();
-                        i = itemstack.getItemDamage();
-                        flag1 = true;
-                    }
-                }
-                else if (this.objectMouseOver.entityHit instanceof EntityMinecart)
-                {
-                    EntityMinecart entityminecart = (EntityMinecart)this.objectMouseOver.entityHit;
-
-                    if (entityminecart.getMinecartType() == 2)
-                    {
-                        item = Items.furnace_minecart;
-                    }
-                    else if (entityminecart.getMinecartType() == 1)
-                    {
-                        item = Items.chest_minecart;
-                    }
-                    else if (entityminecart.getMinecartType() == 3)
-                    {
-                        item = Items.tnt_minecart;
-                    }
-                    else if (entityminecart.getMinecartType() == 5)
-                    {
-                        item = Items.hopper_minecart;
-                    }
-                    else if (entityminecart.getMinecartType() == 6)
-                    {
-                        item = Items.command_block_minecart;
-                    }
-                    else
-                    {
-                        item = Items.minecart;
-                    }
-                }
-                else if (this.objectMouseOver.entityHit instanceof EntityBoat)
-                {
-                    item = Items.boat;
-                }
-                else
-                {
-                    item = Items.spawn_egg;
-                    i = EntityList.getEntityID(this.objectMouseOver.entityHit);
-                    flag1 = true;
-
-                    if (i <= 0 || !EntityList.entityEggs.containsKey(Integer.valueOf(i)))
-                    {
-                        return;
-                    }
-                }
-            }
-
-            this.thePlayer.inventory.func_146030_a(item, i, flag1, flag);
-
+            if (!ForgeHooks.onPickBlock(this.objectMouseOver, this.thePlayer, this.theWorld)) return;
+            // We delete this code wholly instead of commenting it out, to make sure we detect changes in it between MC versions
             if (flag)
             {
                 j = this.thePlayer.inventoryContainer.inventorySlots.size() - 9 + this.thePlayer.inventory.currentItem;
@@ -2563,9 +2495,16 @@
         par1PlayerUsageSnooper.addData("gl_max_texture_size", Integer.valueOf(getGLMaximumTextureSize()));
     }
 
+    //Forge: Adds a optimization to the getGLMaximumTextureSize, only calculate it once.
+    private static int max_texture_size = -1;
     // JAVADOC METHOD $$ func_71369_N
     public static int getGLMaximumTextureSize()
     {
+        if (max_texture_size != -1)
+        {
+            return max_texture_size;
+        }
+
         for (int i = 16384; i > 0; i >>= 1)
         {
             GL11.glTexImage2D(GL11.GL_PROXY_TEXTURE_2D, 0, GL11.GL_RGBA, i, i, 0, GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, (ByteBuffer)null);
@@ -2573,6 +2512,7 @@
 
             if (j != 0)
             {
+                max_texture_size = i;
                 return i;
             }
         }
