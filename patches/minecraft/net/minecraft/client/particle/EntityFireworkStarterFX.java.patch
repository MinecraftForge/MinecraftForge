--- ../src_base/minecraft/net/minecraft/client/particle/EntityFireworkStarterFX.java
+++ ../src_work/minecraft/net/minecraft/client/particle/EntityFireworkStarterFX.java
@@ -12,10 +12,10 @@
 @SideOnly(Side.CLIENT)
 public class EntityFireworkStarterFX extends EntityFX
 {
-    private int field_92042_ax;
-    private final EffectRenderer field_92040_ay;
+    private int fireworkAge;
+    private final EffectRenderer theEffectRenderer;
     private NBTTagList fireworkExplosions;
-    boolean field_92041_a;
+    boolean twinkle;
 
     public EntityFireworkStarterFX(World par1World, double par2, double par4, double par6, double par8, double par10, double par12, EffectRenderer par14EffectRenderer, NBTTagCompound par15NBTTagCompound)
     {
@@ -23,18 +23,18 @@
         this.motionX = par8;
         this.motionY = par10;
         this.motionZ = par12;
-        this.field_92040_ay = par14EffectRenderer;
+        this.theEffectRenderer = par14EffectRenderer;
         this.particleMaxAge = 8;
 
         if (par15NBTTagCompound != null)
         {
             this.fireworkExplosions = par15NBTTagCompound.getTagList("Explosions");
 
-            if (this.fireworkExplosions.tagCount() == 0)
+            if (this.fireworkExplosions != null && this.fireworkExplosions.tagCount() == 0)
             {
                 this.fireworkExplosions = null;
             }
-            else
+            else if (this.fireworkExplosions != null)
             {
                 this.particleMaxAge = this.fireworkExplosions.tagCount() * 2 - 1;
 
@@ -44,7 +44,7 @@
 
                     if (nbttagcompound1.getBoolean("Flicker"))
                     {
-                        this.field_92041_a = true;
+                        this.twinkle = true;
                         this.particleMaxAge += 15;
                         break;
                     }
@@ -62,7 +62,7 @@
     {
         boolean flag;
 
-        if (this.field_92042_ax == 0 && this.fireworkExplosions != null)
+        if (this.fireworkAge == 0 && this.fireworkExplosions != null)
         {
             flag = this.func_92037_i();
             boolean flag1 = false;
@@ -89,9 +89,9 @@
             this.worldObj.playSound(this.posX, this.posY, this.posZ, s, 20.0F, 0.95F + this.rand.nextFloat() * 0.1F, true);
         }
 
-        if (this.field_92042_ax % 2 == 0 && this.fireworkExplosions != null && this.field_92042_ax / 2 < this.fireworkExplosions.tagCount())
-        {
-            int j = this.field_92042_ax / 2;
+        if (this.fireworkAge % 2 == 0 && this.fireworkExplosions != null && this.fireworkAge / 2 < this.fireworkExplosions.tagCount())
+        {
+            int j = this.fireworkAge / 2;
             NBTTagCompound nbttagcompound1 = (NBTTagCompound)this.fireworkExplosions.tagAt(j);
             byte b0 = nbttagcompound1.getByte("Type");
             boolean flag2 = nbttagcompound1.getBoolean("Trail");
@@ -101,23 +101,23 @@
 
             if (b0 == 1)
             {
-                this.func_92035_a(0.5D, 4, aint, aint1, flag2, flag3);
+                this.createBall(0.5D, 4, aint, aint1, flag2, flag3);
             }
             else if (b0 == 2)
             {
-                this.func_92038_a(0.5D, new double[][] {{0.0D, 1.0D}, {0.3455D, 0.309D}, {0.9511D, 0.309D}, {0.3795918367346939D, -0.12653061224489795D}, {0.6122448979591837D, -0.8040816326530612D}, {0.0D, -0.35918367346938773D}}, aint, aint1, flag2, flag3, false);
+                this.createShaped(0.5D, new double[][] {{0.0D, 1.0D}, {0.3455D, 0.309D}, {0.9511D, 0.309D}, {0.3795918367346939D, -0.12653061224489795D}, {0.6122448979591837D, -0.8040816326530612D}, {0.0D, -0.35918367346938773D}}, aint, aint1, flag2, flag3, false);
             }
             else if (b0 == 3)
             {
-                this.func_92038_a(0.5D, new double[][] {{0.0D, 0.2D}, {0.2D, 0.2D}, {0.2D, 0.6D}, {0.6D, 0.6D}, {0.6D, 0.2D}, {0.2D, 0.2D}, {0.2D, 0.0D}, {0.4D, 0.0D}, {0.4D, -0.6D}, {0.2D, -0.6D}, {0.2D, -0.4D}, {0.0D, -0.4D}}, aint, aint1, flag2, flag3, true);
+                this.createShaped(0.5D, new double[][] {{0.0D, 0.2D}, {0.2D, 0.2D}, {0.2D, 0.6D}, {0.6D, 0.6D}, {0.6D, 0.2D}, {0.2D, 0.2D}, {0.2D, 0.0D}, {0.4D, 0.0D}, {0.4D, -0.6D}, {0.2D, -0.6D}, {0.2D, -0.4D}, {0.0D, -0.4D}}, aint, aint1, flag2, flag3, true);
             }
             else if (b0 == 4)
             {
-                this.func_92036_a(aint, aint1, flag2, flag3);
+                this.createBurst(aint, aint1, flag2, flag3);
             }
             else
             {
-                this.func_92035_a(0.25D, 2, aint, aint1, flag2, flag3);
+                this.createBall(0.25D, 2, aint, aint1, flag2, flag3);
             }
 
             int k = aint[0];
@@ -126,14 +126,14 @@
             float f2 = (float)((k & 255) >> 0) / 255.0F;
             EntityFireworkOverlayFX entityfireworkoverlayfx = new EntityFireworkOverlayFX(this.worldObj, this.posX, this.posY, this.posZ);
             entityfireworkoverlayfx.setRBGColorF(f, f1, f2);
-            this.field_92040_ay.addEffect(entityfireworkoverlayfx);
-        }
-
-        ++this.field_92042_ax;
-
-        if (this.field_92042_ax > this.particleMaxAge)
-        {
-            if (this.field_92041_a)
+            this.theEffectRenderer.addEffect(entityfireworkoverlayfx);
+        }
+
+        ++this.fireworkAge;
+
+        if (this.fireworkAge > this.particleMaxAge)
+        {
+            if (this.twinkle)
             {
                 flag = this.func_92037_i();
                 String s1 = "fireworks." + (flag ? "twinkle_far" : "twinkle");
@@ -150,23 +150,31 @@
         return minecraft == null || minecraft.renderViewEntity == null || minecraft.renderViewEntity.getDistanceSq(this.posX, this.posY, this.posZ) >= 256.0D;
     }
 
-    private void func_92034_a(double par1, double par3, double par5, double par7, double par9, double par11, int[] par13ArrayOfInteger, int[] par14ArrayOfInteger, boolean par15, boolean par16)
-    {
-        EntityFireworkSparkFX entityfireworksparkfx = new EntityFireworkSparkFX(this.worldObj, par1, par3, par5, par7, par9, par11, this.field_92040_ay);
-        entityfireworksparkfx.func_92045_e(par15);
-        entityfireworksparkfx.func_92043_f(par16);
+    /**
+     * Creates a single particle. Args: x, y, z, x velocity, y velocity, z velocity, colours, fade colours, whether to
+     * trail, whether to twinkle
+     */
+    private void createParticle(double par1, double par3, double par5, double par7, double par9, double par11, int[] par13ArrayOfInteger, int[] par14ArrayOfInteger, boolean par15, boolean par16)
+    {
+        EntityFireworkSparkFX entityfireworksparkfx = new EntityFireworkSparkFX(this.worldObj, par1, par3, par5, par7, par9, par11, this.theEffectRenderer);
+        entityfireworksparkfx.setTrail(par15);
+        entityfireworksparkfx.setTwinkle(par16);
         int i = this.rand.nextInt(par13ArrayOfInteger.length);
-        entityfireworksparkfx.func_92044_a(par13ArrayOfInteger[i]);
+        entityfireworksparkfx.setColour(par13ArrayOfInteger[i]);
 
         if (par14ArrayOfInteger != null && par14ArrayOfInteger.length > 0)
         {
-            entityfireworksparkfx.func_92046_g(par14ArrayOfInteger[this.rand.nextInt(par14ArrayOfInteger.length)]);
-        }
-
-        this.field_92040_ay.addEffect(entityfireworksparkfx);
-    }
-
-    private void func_92035_a(double par1, int par3, int[] par4ArrayOfInteger, int[] par5ArrayOfInteger, boolean par6, boolean par7)
+            entityfireworksparkfx.setFadeColour(par14ArrayOfInteger[this.rand.nextInt(par14ArrayOfInteger.length)]);
+        }
+
+        this.theEffectRenderer.addEffect(entityfireworksparkfx);
+    }
+
+    /**
+     * Creates a small ball or large ball type explosion. Args: particle speed, size, colours, fade colours, whether to
+     * trail, whether to flicker
+     */
+    private void createBall(double par1, int par3, int[] par4ArrayOfInteger, int[] par5ArrayOfInteger, boolean par6, boolean par7)
     {
         double d1 = this.posX;
         double d2 = this.posY;
@@ -182,7 +190,7 @@
                     double d5 = (double)j + (this.rand.nextDouble() - this.rand.nextDouble()) * 0.5D;
                     double d6 = (double)l + (this.rand.nextDouble() - this.rand.nextDouble()) * 0.5D;
                     double d7 = (double)MathHelper.sqrt_double(d4 * d4 + d5 * d5 + d6 * d6) / par1 + this.rand.nextGaussian() * 0.05D;
-                    this.func_92034_a(d1, d2, d3, d4 / d7, d5 / d7, d6 / d7, par4ArrayOfInteger, par5ArrayOfInteger, par6, par7);
+                    this.createParticle(d1, d2, d3, d4 / d7, d5 / d7, d6 / d7, par4ArrayOfInteger, par5ArrayOfInteger, par6, par7);
 
                     if (j != -par3 && j != par3 && k != -par3 && k != par3)
                     {
@@ -193,11 +201,15 @@
         }
     }
 
-    private void func_92038_a(double par1, double[][] par3ArrayOfDouble, int[] par4ArrayOfInteger, int[] par5ArrayOfInteger, boolean par6, boolean par7, boolean par8)
+    /**
+     * Creates a creeper-shaped or star-shaped explosion. Args: particle speed, shape, colours, fade colours, whether to
+     * trail, whether to flicker, unknown
+     */
+    private void createShaped(double par1, double[][] par3ArrayOfDouble, int[] par4ArrayOfInteger, int[] par5ArrayOfInteger, boolean par6, boolean par7, boolean par8)
     {
         double d1 = par3ArrayOfDouble[0][0];
         double d2 = par3ArrayOfDouble[0][1];
-        this.func_92034_a(this.posX, this.posY, this.posZ, d1 * par1, d2 * par1, 0.0D, par4ArrayOfInteger, par5ArrayOfInteger, par6, par7);
+        this.createParticle(this.posX, this.posY, this.posZ, d1 * par1, d2 * par1, 0.0D, par4ArrayOfInteger, par5ArrayOfInteger, par6, par7);
         float f = this.rand.nextFloat() * (float)Math.PI;
         double d3 = par8 ? 0.034D : 0.34D;
 
@@ -221,7 +233,7 @@
 
                     for (double d13 = -1.0D; d13 <= 1.0D; d13 += 2.0D)
                     {
-                        this.func_92034_a(this.posX, this.posY, this.posZ, d10 * d13, d11, d12 * d13, par4ArrayOfInteger, par5ArrayOfInteger, par6, par7);
+                        this.createParticle(this.posX, this.posY, this.posZ, d10 * d13, d11, d12 * d13, par4ArrayOfInteger, par5ArrayOfInteger, par6, par7);
                     }
                 }
 
@@ -231,7 +243,10 @@
         }
     }
 
-    private void func_92036_a(int[] par1ArrayOfInteger, int[] par2ArrayOfInteger, boolean par3, boolean par4)
+    /**
+     * Creates a burst type explosion. Args: colours, fade colours, whether to trail, whether to flicker
+     */
+    private void createBurst(int[] par1ArrayOfInteger, int[] par2ArrayOfInteger, boolean par3, boolean par4)
     {
         double d0 = this.rand.nextGaussian() * 0.05D;
         double d1 = this.rand.nextGaussian() * 0.05D;
@@ -241,7 +256,7 @@
             double d2 = this.motionX * 0.5D + this.rand.nextGaussian() * 0.15D + d0;
             double d3 = this.motionZ * 0.5D + this.rand.nextGaussian() * 0.15D + d1;
             double d4 = this.motionY * 0.5D + this.rand.nextDouble() * 0.5D;
-            this.func_92034_a(this.posX, this.posY, this.posZ, d2, d4, d3, par1ArrayOfInteger, par2ArrayOfInteger, par3, par4);
+            this.createParticle(this.posX, this.posY, this.posZ, d2, d4, d3, par1ArrayOfInteger, par2ArrayOfInteger, par3, par4);
         }
     }
 
