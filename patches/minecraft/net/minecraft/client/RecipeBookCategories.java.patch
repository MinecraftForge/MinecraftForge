--- a/net/minecraft/client/RecipeBookCategories.java
+++ b/net/minecraft/client/RecipeBookCategories.java
@@ -12,7 +_,7 @@
 import net.minecraftforge.api.distmarker.OnlyIn;
 
 @OnlyIn(Dist.CLIENT)
-public enum RecipeBookCategories {
+public enum RecipeBookCategories implements net.minecraftforge.common.IExtensibleEnum {
    CRAFTING_SEARCH(new ItemStack(Items.f_42522_)),
    CRAFTING_BUILDING_BLOCKS(new ItemStack(Blocks.f_50076_)),
    CRAFTING_REDSTONE(new ItemStack(Items.f_42451_)),
@@ -36,7 +_,7 @@
    public static final List<RecipeBookCategories> f_92257_ = ImmutableList.of(BLAST_FURNACE_SEARCH, BLAST_FURNACE_BLOCKS, BLAST_FURNACE_MISC);
    public static final List<RecipeBookCategories> f_92258_ = ImmutableList.of(FURNACE_SEARCH, FURNACE_FOOD, FURNACE_BLOCKS, FURNACE_MISC);
    public static final List<RecipeBookCategories> f_92259_ = ImmutableList.of(CRAFTING_SEARCH, CRAFTING_EQUIPMENT, CRAFTING_BUILDING_BLOCKS, CRAFTING_MISC, CRAFTING_REDSTONE);
-   public static final Map<RecipeBookCategories, List<RecipeBookCategories>> f_92260_ = ImmutableMap.of(CRAFTING_SEARCH, ImmutableList.of(CRAFTING_EQUIPMENT, CRAFTING_BUILDING_BLOCKS, CRAFTING_MISC, CRAFTING_REDSTONE), FURNACE_SEARCH, ImmutableList.of(FURNACE_FOOD, FURNACE_BLOCKS, FURNACE_MISC), BLAST_FURNACE_SEARCH, ImmutableList.of(BLAST_FURNACE_BLOCKS, BLAST_FURNACE_MISC), SMOKER_SEARCH, ImmutableList.of(SMOKER_FOOD));
+   public static final Map<RecipeBookCategories, List<RecipeBookCategories>> f_92260_ = net.minecraftforge.client.RecipeBookManager.getAggregateCategories();
    private final List<ItemStack> f_92261_;
 
    private RecipeBookCategories(ItemStack... p_92267_) {
@@ -54,11 +_,15 @@
          case SMOKER:
             return f_92256_;
          default:
-            return ImmutableList.of();
+            return net.minecraftforge.client.RecipeBookManager.getCustomCategoriesOrEmpty(p_92270_);
       }
    }
 
    public List<ItemStack> m_92268_() {
       return this.f_92261_;
+   }
+
+   public static RecipeBookCategories create(String name, ItemStack... icons) {
+      throw new IllegalStateException("Enum not extended");
    }
 }
