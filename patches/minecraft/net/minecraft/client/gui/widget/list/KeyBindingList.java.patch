--- a/net/minecraft/client/gui/widget/list/KeyBindingList.java
+++ b/net/minecraft/client/gui/widget/list/KeyBindingList.java
@@ -50,7 +_,7 @@
    }
 
    protected int getScrollbarPosition() {
-      return super.getScrollbarPosition() + 15;
+      return super.getScrollbarPosition() + 15 + 20;
    }
 
    public int getRowWidth() {
@@ -94,7 +_,7 @@
       private KeyEntry(final KeyBinding p_i232281_2_, final ITextComponent p_i232281_3_) {
          this.key = p_i232281_2_;
          this.name = p_i232281_3_;
-         this.changeButton = new Button(0, 0, 75, 20, p_i232281_3_, (p_214386_2_) -> {
+         this.changeButton = new Button(0, 0, 75 + 20 /*Forge: add space*/, 20, p_i232281_3_, (p_214386_2_) -> {
             KeyBindingList.this.controlsScreen.selectedKey = p_i232281_2_;
          }) {
             protected IFormattableTextComponent createNarrationMessage() {
@@ -102,6 +_,7 @@
             }
          };
          this.resetButton = new Button(0, 0, 50, 20, new TranslationTextComponent("controls.reset"), (p_214387_2_) -> {
+            key.setToDefault();
             KeyBindingList.this.minecraft.options.setKey(p_i232281_2_, p_i232281_2_.getDefaultKey());
             KeyBinding.resetMapping();
          }) {
@@ -114,7 +_,7 @@
       public void render(MatrixStack p_230432_1_, int p_230432_2_, int p_230432_3_, int p_230432_4_, int p_230432_5_, int p_230432_6_, int p_230432_7_, int p_230432_8_, boolean p_230432_9_, float p_230432_10_) {
          boolean flag = KeyBindingList.this.controlsScreen.selectedKey == this.key;
          KeyBindingList.this.minecraft.font.draw(p_230432_1_, this.name, (float)(p_230432_4_ + 90 - KeyBindingList.this.maxNameWidth), (float)(p_230432_3_ + p_230432_6_ / 2 - 9 / 2), 16777215);
-         this.resetButton.x = p_230432_4_ + 190;
+         this.resetButton.x = p_230432_4_ + 190 + 20;
          this.resetButton.y = p_230432_3_;
          this.resetButton.active = !this.key.isDefault();
          this.resetButton.render(p_230432_1_, p_230432_7_, p_230432_8_, p_230432_10_);
@@ -122,11 +_,12 @@
          this.changeButton.y = p_230432_3_;
          this.changeButton.setMessage(this.key.getTranslatedKeyMessage());
          boolean flag1 = false;
+         boolean keyCodeModifierConflict = true; // less severe form of conflict, like SHIFT conflicting with SHIFT+G
          if (!this.key.isUnbound()) {
             for(KeyBinding keybinding : KeyBindingList.this.minecraft.options.keyMappings) {
                if (keybinding != this.key && this.key.same(keybinding)) {
                   flag1 = true;
-                  break;
+                  keyCodeModifierConflict &= keybinding.hasKeyCodeModifierConflict(this.key);
                }
             }
          }
@@ -134,7 +_,7 @@
          if (flag) {
             this.changeButton.setMessage((new StringTextComponent("> ")).append(this.changeButton.getMessage().copy().withStyle(TextFormatting.YELLOW)).append(" <").withStyle(TextFormatting.YELLOW));
          } else if (flag1) {
-            this.changeButton.setMessage(this.changeButton.getMessage().copy().withStyle(TextFormatting.RED));
+            this.changeButton.setMessage(this.changeButton.getMessage().copy().withStyle(keyCodeModifierConflict ? TextFormatting.GOLD : TextFormatting.RED));
          }
 
          this.changeButton.render(p_230432_1_, p_230432_7_, p_230432_8_, p_230432_10_);
