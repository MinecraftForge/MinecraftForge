--- a/net/minecraft/client/gui/screens/worldselection/CreateWorldScreen.java
+++ b/net/minecraft/client/gui/screens/worldselection/CreateWorldScreen.java
@@ -122,7 +_,10 @@
          return new WorldCreationContext(p_232884_, Lifecycle.stable(), p_232883_, p_232882_);
       }, Util.m_183991_(), p_232897_);
       p_232897_.m_18701_(completablefuture::isDone);
-      p_232897_.m_91152_(new CreateWorldScreen(p_232898_, DataPackConfig.f_45842_, new WorldGenSettingsComponent(completablefuture.join(), Optional.of(WorldPresets.f_226437_), OptionalLong.empty())));
+      // FORGE: Force load mods' datapacks after setting screen.
+      CreateWorldScreen createWorldScreen = new CreateWorldScreen(p_232898_, DataPackConfig.f_45842_, new WorldGenSettingsComponent(completablefuture.join(), Optional.of(WorldPresets.f_226437_), OptionalLong.empty()));
+      p_232897_.m_91152_(createWorldScreen);
+      createWorldScreen.m_100878_(packrepository);
    }
 
    public static CreateWorldScreen m_205426_(@Nullable Screen p_205427_, WorldStem p_205428_, @Nullable Path p_205429_) {
@@ -436,7 +_,10 @@
          return !list.contains(p_232927_);
       }).collect(ImmutableList.toImmutableList());
       DataPackConfig datapackconfig = new DataPackConfig(list, list1);
-      if (list.equals(this.f_100846_.m_45850_())) {
+      // FORGE: Force load and validate worldgen data when creating new world or rearranging datapacks.
+      // Force load on new world is necessary to ensure mods' worldgen  is loaded.
+      // Force load when leaving datapack rearrange screen is necessary to ensure invalid datapacks from the other force load continue to be recognized as invalid.
+      if (false && list.equals(this.f_100846_.m_45850_())) {
          this.f_100846_ = datapackconfig;
       } else {
          this.f_96541_.m_6937_(() -> {
@@ -653,6 +_,7 @@
          File file1 = path.toFile();
          if (this.f_100832_ == null) {
             this.f_100832_ = new PackRepository(PackType.SERVER_DATA, new ServerPacksSource(), new FolderRepositorySource(file1, PackSource.f_10527_));
+            net.minecraftforge.resource.ResourcePackLoader.loadResourcePacks(this.f_100832_, net.minecraftforge.server.ServerLifecycleHooks::buildPackFinder);
             this.f_100832_.m_10506_();
          }
 
