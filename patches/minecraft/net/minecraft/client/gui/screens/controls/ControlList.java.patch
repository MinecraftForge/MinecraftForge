--- a/net/minecraft/client/gui/screens/controls/ControlList.java
+++ b/net/minecraft/client/gui/screens/controls/ControlList.java
@@ -53,7 +_,7 @@
    }
 
    protected int m_5756_() {
-      return super.m_5756_() + 15;
+      return super.m_5756_() + 15 + 20;
    }
 
    public int m_5759_() {
@@ -109,7 +_,7 @@
       KeyEntry(final KeyMapping p_97451_, final Component p_97452_) {
          this.f_97445_ = p_97451_;
          this.f_97446_ = p_97452_;
-         this.f_97447_ = new Button(0, 0, 75, 20, p_97452_, (p_97479_) -> {
+         this.f_97447_ = new Button(0, 0, 75 + 20 /*Forge: add space*/, 20, p_97452_, (p_97479_) -> {
             ControlList.this.f_97396_.f_97514_ = p_97451_;
          }) {
             protected MutableComponent m_5646_() {
@@ -117,6 +_,7 @@
             }
          };
          this.f_97448_ = new Button(0, 0, 50, 20, new TranslatableComponent("controls.reset"), (p_97475_) -> {
+            f_97445_.setToDefault();
             ControlList.this.f_93386_.f_91066_.m_92159_(p_97451_, p_97451_.m_90861_());
             KeyMapping.m_90854_();
          }) {
@@ -130,7 +_,7 @@
          boolean flag = ControlList.this.f_97396_.f_97514_ == this.f_97445_;
          float f = (float)(p_97466_ + 90 - ControlList.this.f_97397_);
          ControlList.this.f_93386_.f_91062_.m_92889_(p_97463_, this.f_97446_, f, (float)(p_97465_ + p_97468_ / 2 - 9 / 2), 16777215);
-         this.f_97448_.f_93620_ = p_97466_ + 190;
+         this.f_97448_.f_93620_ = p_97466_ + 190 + 20;
          this.f_97448_.f_93621_ = p_97465_;
          this.f_97448_.f_93623_ = !this.f_97445_.m_90864_();
          this.f_97448_.m_6305_(p_97463_, p_97469_, p_97470_, p_97472_);
@@ -138,11 +_,12 @@
          this.f_97447_.f_93621_ = p_97465_;
          this.f_97447_.m_93666_(this.f_97445_.m_90863_());
          boolean flag1 = false;
+         boolean keyCodeModifierConflict = true; // less severe form of conflict, like SHIFT conflicting with SHIFT+G
          if (!this.f_97445_.m_90862_()) {
             for(KeyMapping keymapping : ControlList.this.f_93386_.f_91066_.f_92059_) {
                if (keymapping != this.f_97445_ && this.f_97445_.m_90850_(keymapping)) {
                   flag1 = true;
-                  break;
+                  keyCodeModifierConflict &= keymapping.hasKeyCodeModifierConflict(keymapping);
                }
             }
          }
@@ -150,7 +_,7 @@
          if (flag) {
             this.f_97447_.m_93666_((new TextComponent("> ")).m_7220_(this.f_97447_.m_6035_().m_6881_().m_130940_(ChatFormatting.YELLOW)).m_130946_(" <").m_130940_(ChatFormatting.YELLOW));
          } else if (flag1) {
-            this.f_97447_.m_93666_(this.f_97447_.m_6035_().m_6881_().m_130940_(ChatFormatting.RED));
+            this.f_97447_.m_93666_(this.f_97447_.m_6035_().m_6881_().m_130940_(keyCodeModifierConflict ? ChatFormatting.GOLD : ChatFormatting.RED));
          }
 
          this.f_97447_.m_6305_(p_97463_, p_97469_, p_97470_, p_97472_);
