--- a/net/minecraft/client/gui/GuiGraphics.java
+++ b/net/minecraft/client/gui/GuiGraphics.java
@@ -55,7 +_,7 @@
 import org.joml.Vector2ic;
 
 @OnlyIn(Dist.CLIENT)
-public class GuiGraphics {
+public class GuiGraphics implements net.minecraftforge.client.extensions.IForgeGuiGraphics {
    public static final float MAX_GUI_Z = 10000.0F;
    public static final float MIN_GUI_Z = -10000.0F;
    private static final int EXTRA_SPACE_AFTER_FIRST_TOOLTIP_LINE = 2;
@@ -271,6 +_,11 @@
    }
 
    public int drawString(Font p_283343_, @Nullable String p_281896_, int p_283569_, int p_283418_, int p_281560_, boolean p_282130_) {
+      return this.drawString(p_283343_, p_281896_, (float)p_283569_, (float)p_283418_, p_281560_, p_282130_);
+   }
+
+   // Forge: Add float variant for x,y coordinates
+   public int drawString(Font p_283343_, @Nullable String p_281896_, float p_283569_, float p_283418_, int p_281560_, boolean p_282130_) {
       if (p_281896_ == null) {
          return 0;
       } else {
@@ -285,6 +_,11 @@
    }
 
    public int drawString(Font p_282636_, FormattedCharSequence p_281596_, int p_281586_, int p_282816_, int p_281743_, boolean p_282394_) {
+      return this.drawString(p_282636_, p_281596_, (float)p_281586_, (float)p_282816_, p_281743_, p_282394_);
+   }
+
+   // Forge: Add float variant for x,y coordinates
+   public int drawString(Font p_282636_, FormattedCharSequence p_281596_, float p_281586_, float p_282816_, int p_281743_, boolean p_282394_) {
       int i = p_282636_.drawInBatch(p_281596_, (float)p_281586_, (float)p_282816_, p_281743_, p_282394_, this.pose.last().pose(), this.bufferSource, Font.DisplayMode.NORMAL, 0, 15728880);
       this.flushIfUnmanaged();
       return i;
@@ -511,6 +_,7 @@
             crashreportcategory.setDetail("Item Type", () -> {
                return String.valueOf((Object)p_281675_.getItem());
             });
+            crashreportcategory.setDetail("Registry Name", () -> String.valueOf(net.minecraftforge.registries.ForgeRegistries.ITEMS.getKey(p_281675_.getItem())));
             crashreportcategory.setDetail("Item Damage", () -> {
                return String.valueOf(p_281675_.getDamageValue());
             });
@@ -558,18 +_,26 @@
          }
 
          this.pose.popPose();
+         net.minecraftforge.client.ItemDecoratorHandler.of(p_283349_).render(this, p_282005_, p_283349_, p_282641_, p_282146_);
       }
    }
+
+   private ItemStack tooltipStack = ItemStack.EMPTY;
 
    public void renderTooltip(Font p_282308_, ItemStack p_282781_, int p_282687_, int p_282292_) {
+      this.tooltipStack = p_282781_;
       this.renderTooltip(p_282308_, Screen.getTooltipFromItem(this.minecraft, p_282781_), p_282781_.getTooltipImage(), p_282687_, p_282292_);
+      this.tooltipStack = ItemStack.EMPTY;
+   }
+
+   public void renderTooltip(Font font, List<Component> textComponents, Optional<TooltipComponent> tooltipComponent, ItemStack stack, int mouseX, int mouseY) {
+      this.tooltipStack = stack;
+      this.renderTooltip(font, textComponents, tooltipComponent, mouseX, mouseY);
+      this.tooltipStack = ItemStack.EMPTY;
    }
 
    public void renderTooltip(Font p_283128_, List<Component> p_282716_, Optional<TooltipComponent> p_281682_, int p_283678_, int p_281696_) {
-      List<ClientTooltipComponent> list = p_282716_.stream().map(Component::getVisualOrderText).map(ClientTooltipComponent::create).collect(Collectors.toList());
-      p_281682_.ifPresent((p_282969_) -> {
-         list.add(1, ClientTooltipComponent.create(p_282969_));
-      });
+      List<ClientTooltipComponent> list = net.minecraftforge.client.ForgeHooksClient.gatherTooltipComponents(this.tooltipStack, p_282716_, p_281682_, p_283678_, guiWidth(), guiHeight(), p_283128_);
       this.renderTooltipInternal(p_283128_, list, p_283678_, p_281696_, DefaultTooltipPositioner.INSTANCE);
    }
 
@@ -578,7 +_,15 @@
    }
 
    public void renderComponentTooltip(Font p_282739_, List<Component> p_281832_, int p_282191_, int p_282446_) {
-      this.renderTooltip(p_282739_, Lists.transform(p_281832_, Component::getVisualOrderText), p_282191_, p_282446_);
+      List<ClientTooltipComponent> components = net.minecraftforge.client.ForgeHooksClient.gatherTooltipComponents(this.tooltipStack, p_281832_, p_282191_, guiWidth(), guiHeight(), p_282739_);
+      this.renderTooltipInternal(p_282739_, components, p_282191_, p_282446_, DefaultTooltipPositioner.INSTANCE);
+   }
+
+   public void renderComponentTooltip(Font font, List<? extends net.minecraft.network.chat.FormattedText> tooltips, int mouseX, int mouseY, ItemStack stack) {
+      this.tooltipStack = stack;
+      List<ClientTooltipComponent> components = net.minecraftforge.client.ForgeHooksClient.gatherTooltipComponents(stack, tooltips, mouseX, guiWidth(), guiHeight(), font);
+      this.renderTooltipInternal(font, components, mouseX, mouseY, DefaultTooltipPositioner.INSTANCE);
+      this.tooltipStack = ItemStack.EMPTY;
    }
 
    public void renderTooltip(Font p_282192_, List<? extends FormattedCharSequence> p_282297_, int p_281680_, int p_283325_) {
@@ -591,11 +_,13 @@
 
    private void renderTooltipInternal(Font p_282675_, List<ClientTooltipComponent> p_282615_, int p_283230_, int p_283417_, ClientTooltipPositioner p_282442_) {
       if (!p_282615_.isEmpty()) {
+         net.minecraftforge.client.event.RenderTooltipEvent.Pre preEvent = net.minecraftforge.client.ForgeHooksClient.onRenderTooltipPre(this.tooltipStack, this, p_283230_, p_283417_, guiWidth(), guiHeight(), p_282615_, p_282675_, p_282442_);
+         if (preEvent.isCanceled()) return;
          int i = 0;
          int j = p_282615_.size() == 1 ? -2 : 0;
 
          for(ClientTooltipComponent clienttooltipcomponent : p_282615_) {
-            int k = clienttooltipcomponent.getWidth(p_282675_);
+            int k = clienttooltipcomponent.getWidth(preEvent.getFont());
             if (k > i) {
                i = k;
             }
@@ -605,20 +_,21 @@
 
          int i2 = i;
          int j2 = j;
-         Vector2ic vector2ic = p_282442_.positionTooltip(this.guiWidth(), this.guiHeight(), p_283230_, p_283417_, i2, j2);
+         Vector2ic vector2ic = p_282442_.positionTooltip(this.guiWidth(), this.guiHeight(), preEvent.getX(), preEvent.getY(), i2, j2);
          int l = vector2ic.x();
          int i1 = vector2ic.y();
          this.pose.pushPose();
          int j1 = 400;
          this.drawManaged(() -> {
-            TooltipRenderUtil.renderTooltipBackground(this, l, i1, i2, j2, 400);
+            net.minecraftforge.client.event.RenderTooltipEvent.Color colorEvent = net.minecraftforge.client.ForgeHooksClient.onRenderTooltipColor(this.tooltipStack, this, l, i1, preEvent.getFont(), p_282615_);
+            TooltipRenderUtil.renderTooltipBackground(this, l, i1, i2, j2, 400, colorEvent.getBackgroundStart(), colorEvent.getBackgroundEnd(), colorEvent.getBorderStart(), colorEvent.getBorderEnd());
          });
          this.pose.translate(0.0F, 0.0F, 400.0F);
          int k1 = i1;
 
          for(int l1 = 0; l1 < p_282615_.size(); ++l1) {
             ClientTooltipComponent clienttooltipcomponent1 = p_282615_.get(l1);
-            clienttooltipcomponent1.renderText(p_282675_, l, k1, this.pose.last().pose(), this.bufferSource);
+            clienttooltipcomponent1.renderText(preEvent.getFont(), l, k1, this.pose.last().pose(), this.bufferSource);
             k1 += clienttooltipcomponent1.getHeight() + (l1 == 0 ? 2 : 0);
          }
 
@@ -626,7 +_,7 @@
 
          for(int k2 = 0; k2 < p_282615_.size(); ++k2) {
             ClientTooltipComponent clienttooltipcomponent2 = p_282615_.get(k2);
-            clienttooltipcomponent2.renderImage(p_282675_, l, k1, this);
+            clienttooltipcomponent2.renderImage(preEvent.getFont(), l, k1, this);
             k1 += clienttooltipcomponent2.getHeight() + (k2 == 0 ? 2 : 0);
          }
 
