--- a/net/minecraft/gametest/framework/GameTestRegistry.java
+++ b/net/minecraft/gametest/framework/GameTestRegistry.java
@@ -25,21 +_,33 @@
    private static final Map<String, Consumer<ServerLevel>> f_177498_ = Maps.newHashMap();
    private static final Collection<TestFunction> f_177499_ = Sets.newHashSet();
 
+   /** @deprecated Forge: Use {@link net.minecraftforge.event.RegisterGameTestsEvent RegisterGameTestsEvent} to register game tests */
+   @Deprecated
    public static void m_177501_(Class<?> p_177502_) {
       Arrays.stream(p_177502_.getDeclaredMethods()).forEach(GameTestRegistry::m_177503_);
    }
 
+   /** @deprecated Forge: Use {@link net.minecraftforge.event.RegisterGameTestsEvent RegisterGameTestsEvent} to register game tests */
+   @Deprecated
    public static void m_177503_(Method p_177504_) {
+       register(p_177504_, java.util.Set.of());
+   }
+   /** @deprecated Forge: Use {@link net.minecraftforge.event.RegisterGameTestsEvent RegisterGameTestsEvent} to register game tests */
+   @Deprecated
+   public static void register(Method p_177504_, java.util.Set<String> allowedNamespaces) {
       String s = p_177504_.getDeclaringClass().getSimpleName();
       GameTest gametest = p_177504_.getAnnotation(GameTest.class);
-      if (gametest != null) {
+      if (gametest != null && (allowedNamespaces.isEmpty() || allowedNamespaces.contains(net.minecraftforge.gametest.ForgeGameTestHooks.getTemplateNamespace(p_177504_)))) {
          f_177495_.add(m_177515_(p_177504_));
          f_177496_.add(s);
       }
 
       GameTestGenerator gametestgenerator = p_177504_.getAnnotation(GameTestGenerator.class);
       if (gametestgenerator != null) {
-         f_177495_.addAll(m_177513_(p_177504_));
+         Collection<TestFunction> testFunctions = new java.util.ArrayList<>(m_177513_(p_177504_));
+         if (!allowedNamespaces.isEmpty())
+             testFunctions.removeIf(t -> !allowedNamespaces.contains(new net.minecraft.resources.ResourceLocation(t.m_128078_()).m_135827_()));
+         f_177495_.addAll(testFunctions);
          f_177496_.add(s);
       }
 
@@ -104,7 +_,9 @@
 
    private static Collection<TestFunction> m_177513_(Method p_177514_) {
       try {
-         Object object = p_177514_.getDeclaringClass().newInstance();
+         Object object = null;
+         if (!java.lang.reflect.Modifier.isStatic(p_177514_.getModifiers()))
+             object = p_177514_.getDeclaringClass().newInstance();
          return (Collection)p_177514_.invoke(object);
       } catch (ReflectiveOperationException reflectiveoperationexception) {
          throw new RuntimeException(reflectiveoperationexception);
@@ -115,8 +_,9 @@
       GameTest gametest = p_177516_.getAnnotation(GameTest.class);
       String s = p_177516_.getDeclaringClass().getSimpleName();
       String s1 = s.toLowerCase();
-      String s2 = s1 + "." + p_177516_.getName().toLowerCase();
-      String s3 = gametest.m_177046_().isEmpty() ? s2 : s1 + "." + gametest.m_177046_();
+      boolean prefixGameTestTemplate = net.minecraftforge.gametest.ForgeGameTestHooks.prefixGameTestTemplate(p_177516_);
+      String s2 = (prefixGameTestTemplate ? s1 + "." : "") + p_177516_.getName().toLowerCase();
+      String s3 = net.minecraftforge.gametest.ForgeGameTestHooks.getTemplateNamespace(p_177516_) + ":" + (gametest.m_177046_().isEmpty() ? s2 : (prefixGameTestTemplate ? s1 + "." : "") + gametest.m_177046_());
       String s4 = gametest.m_177043_();
       Rotation rotation = StructureUtils.m_127835_(gametest.m_177044_());
       return new TestFunction(s4, s2, s3, rotation, gametest.m_177042_(), gametest.m_177047_(), gametest.m_177045_(), gametest.m_177049_(), gametest.m_177048_(), (Consumer<net.minecraft.gametest.framework.GameTestHelper>)m_177519_(p_177516_));
@@ -125,7 +_,9 @@
    private static Consumer<?> m_177519_(Method p_177520_) {
       return (p_177512_) -> {
          try {
-            Object object = p_177520_.getDeclaringClass().newInstance();
+            Object object = null;
+            if (!java.lang.reflect.Modifier.isStatic(p_177520_.getModifiers()))
+                object = p_177520_.getDeclaringClass().newInstance();
             p_177520_.invoke(object, p_177512_);
          } catch (InvocationTargetException invocationtargetexception) {
             if (invocationtargetexception.getCause() instanceof RuntimeException) {
