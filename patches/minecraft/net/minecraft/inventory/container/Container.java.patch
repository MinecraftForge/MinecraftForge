--- a/net/minecraft/inventory/container/Container.java
+++ b/net/minecraft/inventory/container/Container.java
@@ -120,9 +_,11 @@
          ItemStack itemstack = this.slots.get(i).getItem();
          ItemStack itemstack1 = this.lastSlots.get(i);
          if (!ItemStack.matches(itemstack1, itemstack)) {
+            boolean clientStackChanged = !itemstack1.equals(itemstack, true);
             ItemStack itemstack2 = itemstack.copy();
             this.lastSlots.set(i, itemstack2);
 
+            if (clientStackChanged)
             for(IContainerListener icontainerlistener : this.containerListeners) {
                icontainerlistener.slotChanged(this, i, itemstack2);
             }
@@ -500,14 +_,15 @@
             ItemStack itemstack = slot.getItem();
             if (!itemstack.isEmpty() && consideredTheSameItem(p_75135_1_, itemstack)) {
                int j = itemstack.getCount() + p_75135_1_.getCount();
-               if (j <= p_75135_1_.getMaxStackSize()) {
+               int maxSize = Math.min(slot.getMaxStackSize(), p_75135_1_.getMaxStackSize());
+               if (j <= maxSize) {
                   p_75135_1_.setCount(0);
                   itemstack.setCount(j);
                   slot.setChanged();
                   flag = true;
-               } else if (itemstack.getCount() < p_75135_1_.getMaxStackSize()) {
-                  p_75135_1_.shrink(p_75135_1_.getMaxStackSize() - itemstack.getCount());
-                  itemstack.setCount(p_75135_1_.getMaxStackSize());
+               } else if (itemstack.getCount() < maxSize) {
+                  p_75135_1_.shrink(maxSize - itemstack.getCount());
+                  itemstack.setCount(maxSize);
                   slot.setChanged();
                   flag = true;
                }
@@ -608,7 +_,7 @@
          p_94525_2_.setCount(1);
          break;
       case 2:
-         p_94525_2_.setCount(p_94525_2_.getItem().getMaxStackSize());
+         p_94525_2_.setCount(p_94525_2_.getMaxStackSize());
       }
 
       p_94525_2_.grow(p_94525_3_);
