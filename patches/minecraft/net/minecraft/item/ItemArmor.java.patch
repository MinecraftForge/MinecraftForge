--- ../src-base/minecraft/net/minecraft/item/ItemArmor.java
+++ ../src-work/minecraft/net/minecraft/item/ItemArmor.java
@@ -187,7 +187,9 @@
 
     public boolean func_82789_a(ItemStack p_82789_1_, ItemStack p_82789_2_)
     {
-        return this.field_77878_bZ.func_151685_b() == p_82789_2_.func_77973_b() ? true : super.func_82789_a(p_82789_1_, p_82789_2_);
+        ItemStack mat = this.field_77878_bZ.getRepairItemStack();
+        if (!mat.func_190926_b() && net.minecraftforge.oredict.OreDictionary.itemMatches(mat,p_82789_2_,false)) return true;
+        return super.func_82789_a(p_82789_1_, p_82789_2_);
     }
 
     public ActionResult<ItemStack> func_77659_a(World p_77659_1_, EntityPlayer p_77659_2_, EnumHand p_77659_3_)
@@ -235,6 +237,8 @@
         private final int field_78055_h;
         private final SoundEvent field_185020_j;
         private final float field_189417_k;
+        //Added by forge for custom Armor materials.
+        public ItemStack repairMaterial = ItemStack.field_190927_a;
 
         private ArmorMaterial(String p_i47117_3_, int p_i47117_4_, int[] p_i47117_5_, int p_i47117_6_, SoundEvent p_i47117_7_, float p_i47117_8_)
         {
@@ -266,6 +270,7 @@
             return this.field_185020_j;
         }
 
+        @Deprecated // Use getRepairItemStack below
         public Item func_151685_b()
         {
             return this == LEATHER ? Items.field_151116_aA : (this == CHAIN ? Items.field_151042_j : (this == GOLD ? Items.field_151043_k : (this == IRON ? Items.field_151042_j : (this == DIAMOND ? Items.field_151045_i : null))));
@@ -281,5 +286,122 @@
         {
             return this.field_189417_k;
         }
+
+    /* ======================================== FORGE START =====================================*/
+
+        public ArmorMaterial setRepairItem(ItemStack stack)
+        {
+            if (!this.repairMaterial.func_190926_b()) throw new RuntimeException("Repair material has already been set");
+            if (this == LEATHER || this == CHAIN || this == GOLD || this == IRON || this == DIAMOND) throw new RuntimeException("Can not change vanilla armor repair materials");
+            this.repairMaterial = stack;
+            return this;
+        }
+
+        public ItemStack getRepairItemStack()
+        {
+            if (!repairMaterial.func_190926_b()) return repairMaterial;
+            Item ret = this.func_151685_b();
+            if (ret != null) repairMaterial = new ItemStack(ret,1,net.minecraftforge.oredict.OreDictionary.WILDCARD_VALUE);
+            return repairMaterial;
+        }
     }
+    /**
+     * Determines if this armor will be rendered with the secondary 'overlay' texture.
+     * If this is true, the first texture will be rendered using a tint of the color
+     * specified by getColor(ItemStack)
+     *
+     * @param stack The stack
+     * @return true/false
+     */
+    public boolean hasOverlay(ItemStack stack)
+    {
+        return this.field_77878_bZ == ItemArmor.ArmorMaterial.LEATHER || func_82814_b(stack) != 0x00FFFFFF;
+    }
+
+    /**
+     * Holds onto either a pointer to IArmorOverlayHandler.VANILLA, or a wrapper if IArmorOverlayHandlers are subscribed
+     * */
+    private net.minecraftforge.client.overlay.IArmorOverlayHandler overlayHandler = net.minecraftforge.client.overlay.IArmorOverlayHandler.VANILLA;
+
+    /**
+     * Holds onto either a pointer to IArmorOverlayColor.VANILLA, or a wrapper if IArmorOverlayColors are subscribed
+     * */
+    private net.minecraftforge.client.overlay.IArmorOverlayColor overlayColor = net.minecraftforge.client.overlay.IArmorOverlayColor.VANILLA;
+
+    /**
+     * Returns the IArmorOverlayHandler for the ItemStack's effect overlay.
+     * */
+    @javax.annotation.Nonnull
+    public final net.minecraftforge.client.overlay.IArmorOverlayHandler getArmorOverlayHandler()
+    {
+        return overlayHandler;
+    }
+
+    /**
+     * Returns the IArmorOverlayColor for the ItemStack's effect overlay.
+     * */
+    @javax.annotation.Nonnull
+    public final net.minecraftforge.client.overlay.IArmorOverlayColor getArmorOverlayColor()
+    {
+        return overlayColor;
+    }
+
+    /**
+     * Adds an IArmorOverlay handler to the list of subscribers. Note that this works as first come, first serve.
+     * */
+    public final void subscribeArmorOverlayHandler(net.minecraftforge.client.overlay.IArmorOverlayHandler toSubscribe)
+    {
+        if(overlayHandler instanceof net.minecraftforge.client.overlay.IArmorOverlayHandler.SubscriptionWrapper)
+        {
+            if (toSubscribe instanceof net.minecraftforge.client.overlay.IArmorOverlayHandler.SubscriptionWrapper)
+            {
+                net.minecraftforge.fml.common.FMLLog.bigWarning("Attempted to subscribe an ArmorOverlayHandler subscription wrapper when one already existed! Skipping.");
+            }
+            else
+            {
+                ((net.minecraftforge.client.overlay.IArmorOverlayHandler.SubscriptionWrapper) overlayHandler).addSubscription(toSubscribe);
+            }
+        }
+        else
+        {
+            if (toSubscribe instanceof net.minecraftforge.client.overlay.IArmorOverlayHandler.SubscriptionWrapper)
+            {   //Should only happen on substitution
+                overlayHandler = toSubscribe;
+            }
+            else
+            {
+                overlayHandler = new net.minecraftforge.client.overlay.IArmorOverlayHandler.SubscriptionWrapper(toSubscribe);
+            }
+        }
+    }
+
+    /**
+     * Adds an IArmorOverlay handler to the list of subscribers. Note that this works as first come, first serve.
+     * */
+    public final void subscribeArmorOverlayColor(net.minecraftforge.client.overlay.IArmorOverlayColor toSubscribe)
+    {
+        if(overlayColor instanceof net.minecraftforge.client.overlay.IArmorOverlayColor.SubscriptionWrapper)
+        {
+            if (toSubscribe instanceof net.minecraftforge.client.overlay.IArmorOverlayColor.SubscriptionWrapper)
+            {
+                net.minecraftforge.fml.common.FMLLog.bigWarning("Attempted to subscribe an ArmorOverlayColor subscription wrapper when one already existed! Skipping.");
+            }
+            else
+            {
+                ((net.minecraftforge.client.overlay.IArmorOverlayColor.SubscriptionWrapper) overlayColor).addSubscription(toSubscribe);
+            }
+        }
+        else
+        {
+            if (toSubscribe instanceof net.minecraftforge.client.overlay.IArmorOverlayColor.SubscriptionWrapper)
+            {   //Should only happen on substitution
+                overlayColor = toSubscribe;
+            }
+            else
+            {
+                overlayColor = new net.minecraftforge.client.overlay.IArmorOverlayColor.SubscriptionWrapper(toSubscribe);
+            }
+        }
+    }
+    /* ======================================== FORGE END   =====================================*/
 }
