--- ../src_base/minecraft/net/minecraft/item/ItemBow.java
+++ ../src_work/minecraft/net/minecraft/item/ItemBow.java
@@ -10,6 +10,10 @@
 import net.minecraft.entity.projectile.EntityArrow;
 import net.minecraft.util.Icon;
 import net.minecraft.world.World;
+
+import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.event.entity.player.ArrowLooseEvent;
+import net.minecraftforge.event.entity.player.ArrowNockEvent;
 
 public class ItemBow extends Item
 {
@@ -30,11 +34,22 @@
      */
     public void onPlayerStoppedUsing(ItemStack par1ItemStack, World par2World, EntityPlayer par3EntityPlayer, int par4)
     {
+        int j = this.getMaxItemUseDuration(par1ItemStack) - par4;
+
+        { // MCPC+ - scope
+        ArrowLooseEvent event = new ArrowLooseEvent(par3EntityPlayer, par1ItemStack, j);
+        MinecraftForge.EVENT_BUS.post(event);
+        if (event.isCanceled())
+        {
+            return;
+        }
+        j = event.charge;
+        } // MCPC+
+
         boolean flag = par3EntityPlayer.capabilities.isCreativeMode || EnchantmentHelper.getEnchantmentLevel(Enchantment.infinity.effectId, par1ItemStack) > 0;
 
         if (flag || par3EntityPlayer.inventory.hasItem(Item.arrow.itemID))
         {
-            int j = this.getMaxItemUseDuration(par1ItemStack) - par4;
             float f = (float)j / 20.0F;
             f = (f * f + f * 2.0F) / 3.0F;
 
@@ -74,6 +89,21 @@
                 entityarrow.setFire(100);
             }
 
+            // CraftBukkit start
+            org.bukkit.event.entity.EntityShootBowEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callEntityShootBowEvent(par3EntityPlayer, par1ItemStack, entityarrow, f);
+
+            if (event.isCancelled())
+            {
+                event.getProjectile().remove();
+                return;
+            }
+
+            if (event.getProjectile() == entityarrow.getBukkitEntity())
+            {
+                par2World.spawnEntityInWorld(entityarrow);
+            }
+
+            // CraftBukkit end
             par1ItemStack.damageItem(1, par3EntityPlayer);
             par2World.playSoundAtEntity(par3EntityPlayer, "random.bow", 1.0F, 1.0F / (itemRand.nextFloat() * 0.4F + 1.2F) + f * 0.5F);
 
@@ -86,10 +116,7 @@
                 par3EntityPlayer.inventory.consumeInventoryItem(Item.arrow.itemID);
             }
 
-            if (!par2World.isRemote)
-            {
-                par2World.spawnEntityInWorld(entityarrow);
-            }
+            // CraftBukkit - moved addEntity up
         }
     }
 
@@ -119,6 +146,13 @@
      */
     public ItemStack onItemRightClick(ItemStack par1ItemStack, World par2World, EntityPlayer par3EntityPlayer)
     {
+        ArrowNockEvent event = new ArrowNockEvent(par3EntityPlayer, par1ItemStack);
+        MinecraftForge.EVENT_BUS.post(event);
+        if (event.isCanceled())
+        {
+            return event.result;
+        }
+
         if (par3EntityPlayer.capabilities.isCreativeMode || par3EntityPlayer.inventory.hasItem(Item.arrow.itemID))
         {
             par3EntityPlayer.setItemInUse(par1ItemStack, this.getMaxItemUseDuration(par1ItemStack));
@@ -138,12 +172,12 @@
     @SideOnly(Side.CLIENT)
     public void registerIcons(IconRegister par1IconRegister)
     {
-        this.itemIcon = par1IconRegister.registerIcon(this.func_111208_A() + "_standby");
+        this.itemIcon = par1IconRegister.registerIcon(this.getIconString() + "_standby");
         this.iconArray = new Icon[bowPullIconNameArray.length];
 
         for (int i = 0; i < this.iconArray.length; ++i)
         {
-            this.iconArray[i] = par1IconRegister.registerIcon(this.func_111208_A() + "_" + bowPullIconNameArray[i]);
+            this.iconArray[i] = par1IconRegister.registerIcon(this.getIconString() + "_" + bowPullIconNameArray[i]);
         }
     }
 
