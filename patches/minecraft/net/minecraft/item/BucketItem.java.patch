--- a/net/minecraft/item/BucketItem.java
+++ b/net/minecraft/item/BucketItem.java
@@ -32,14 +_,28 @@
 public class BucketItem extends Item {
    private final Fluid content;
 
+   // Forge: Use the other constructor that takes a Supplier
+   @Deprecated
    public BucketItem(Fluid p_i49025_1_, Item.Properties p_i49025_2_) {
       super(p_i49025_2_);
       this.content = p_i49025_1_;
+      this.fluidSupplier = p_i49025_1_.delegate;
+   }
+
+   /**
+    * @param supplier A fluid supplier such as {@link net.minecraftforge.fml.RegistryObject<Fluid>}
+    */
+   public BucketItem(java.util.function.Supplier<? extends Fluid> supplier, Item.Properties builder) {
+      super(builder);
+      this.content = null;
+      this.fluidSupplier = supplier;
    }
 
    public ActionResult<ItemStack> use(World p_77659_1_, PlayerEntity p_77659_2_, Hand p_77659_3_) {
       ItemStack itemstack = p_77659_2_.getItemInHand(p_77659_3_);
       RayTraceResult raytraceresult = getPlayerPOVHitResult(p_77659_1_, p_77659_2_, this.content == Fluids.EMPTY ? RayTraceContext.FluidMode.SOURCE_ONLY : RayTraceContext.FluidMode.NONE);
+      ActionResult<ItemStack> ret = net.minecraftforge.event.ForgeEventFactory.onBucketUse(p_77659_2_, p_77659_1_, itemstack, raytraceresult);
+      if (ret != null) return ret;
       if (raytraceresult.getType() == RayTraceResult.Type.MISS) {
          return ActionResult.pass(itemstack);
       } else if (raytraceresult.getType() != RayTraceResult.Type.BLOCK) {
@@ -56,7 +_,10 @@
                   Fluid fluid = ((IBucketPickupHandler)blockstate1.getBlock()).takeLiquid(p_77659_1_, blockpos, blockstate1);
                   if (fluid != Fluids.EMPTY) {
                      p_77659_2_.awardStat(Stats.ITEM_USED.get(this));
-                     p_77659_2_.playSound(fluid.is(FluidTags.LAVA) ? SoundEvents.BUCKET_FILL_LAVA : SoundEvents.BUCKET_FILL, 1.0F, 1.0F);
+
+                     SoundEvent soundevent = this.content.getAttributes().getFillSound();
+                     if (soundevent == null) soundevent = fluid.is(FluidTags.LAVA) ? SoundEvents.BUCKET_FILL_LAVA : SoundEvents.BUCKET_FILL;
+                     p_77659_2_.playSound(soundevent, 1.0F, 1.0F);
                      ItemStack itemstack1 = DrinkHelper.createFilledResult(itemstack, p_77659_2_, new ItemStack(fluid.getBucket()));
                      if (!p_77659_1_.isClientSide) {
                         CriteriaTriggers.FILLED_BUCKET.trigger((ServerPlayerEntity)p_77659_2_, new ItemStack(fluid.getBucket()));
@@ -69,7 +_,7 @@
                return ActionResult.fail(itemstack);
             } else {
                BlockState blockstate = p_77659_1_.getBlockState(blockpos);
-               BlockPos blockpos2 = blockstate.getBlock() instanceof ILiquidContainer && this.content == Fluids.WATER ? blockpos : blockpos1;
+               BlockPos blockpos2 = canBlockContainFluid(p_77659_1_, blockpos, blockstate) ? blockpos : blockpos1;
                if (this.emptyBucket(p_77659_2_, p_77659_1_, blockpos2, blockraytraceresult)) {
                   this.checkExtraContent(p_77659_1_, itemstack, blockpos2);
                   if (p_77659_2_ instanceof ServerPlayerEntity) {
@@ -117,7 +_,7 @@
             }
 
             return true;
-         } else if (block instanceof ILiquidContainer && this.content == Fluids.WATER) {
+         } else if (block instanceof ILiquidContainer && ((ILiquidContainer)block).canPlaceLiquid(p_180616_2_,p_180616_3_,blockstate,content)) {
             ((ILiquidContainer)block).placeLiquid(p_180616_2_, p_180616_3_, blockstate, ((FlowingFluid)this.content).getSource(false));
             this.playEmptySound(p_180616_1_, p_180616_2_, p_180616_3_);
             return true;
@@ -137,7 +_,24 @@
    }
 
    protected void playEmptySound(@Nullable PlayerEntity p_203791_1_, IWorld p_203791_2_, BlockPos p_203791_3_) {
-      SoundEvent soundevent = this.content.is(FluidTags.LAVA) ? SoundEvents.BUCKET_EMPTY_LAVA : SoundEvents.BUCKET_EMPTY;
+      SoundEvent soundevent = this.content.getAttributes().getEmptySound();
+      if(soundevent == null) soundevent = this.content.is(FluidTags.LAVA) ? SoundEvents.BUCKET_EMPTY_LAVA : SoundEvents.BUCKET_EMPTY;
       p_203791_2_.playSound(p_203791_1_, p_203791_3_, soundevent, SoundCategory.BLOCKS, 1.0F, 1.0F);
+   }
+
+   @Override
+   public net.minecraftforge.common.capabilities.ICapabilityProvider initCapabilities(ItemStack stack, @Nullable net.minecraft.nbt.CompoundNBT nbt) {
+      if (this.getClass() == BucketItem.class)
+         return new net.minecraftforge.fluids.capability.wrappers.FluidBucketWrapper(stack);
+      else
+         return super.initCapabilities(stack, nbt);
+   }
+
+   private final java.util.function.Supplier<? extends Fluid> fluidSupplier;
+   public Fluid getFluid() { return fluidSupplier.get(); }
+
+   private boolean canBlockContainFluid(World worldIn, BlockPos posIn, BlockState blockstate)
+   {
+      return blockstate.getBlock() instanceof ILiquidContainer && ((ILiquidContainer)blockstate.getBlock()).canPlaceLiquid(worldIn, posIn, blockstate, this.content);
    }
 }
