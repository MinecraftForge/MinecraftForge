--- ../src-base/minecraft/net/minecraft/item/crafting/ShapedRecipes.java
+++ ../src-work/minecraft/net/minecraft/item/crafting/ShapedRecipes.java
@@ -19,10 +19,8 @@
 import net.minecraft.util.NonNullList;
 import net.minecraft.util.ResourceLocation;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class ShapedRecipes implements IRecipe
+public class ShapedRecipes extends net.minecraftforge.registries.IForgeRegistryEntry.Impl<IRecipe> implements IRecipe
 {
     public final int field_77576_b;
     public final int field_77577_c;
@@ -39,7 +37,6 @@
         this.field_77575_e = p_i47501_5_;
     }
 
-    @SideOnly(Side.CLIENT)
     public String func_193358_e()
     {
         return this.field_194137_e;
@@ -57,23 +54,17 @@
         for (int i = 0; i < nonnulllist.size(); ++i)
         {
             ItemStack itemstack = p_179532_1_.func_70301_a(i);
-
-            if (itemstack.func_77973_b().func_77634_r())
-            {
-                nonnulllist.set(i, new ItemStack(itemstack.func_77973_b().func_77668_q()));
-            }
+            nonnulllist.set(i, net.minecraftforge.common.ForgeHooks.getContainerItem(itemstack));
         }
 
         return nonnulllist;
     }
 
-    @SideOnly(Side.CLIENT)
     public NonNullList<Ingredient> func_192400_c()
     {
         return this.field_77574_d;
     }
 
-    @SideOnly(Side.CLIENT)
     public boolean func_194133_a(int p_194133_1_, int p_194133_2_)
     {
         return p_194133_1_ >= this.field_77576_b && p_194133_2_ >= this.field_77577_c;
@@ -241,13 +232,11 @@
         return i;
     }
 
-    @SideOnly(Side.CLIENT)
     public int func_192403_f()
     {
         return this.field_77576_b;
     }
 
-    @SideOnly(Side.CLIENT)
     public int func_192404_g()
     {
         return this.field_77577_c;
@@ -382,4 +371,60 @@
             return new ItemStack(item, j, i);
         }
     }
+
+    /* ======================================== FORGE START =====================================*/
+    public JsonObject toJson()
+    {
+        JsonObject json = new JsonObject();
+        json.addProperty("type", "minecraft:crafting_shaped");
+        json.addProperty("group", this.func_193358_e());
+        char[][] rows = new char[this.field_77577_c][this.field_77576_b];
+        int x = 0;
+        int y = 0;
+        Map<Ingredient, Character> ingredients = Maps.newHashMap();
+        JsonObject key = new JsonObject();
+        char c = Character.MIN_VALUE;
+        for (Ingredient ingredient : this.field_77574_d)
+        {
+            if (ingredient.func_193365_a().length > 0)
+            {
+                if (c == ' ')
+                    c++;
+                char k = c;
+                ingredients.computeIfAbsent(ingredient, (ing) -> 
+                {
+                    key.add(String.valueOf(k), ingredient.toJson());
+                    return k;
+                });
+                c++;
+            }
+            rows[y][x++] = ingredient.func_193365_a().length > 0 ? ingredients.get(ingredient) : ' ';
+            if (x == this.field_77576_b)
+            {
+                y++;
+                x = 0;
+            }
+        }
+        JsonArray pattern = new JsonArray();
+        for (char[] row : rows)
+            pattern.add(String.copyValueOf(row));
+        json.add("pattern", pattern);
+        json.add("key", key);
+        JsonObject result = new JsonObject();
+        ItemStack output = this.func_77571_b();
+        result.addProperty("item", output.func_77973_b().getRegistryName().toString());
+        net.minecraft.nbt.NBTTagCompound tmp = new net.minecraft.nbt.NBTTagCompound();
+        output.func_77955_b(tmp);
+        result.addProperty("count", tmp.func_74771_c("Count"));
+        result.addProperty("data", tmp.func_74771_c("Damage"));
+        net.minecraft.nbt.NBTTagCompound compound = tmp.func_74764_b("tag") ? tmp.func_74775_l("tag") : new net.minecraft.nbt.NBTTagCompound();
+        if (tmp.func_74764_b("ForgeCaps"))
+            compound.func_74782_a("ForgeCaps", tmp.func_74775_l("ForgeCaps"));
+        if (compound.func_186856_d() > 0)
+            result.add("nbt", net.minecraftforge.common.crafting.CraftingHelper.getJsonFromTagCompound(compound));
+        json.add("result", result);
+        return json;
+    }
+
+    /* ======================================== FORGE END =====================================*/
 }
