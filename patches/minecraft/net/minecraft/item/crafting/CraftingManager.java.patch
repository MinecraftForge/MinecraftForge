--- ../src_base/minecraft/net/minecraft/item/crafting/CraftingManager.java
+++ ../src_work/minecraft/net/minecraft/item/crafting/CraftingManager.java
@@ -5,10 +5,14 @@
 import java.util.HashMap;
 import java.util.List;
 import net.minecraft.block.Block;
+import net.minecraft.entity.Entity;
 import net.minecraft.inventory.InventoryCrafting;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
 import net.minecraft.world.World;
+import net.minecraftforge.common.ForgeHooks;
+import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.event.entity.item.ItemCraftMatchEvent;
 
 public class CraftingManager
 {
@@ -210,7 +214,13 @@
         return var17;
     }
 
+    @Deprecated
     public void addShapelessRecipe(ItemStack par1ItemStack, Object ... par2ArrayOfObj)
+    {
+        addShapelessRecipe(par1ItemStack, par2ArrayOfObj);
+    }
+
+    public ShapelessRecipes addAndGetShapelessRecipe(ItemStack par1ItemStack, Object ... par2ArrayOfObj)
     {
         ArrayList var3 = new ArrayList();
         Object[] var4 = par2ArrayOfObj;
@@ -239,10 +249,18 @@
             }
         }
 
-        this.recipes.add(new ShapelessRecipes(par1ItemStack, var3));
-    }
-
+        ShapelessRecipes recipe = new ShapelessRecipes(par1ItemStack, var3);
+        this.recipes.add(recipe);
+        return recipe;
+    }
+
+    @Deprecated
     public ItemStack findMatchingRecipe(InventoryCrafting par1InventoryCrafting, World par2World)
+    {
+        return findMatchingRecipe(null, par1InventoryCrafting, par2World, 0, 0, 0);
+    }
+
+    public ItemStack findMatchingRecipe(Entity crafter, InventoryCrafting par1InventoryCrafting, World par2World, int x, int y, int z)
     {
         int var3 = 0;
         ItemStack var4 = null;
@@ -269,7 +287,7 @@
             }
         }
 
-        if (var3 == 2 && var4.itemID == var5.itemID && var4.stackSize == 1 && var5.stackSize == 1 && Item.itemsList[var4.itemID].isDamageable())
+        if (var3 == 2 && var4.itemID == var5.itemID && var4.stackSize == 1 && var5.stackSize == 1 && Item.itemsList[var4.itemID].isRepairable())
         {
             Item var11 = Item.itemsList[var4.itemID];
             int var13 = var11.getMaxDamage() - var4.getItemDamageForDisplay();
@@ -292,7 +310,14 @@
 
                 if (var12.matches(par1InventoryCrafting, par2World))
                 {
-                    return var12.getCraftingResult(par1InventoryCrafting);
+                    if (!ForgeHooks.canCraft(var12, par1InventoryCrafting, crafter, par2World, x, y, z))
+                        return null;
+
+                    ItemCraftMatchEvent event = new ItemCraftMatchEvent(crafter, var12, var12.getCraftingResult(par1InventoryCrafting), par2World, x, y, z);
+                    if (MinecraftForge.EVENT_BUS.post(event))
+                        return null;
+
+                    return event.newResult;
                 }
             }
 
