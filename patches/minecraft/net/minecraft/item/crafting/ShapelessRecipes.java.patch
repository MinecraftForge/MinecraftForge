--- ../src-base/minecraft/net/minecraft/item/crafting/ShapelessRecipes.java
+++ ../src-work/minecraft/net/minecraft/item/crafting/ShapelessRecipes.java
@@ -10,10 +10,8 @@
 import net.minecraft.util.JsonUtils;
 import net.minecraft.util.NonNullList;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class ShapelessRecipes implements IRecipe
+public class ShapelessRecipes extends net.minecraftforge.registries.IForgeRegistryEntry.Impl<IRecipe> implements IRecipe
 {
     private final ItemStack field_77580_a;
     public final NonNullList<Ingredient> field_77579_b;
@@ -26,7 +24,6 @@
         this.field_77579_b = p_i47500_3_;
     }
 
-    @SideOnly(Side.CLIENT)
     public String func_193358_e()
     {
         return this.field_194138_c;
@@ -44,17 +41,12 @@
         for (int i = 0; i < nonnulllist.size(); ++i)
         {
             ItemStack itemstack = p_179532_1_.func_70301_a(i);
-
-            if (itemstack.func_77973_b().func_77634_r())
-            {
-                nonnulllist.set(i, new ItemStack(itemstack.func_77973_b().func_77668_q()));
-            }
+            nonnulllist.set(i, net.minecraftforge.common.ForgeHooks.getContainerItem(itemstack));
         }
 
         return nonnulllist;
     }
 
-    @SideOnly(Side.CLIENT)
     public NonNullList<Ingredient> func_192400_c()
     {
         return this.field_77579_b;
@@ -137,9 +129,36 @@
         return nonnulllist;
     }
 
-    @SideOnly(Side.CLIENT)
     public boolean func_194133_a(int p_194133_1_, int p_194133_2_)
     {
         return p_194133_1_ * p_194133_2_ >= this.field_77579_b.size();
     }
+
+    /* ======================================== FORGE START =====================================*/
+    public JsonObject toJson()
+    {
+        JsonObject json = new JsonObject();
+        json.addProperty("type", "minecraft:crafting_shapeless");
+        json.addProperty("group", this.func_193358_e());
+        JsonArray ingredients = new JsonArray();
+        for (Ingredient ingredient : this.field_77579_b)
+            ingredients.add(ingredient.toJson());
+        json.add("ingredients", ingredients);
+        JsonObject result = new JsonObject();
+        ItemStack output = this.func_77571_b();
+        result.addProperty("item", output.func_77973_b().getRegistryName().toString());
+        net.minecraft.nbt.NBTTagCompound tmp = new net.minecraft.nbt.NBTTagCompound();
+        output.func_77955_b(tmp);
+        result.addProperty("count", tmp.func_74771_c("Count"));
+        result.addProperty("data", tmp.func_74771_c("Damage"));
+        net.minecraft.nbt.NBTTagCompound compound = tmp.func_74764_b("tag") ? tmp.func_74775_l("tag") : new net.minecraft.nbt.NBTTagCompound();
+        if (tmp.func_74764_b("ForgeCaps"))
+            compound.func_74782_a("ForgeCaps", tmp.func_74775_l("ForgeCaps"));
+        if (compound.func_186856_d() > 0)
+            result.add("nbt", net.minecraftforge.common.crafting.CraftingHelper.getJsonFromTagCompound(compound));
+        json.add("result", result);
+        return json;
+    }
+
+    /* ======================================== FORGE END =====================================*/
 }
