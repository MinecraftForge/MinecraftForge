--- a/net/minecraft/item/ItemStack.java
+++ b/net/minecraft/item/ItemStack.java
@@ -72,7 +_,7 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public final class ItemStack {
+public final class ItemStack extends net.minecraftforge.common.capabilities.CapabilityProvider<ItemStack> implements net.minecraftforge.common.extensions.IForgeItemStack {
    public static final Codec<ItemStack> CODEC = RecordCodecBuilder.create((p_234698_0_) -> {
       return p_234698_0_.group(Registry.ITEM.fieldOf("id").forGetter((p_234706_0_) -> {
          return p_234706_0_.item;
@@ -82,6 +_,9 @@
          return Optional.ofNullable(p_234704_0_.tag);
       })).apply(p_234698_0_, ItemStack::new);
    });
+   private final net.minecraftforge.registries.IRegistryDelegate<Item> delegate;
+   private CompoundNBT capNBT;
+
    private static final Logger LOGGER = LogManager.getLogger();
    public static final ItemStack EMPTY = new ItemStack((Item)null);
    public static final DecimalFormat ATTRIBUTE_MODIFIER_FORMAT = Util.make(new DecimalFormat("#.##"), (p_234699_0_) -> {
@@ -109,10 +_,15 @@
       p_i231596_3_.ifPresent(this::setTag);
    }
 
-   public ItemStack(IItemProvider p_i48204_1_, int p_i48204_2_) {
+   public ItemStack(IItemProvider p_i48204_1_, int p_i48204_2_) { this(p_i48204_1_, p_i48204_2_, (CompoundNBT) null); }
+   public ItemStack(IItemProvider p_i48204_1_, int p_i48204_2_, @Nullable CompoundNBT capNBT) {
+      super(ItemStack.class, true);
+      this.capNBT = capNBT;
       this.item = p_i48204_1_ == null ? null : p_i48204_1_.asItem();
+      this.delegate = p_i48204_1_ == null ? null : p_i48204_1_.asItem().delegate;
       this.count = p_i48204_2_;
-      if (this.item != null && this.item.canBeDepleted()) {
+      this.forgeInit();
+      if (this.item != null && this.item.isDamageable(this)) {
          this.setDamageValue(this.getDamageValue());
       }
 
@@ -125,14 +_,18 @@
    }
 
    private ItemStack(CompoundNBT p_i47263_1_) {
+      super(ItemStack.class, true);
+      this.capNBT = p_i47263_1_.contains("ForgeCaps") ? p_i47263_1_.getCompound("ForgeCaps") : null;
+      Item rawItem =
       this.item = Registry.ITEM.get(new ResourceLocation(p_i47263_1_.getString("id")));
+      this.delegate = rawItem.delegate;
       this.count = p_i47263_1_.getByte("Count");
       if (p_i47263_1_.contains("tag", 10)) {
          this.tag = p_i47263_1_.getCompound("tag");
          this.getItem().verifyTagAfterLoad(p_i47263_1_);
       }
-
-      if (this.getItem().canBeDepleted()) {
+      this.forgeInit();
+      if (this.getItem().isDamageable(this)) {
          this.setDamageValue(this.getDamageValue());
       }
 
@@ -167,10 +_,19 @@
    }
 
    public Item getItem() {
-      return this.emptyCacheFlag ? Items.AIR : this.item;
+      return this.emptyCacheFlag || this.delegate == null ? Items.AIR : this.delegate.get();
    }
 
    public ActionResultType useOn(ItemUseContext p_196084_1_) {
+      if (!p_196084_1_.getLevel().isClientSide) return net.minecraftforge.common.ForgeHooks.onPlaceItemIntoWorld(p_196084_1_);
+      return onItemUse(p_196084_1_, (c) -> getItem().useOn(p_196084_1_));
+   }
+
+   public ActionResultType onItemUseFirst(ItemUseContext p_196084_1_) {
+      return onItemUse(p_196084_1_, (c) -> getItem().onItemUseFirst(this, p_196084_1_));
+   }
+
+   private ActionResultType onItemUse(ItemUseContext p_196084_1_, java.util.function.Function<ItemUseContext, ActionResultType> callback) {
       PlayerEntity playerentity = p_196084_1_.getPlayer();
       BlockPos blockpos = p_196084_1_.getClickedPos();
       CachedBlockInfo cachedblockinfo = new CachedBlockInfo(p_196084_1_.getLevel(), blockpos, false);
@@ -178,7 +_,7 @@
          return ActionResultType.PASS;
       } else {
          Item item = this.getItem();
-         ActionResultType actionresulttype = item.useOn(p_196084_1_);
+         ActionResultType actionresulttype = callback.apply(p_196084_1_);
          if (playerentity != null && actionresulttype.consumesAction()) {
             playerentity.awardStat(Stats.ITEM_USED.get(item));
          }
@@ -206,12 +_,15 @@
       if (this.tag != null) {
          p_77955_1_.put("tag", this.tag.copy());
       }
-
+      CompoundNBT cnbt = this.serializeCaps();
+      if (cnbt != null && !cnbt.isEmpty()) {
+         p_77955_1_.put("ForgeCaps", cnbt);
+      }
       return p_77955_1_;
    }
 
    public int getMaxStackSize() {
-      return this.getItem().getMaxStackSize();
+      return this.getItem().getItemStackLimit(this);
    }
 
    public boolean isStackable() {
@@ -219,7 +_,7 @@
    }
 
    public boolean isDamageableItem() {
-      if (!this.emptyCacheFlag && this.getItem().getMaxDamage() > 0) {
+      if (!this.emptyCacheFlag && this.getItem().isDamageable(this)) {
          CompoundNBT compoundnbt = this.getTag();
          return compoundnbt == null || !compoundnbt.getBoolean("Unbreakable");
       } else {
@@ -228,19 +_,19 @@
    }
 
    public boolean isDamaged() {
-      return this.isDamageableItem() && this.getDamageValue() > 0;
+      return this.isDamageableItem() && getItem().isDamaged(this);
    }
 
    public int getDamageValue() {
-      return this.tag == null ? 0 : this.tag.getInt("Damage");
+      return this.getItem().getDamage(this);
    }
 
    public void setDamageValue(int p_196085_1_) {
-      this.getOrCreateTag().putInt("Damage", Math.max(0, p_196085_1_));
+      this.getItem().setDamage(this, p_196085_1_);
    }
 
    public int getMaxDamage() {
-      return this.getItem().getMaxDamage();
+      return this.getItem().getMaxDamage(this);
    }
 
    public boolean hurt(int p_96631_1_, Random p_96631_2_, @Nullable ServerPlayerEntity p_96631_3_) {
@@ -276,6 +_,7 @@
    public <T extends LivingEntity> void hurtAndBreak(int p_222118_1_, T p_222118_2_, Consumer<T> p_222118_3_) {
       if (!p_222118_2_.level.isClientSide && (!(p_222118_2_ instanceof PlayerEntity) || !((PlayerEntity)p_222118_2_).abilities.instabuild)) {
          if (this.isDamageableItem()) {
+            p_222118_1_ = this.getItem().damageItem(this, p_222118_1_, p_222118_2_, p_222118_3_);
             if (this.hurt(p_222118_1_, p_222118_2_.getRandom(), p_222118_2_ instanceof ServerPlayerEntity ? (ServerPlayerEntity)p_222118_2_ : null)) {
                p_222118_3_.accept(p_222118_2_);
                Item item = this.getItem();
@@ -308,7 +_,7 @@
    }
 
    public boolean isCorrectToolForDrops(BlockState p_150998_1_) {
-      return this.getItem().isCorrectToolForDrops(p_150998_1_);
+      return this.getItem().canHarvestBlock(this, p_150998_1_);
    }
 
    public ActionResultType interactLivingEntity(PlayerEntity p_111282_1_, LivingEntity p_111282_2_, Hand p_111282_3_) {
@@ -319,7 +_,7 @@
       if (this.isEmpty()) {
          return EMPTY;
       } else {
-         ItemStack itemstack = new ItemStack(this.getItem(), this.count);
+         ItemStack itemstack = new ItemStack(this.getItem(), this.count, this.serializeCaps());
          itemstack.setPopTime(this.getPopTime());
          if (this.tag != null) {
             itemstack.tag = this.tag.copy();
@@ -336,7 +_,7 @@
          if (p_77970_0_.tag == null && p_77970_1_.tag != null) {
             return false;
          } else {
-            return p_77970_0_.tag == null || p_77970_0_.tag.equals(p_77970_1_.tag);
+            return (p_77970_0_.tag == null || p_77970_0_.tag.equals(p_77970_1_.tag)) && p_77970_0_.areCapsCompatible(p_77970_1_);
          }
       } else {
          return false;
@@ -359,7 +_,7 @@
       } else if (this.tag == null && p_77959_1_.tag != null) {
          return false;
       } else {
-         return this.tag == null || this.tag.equals(p_77959_1_.tag);
+         return (this.tag == null || this.tag.equals(p_77959_1_.tag)) && this.areCapsCompatible(p_77959_1_);
       }
    }
 
@@ -479,7 +_,7 @@
 
    public void setTag(@Nullable CompoundNBT p_77982_1_) {
       this.tag = p_77982_1_;
-      if (this.getItem().canBeDepleted()) {
+      if (this.getItem().isDamageable(this)) {
          this.setDamageValue(this.getDamageValue());
       }
 
@@ -673,6 +_,7 @@
          }
       }
 
+      net.minecraftforge.event.ForgeEventFactory.onItemTooltip(this, p_82840_1_, list, p_82840_2_);
       return list;
    }
 
@@ -817,9 +_,10 @@
             }
          }
       } else {
-         multimap = this.getItem().getDefaultAttributeModifiers(p_111283_1_);
+         multimap = this.getItem().getAttributeModifiers(p_111283_1_, this);
       }
 
+      multimap = net.minecraftforge.common.ForgeHooks.getAttributeModifiers(this, p_111283_1_, multimap);
       return multimap;
    }
 
@@ -952,6 +_,23 @@
 
    public boolean isEdible() {
       return this.getItem().isEdible();
+   }
+
+   // FORGE START
+   public void deserializeNBT(CompoundNBT nbt) {
+      final ItemStack itemStack = ItemStack.of(nbt);
+      getStack().setTag(itemStack.getTag());
+      if (itemStack.capNBT != null) deserializeCaps(itemStack.capNBT);
+   }
+
+   /**
+    * Set up forge's ItemStack additions.
+    */
+   private void forgeInit() {
+      if (this.delegate != null) {
+         this.gatherCapabilities(() -> item.initCapabilities(this, this.capNBT));
+         if (this.capNBT != null) deserializeCaps(this.capNBT);
+      }
    }
 
    public SoundEvent getDrinkingSound() {
