--- ../src_base/minecraft/net/minecraft/item/ItemStack.java
+++ ../src_work/minecraft/net/minecraft/item/ItemStack.java
@@ -249,7 +249,7 @@
      */
     public boolean isItemDamaged()
     {
-        return this.isItemStackDamageable() && this.itemDamage > 0;
+        return this.isItemStackDamageable() && (this.getItem() != null ? this.getItem().isItemStackDamaged(this) : this.itemDamage > 0);
     }
 
     /**
@@ -257,7 +257,7 @@
      */
     public int getItemDamageForDisplay()
     {
-        return this.itemDamage;
+        return this.getItem() != null ? this.getItem().getItemDamageFromStackForDisplay(this) : this.itemDamage;
     }
 
     /**
@@ -265,7 +265,7 @@
      */
     public int getItemDamage()
     {
-        return this.itemDamage;
+        return this.getItem() != null ? this.getItem().getItemDamageFromStack(this) : this.itemDamage;
     }
 
     /**
@@ -273,11 +273,18 @@
      */
     public void setItemDamage(int par1)
     {
-        this.itemDamage = par1;
-
-        if (this.itemDamage < 0)
-        {
-            this.itemDamage = 0;
+        if (this.getItem() != null) 
+        {
+            this.getItem().setItemDamageForStack(this, par1); 
+        } 
+        else
+        {
+            this.itemDamage = par1;
+
+            if (this.itemDamage < 0)
+            {
+                this.itemDamage = 0;
+            }
         }
     }
 
@@ -286,7 +293,7 @@
      */
     public int getMaxDamage()
     {
-        return Item.itemsList[this.itemID].getMaxDamage();
+        return this.getItem() != null ? this.getItem().getItemMaxDamageFromStack(this) : Item.itemsList[this.itemID].getMaxDamage();
     }
 
     /**
@@ -388,7 +395,7 @@
      */
     public int getDamageVsEntity(Entity par1Entity)
     {
-        return Item.itemsList[this.itemID].getDamageVsEntity(par1Entity);
+        return Item.itemsList[this.itemID].getDamageVsEntity(par1Entity, this);
     }
 
     /**
@@ -396,7 +403,7 @@
      */
     public boolean canHarvestBlock(Block par1Block)
     {
-        return Item.itemsList[this.itemID].canHarvestBlock(par1Block);
+        return Item.itemsList[this.itemID].canHarvestBlock(par1Block, this);
     }
 
     public boolean interactWith(EntityLiving par1EntityLiving)
