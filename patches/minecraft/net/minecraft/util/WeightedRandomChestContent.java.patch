--- ../src-base/minecraft/net/minecraft/util/WeightedRandomChestContent.java
+++ ../src-work/minecraft/net/minecraft/util/WeightedRandomChestContent.java
@@ -36,48 +36,39 @@
         for (int i = 0; i < p_177630_3_; ++i)
         {
             WeightedRandomChestContent weightedrandomchestcontent = (WeightedRandomChestContent)WeightedRandom.func_76271_a(p_177630_0_, p_177630_1_);
-            int j = weightedrandomchestcontent.field_76295_d + p_177630_0_.nextInt(weightedrandomchestcontent.field_76296_e - weightedrandomchestcontent.field_76295_d + 1);
+            ItemStack[] stacks = weightedrandomchestcontent.generateChestContent(p_177630_0_, p_177630_2_);
 
-            if (weightedrandomchestcontent.field_76297_b.func_77976_d() >= j)
+            for (ItemStack itemstack1 : stacks)
             {
-                ItemStack itemstack1 = weightedrandomchestcontent.field_76297_b.func_77946_l();
-                itemstack1.field_77994_a = j;
                 p_177630_2_.func_70299_a(p_177630_0_.nextInt(p_177630_2_.func_70302_i_()), itemstack1);
             }
-            else
-            {
-                for (int k = 0; k < j; ++k)
-                {
-                    ItemStack itemstack = weightedrandomchestcontent.field_76297_b.func_77946_l();
-                    itemstack.field_77994_a = 1;
-                    p_177630_2_.func_70299_a(p_177630_0_.nextInt(p_177630_2_.func_70302_i_()), itemstack);
-                }
-            }
         }
     }
 
+    // -- Forge hooks
+    /**
+     * Allow a mod to submit a custom implementation that can delegate item stack generation beyond simple stack lookup
+     *
+     * @param random The current random for generation
+     * @param newInventory The inventory being generated (do not populate it, but you can refer to it)
+     * @return An array of {@link ItemStack} to put into the chest
+     */
+    protected ItemStack[] generateChestContent(Random random, IInventory newInventory)
+    {
+        return net.minecraftforge.common.ChestGenHooks.generateStacks(random, field_76297_b, field_76295_d, field_76296_e);
+    }
+
     public static void func_177631_a(Random p_177631_0_, List<WeightedRandomChestContent> p_177631_1_, TileEntityDispenser p_177631_2_, int p_177631_3_)
     {
         for (int i = 0; i < p_177631_3_; ++i)
         {
             WeightedRandomChestContent weightedrandomchestcontent = (WeightedRandomChestContent)WeightedRandom.func_76271_a(p_177631_0_, p_177631_1_);
-            int j = weightedrandomchestcontent.field_76295_d + p_177631_0_.nextInt(weightedrandomchestcontent.field_76296_e - weightedrandomchestcontent.field_76295_d + 1);
+            ItemStack[] stacks = weightedrandomchestcontent.generateChestContent(p_177631_0_, p_177631_2_);
 
-            if (weightedrandomchestcontent.field_76297_b.func_77976_d() >= j)
+            for (ItemStack itemstack1 : stacks)
             {
-                ItemStack itemstack1 = weightedrandomchestcontent.field_76297_b.func_77946_l();
-                itemstack1.field_77994_a = j;
                 p_177631_2_.func_70299_a(p_177631_0_.nextInt(p_177631_2_.func_70302_i_()), itemstack1);
             }
-            else
-            {
-                for (int k = 0; k < j; ++k)
-                {
-                    ItemStack itemstack = weightedrandomchestcontent.field_76297_b.func_77946_l();
-                    itemstack.field_77994_a = 1;
-                    p_177631_2_.func_70299_a(p_177631_0_.nextInt(p_177631_2_.func_70302_i_()), itemstack);
-                }
-            }
         }
     }
 
