--- a/net/minecraft/nbt/CompoundNBT.java
+++ b/net/minecraft/nbt/CompoundNBT.java
@@ -49,6 +_,7 @@
             while((b0 = CompoundNBT.readNamedTagType(p_225649_1_, p_225649_3_)) != 0) {
                String s = CompoundNBT.readNamedTagName(p_225649_1_, p_225649_3_);
                p_225649_3_.accountBits((long)(224 + 16 * s.length()));
+               p_225649_3_.accountBits(32); //Forge: 4 extra bytes for the object allocation.
                INBT inbt = CompoundNBT.readNamedTagData(NBTTypes.getType(b0), s, p_225649_1_, p_225649_2_ + 1, p_225649_3_);
                if (map.put(s, inbt) != null) {
                   p_225649_3_.accountBits(288L);
@@ -104,6 +_,7 @@
 
    @Nullable
    public INBT put(String p_218657_1_, INBT p_218657_2_) {
+      if (p_218657_2_ == null) throw new IllegalArgumentException("Invalid null NBT value with key " + p_218657_1_);
       return this.tags.put(p_218657_1_, p_218657_2_);
    }
 
@@ -408,11 +_,12 @@
    }
 
    private static byte readNamedTagType(DataInput p_152447_0_, NBTSizeTracker p_152447_1_) throws IOException {
+      p_152447_1_.accountBits(8);
       return p_152447_0_.readByte();
    }
 
    private static String readNamedTagName(DataInput p_152448_0_, NBTSizeTracker p_152448_1_) throws IOException {
-      return p_152448_0_.readUTF();
+      return p_152448_1_.readUTF(p_152448_0_.readUTF());
    }
 
    private static INBT readNamedTagData(INBTType<?> p_229680_0_, String p_229680_1_, DataInput p_229680_2_, int p_229680_3_, NBTSizeTracker p_229680_4_) {
