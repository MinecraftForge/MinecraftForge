--- ../src-base/minecraft/net/minecraft/nbt/NBTTagList.java
+++ ../src-work/minecraft/net/minecraft/nbt/NBTTagList.java
@@ -9,7 +9,7 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public class NBTTagList extends NBTBase
+public class NBTTagList extends NBTBase implements java.lang.Iterable<NBTBase>
 {
     private static final Logger field_179239_b = LogManager.getLogger();
     private List<NBTBase> field_74747_a = Lists.<NBTBase>newArrayList();
@@ -281,4 +281,88 @@
     {
         return this.field_74746_b;
     }
+
+    // Forge START
+
+    @Override
+    public java.util.Iterator<NBTBase> iterator()
+    {
+        return field_74747_a.iterator();
+    }
+
+    public byte getByte(int i)
+    {
+        if (i >= 0 && i < this.field_74747_a.size())
+        {
+            NBTBase nbtbase = this.field_74747_a.get(i);
+            if (nbtbase.func_74732_a() == 1)
+                return ((NBTTagByte)nbtbase).func_150290_f();
+        }
+        return 0;
+    }
+
+    public boolean getBooleanAt(int i)
+    {
+        return getByte(i) != 0;
+    }
+
+    public short getShort(int i)
+    {
+        if (i >= 0 && i < this.field_74747_a.size())
+        {
+            NBTBase nbtbase = this.field_74747_a.get(i);
+            if (nbtbase.func_74732_a() == 2)
+                return ((NBTTagShort)nbtbase).func_150289_e();
+        }
+        return 0;
+    }
+
+    public long getLong(int i)
+    {
+        if (i >= 0 && i < this.field_74747_a.size())
+        {
+            NBTBase nbtbase = this.field_74747_a.get(i);
+            if (nbtbase.func_74732_a() == 4)
+                return ((NBTTagLong)nbtbase).func_150291_c();
+        }
+        return 0;
+    }
+
+    public byte[] getByteArray(int i)
+    {
+        if (i >= 0 && i < this.field_74747_a.size())
+        {
+            NBTBase nbtbase = this.field_74747_a.get(i);
+            if (nbtbase.func_74732_a() == 7)
+                return ((NBTTagByteArray)nbtbase).func_150292_c();
+        }
+        return new byte[0];
+    }
+
+    public NBTTagList getListTag(int i, int type)
+    {
+        if (i >= 0 && i < this.field_74747_a.size())
+        {
+            NBTBase nbtbase = this.field_74747_a.get(i);
+            if (nbtbase.func_74732_a() == 9)
+            {
+                NBTTagList nbttaglist = (NBTTagList) nbtbase;
+                if (!nbttaglist.func_82582_d() && nbttaglist.func_150303_d() != type)
+                    return new NBTTagList();
+                return nbttaglist;
+            }
+        }
+        return new NBTTagList();
+    }
+
+    public long[] getLongArray(int i)
+    {
+        if (i >= 0 && i < this.field_74747_a.size())
+        {
+            NBTBase nbtbase = this.field_74747_a.get(i);
+            if (nbtbase.func_74732_a() == 12)
+                return ((NBTTagLongArray)nbtbase).getLongArray();
+        }
+        return new long[0];
+    }
 }
