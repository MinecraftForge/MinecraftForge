--- a/net/minecraft/entity/monster/ZombieEntity.java
+++ b/net/minecraft/entity/monster/ZombieEntity.java
@@ -186,7 +_,8 @@
       if (!this.level.isClientSide && this.isAlive() && !this.isNoAi()) {
          if (this.isUnderWaterConverting()) {
             --this.conversionTime;
-            if (this.conversionTime < 0) {
+
+            if (this.conversionTime < 0 && net.minecraftforge.event.ForgeEventFactory.canLivingConvert(this, EntityType.DROWNED, (timer) -> this.conversionTime = timer)) {
                this.doUnderWaterConversion();
             }
          } else if (this.convertsInWater()) {
@@ -248,6 +_,7 @@
       if (zombieentity != null) {
          zombieentity.handleAttributes(zombieentity.level.getCurrentDifficultyAt(zombieentity.blockPosition()).getSpecialMultiplier());
          zombieentity.setCanBreakDoors(zombieentity.supportsBreakDoorGoal() && this.canBreakDoors());
+         net.minecraftforge.event.ForgeEventFactory.onLivingConvert(this, zombieentity);
       }
 
    }
@@ -268,11 +_,15 @@
             livingentity = (LivingEntity)p_70097_1_.getEntity();
          }
 
-         if (livingentity != null && this.level.getDifficulty() == Difficulty.HARD && (double)this.random.nextFloat() < this.getAttributeValue(Attributes.SPAWN_REINFORCEMENTS_CHANCE) && this.level.getGameRules().getBoolean(GameRules.RULE_DOMOBSPAWNING)) {
             int i = MathHelper.floor(this.getX());
             int j = MathHelper.floor(this.getY());
             int k = MathHelper.floor(this.getZ());
-            ZombieEntity zombieentity = new ZombieEntity(this.level);
+
+         net.minecraftforge.event.entity.living.ZombieEvent.SummonAidEvent event = net.minecraftforge.event.ForgeEventFactory.fireZombieSummonAid(this, level, i, j, k, livingentity, this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).getValue());
+         if (event.getResult() == net.minecraftforge.eventbus.api.Event.Result.DENY) return true;
+         if (event.getResult() == net.minecraftforge.eventbus.api.Event.Result.ALLOW  ||
+            livingentity != null && this.level.getDifficulty() == Difficulty.HARD && (double)this.random.nextFloat() < this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).getValue() && this.level.getGameRules().getBoolean(GameRules.RULE_DOMOBSPAWNING)) {
+            ZombieEntity zombieentity = event.getCustomSummonedAid() != null && event.getResult() == net.minecraftforge.eventbus.api.Event.Result.ALLOW ? event.getCustomSummonedAid() : EntityType.ZOMBIE.create(this.level);
 
             for(int l = 0; l < 50; ++l) {
                int i1 = i + MathHelper.nextInt(this.random, 7, 40) * MathHelper.nextInt(this.random, -1, 1);
@@ -284,6 +_,7 @@
                if (WorldEntitySpawner.isSpawnPositionOk(entityspawnplacementregistry$placementtype, this.level, blockpos, entitytype) && EntitySpawnPlacementRegistry.checkSpawnRules(entitytype, serverworld, SpawnReason.REINFORCEMENT, blockpos, this.level.random)) {
                   zombieentity.setPos((double)i1, (double)j1, (double)k1);
                   if (!this.level.hasNearbyAlivePlayer((double)i1, (double)j1, (double)k1, 7.0D) && this.level.isUnobstructed(zombieentity) && this.level.noCollision(zombieentity) && !this.level.containsAnyLiquid(zombieentity.getBoundingBox())) {
+                     if (livingentity != null)
                      zombieentity.setTarget(livingentity);
                      zombieentity.finalizeSpawn(serverworld, this.level.getCurrentDifficultyAt(zombieentity.blockPosition()), SpawnReason.REINFORCEMENT, (ILivingEntityData)null, (CompoundNBT)null);
                      serverworld.addFreshEntityWithPassengers(zombieentity);
@@ -369,7 +_,7 @@
 
    public void killed(ServerWorld p_241847_1_, LivingEntity p_241847_2_) {
       super.killed(p_241847_1_, p_241847_2_);
-      if ((p_241847_1_.getDifficulty() == Difficulty.NORMAL || p_241847_1_.getDifficulty() == Difficulty.HARD) && p_241847_2_ instanceof VillagerEntity) {
+      if ((p_241847_1_.getDifficulty() == Difficulty.NORMAL || p_241847_1_.getDifficulty() == Difficulty.HARD) && p_241847_2_ instanceof VillagerEntity && net.minecraftforge.event.ForgeEventFactory.canLivingConvert(p_241847_2_, EntityType.ZOMBIE_VILLAGER, (timer) -> {})) {
          if (p_241847_1_.getDifficulty() != Difficulty.HARD && this.random.nextBoolean()) {
             return;
          }
@@ -381,6 +_,7 @@
          zombievillagerentity.setGossips(villagerentity.getGossips().store(NBTDynamicOps.INSTANCE).getValue());
          zombievillagerentity.setTradeOffers(villagerentity.getOffers().createTag());
          zombievillagerentity.setVillagerXp(villagerentity.getVillagerXp());
+         net.minecraftforge.event.ForgeEventFactory.onLivingConvert(p_241847_2_, zombievillagerentity);
          if (!this.isSilent()) {
             p_241847_1_.levelEvent((PlayerEntity)null, 1026, this.blockPosition(), 0);
          }
@@ -448,7 +_,7 @@
    }
 
    public static boolean getSpawnAsBabyOdds(Random p_241399_0_) {
-      return p_241399_0_.nextFloat() < 0.05F;
+      return p_241399_0_.nextFloat() < net.minecraftforge.common.ForgeConfig.SERVER.zombieBabyChance.get();
    }
 
    protected void handleAttributes(float p_207304_1_) {
@@ -468,7 +_,7 @@
    }
 
    protected void randomizeReinforcementsChance() {
-      this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(this.random.nextDouble() * (double)0.1F);
+      this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(this.random.nextDouble() * net.minecraftforge.common.ForgeConfig.SERVER.zombieBaseSummonChance.get());
    }
 
    public double getMyRidingOffset() {
