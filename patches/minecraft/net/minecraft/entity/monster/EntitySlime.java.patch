--- ../src_base/minecraft/net/minecraft/entity/monster/EntitySlime.java
+++ ../src_work/minecraft/net/minecraft/entity/monster/EntitySlime.java
@@ -11,15 +11,23 @@
 import net.minecraft.world.WorldType;
 import net.minecraft.world.biome.BiomeGenBase;
 import net.minecraft.world.chunk.Chunk;
+// CraftBukkit start
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetEvent;
+import org.bukkit.event.entity.SlimeSplitEvent;
+import net.minecraft.entity.Entity;
+// CraftBukkit end
 
 public class EntitySlime extends EntityLiving implements IMob
 {
-    public float field_70813_a;
-    public float field_70811_b;
-    public float field_70812_c;
+    public float squishAmount;
+    public float squishFactor;
+    public float prevSquishFactor;
 
     /** the time between each jump of the slime */
     private int slimeJumpDelay;
+    private Entity lastTarget; // CraftBukkit
 
     public EntitySlime(World par1World)
     {
@@ -36,13 +44,14 @@
         this.dataWatcher.addObject(16, new Byte((byte)1));
     }
 
-    protected void setSlimeSize(int par1)
+    // CraftBukkit - protected -> public
+    public void setSlimeSize(int par1)
     {
         this.dataWatcher.updateObject(16, new Byte((byte)par1));
         this.setSize(0.6F * (float)par1, 0.6F * (float)par1);
         this.setPosition(this.posX, this.posY, this.posZ);
-        this.func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a((double)(par1 * par1));
-        this.setEntityHealth(this.func_110138_aP());
+        this.getEntityAttribute(SharedMonsterAttributes.maxHealth).setAttribute((double)(par1 * par1));
+        this.setHealth(this.getMaxHealth());
         this.experienceValue = par1;
     }
 
@@ -98,8 +107,8 @@
             this.isDead = true;
         }
 
-        this.field_70811_b += (this.field_70813_a - this.field_70811_b) * 0.5F;
-        this.field_70812_c = this.field_70811_b;
+        this.squishFactor += (this.squishAmount - this.squishFactor) * 0.5F;
+        this.prevSquishFactor = this.squishFactor;
         boolean flag = this.onGround;
         super.onUpdate();
         int i;
@@ -122,14 +131,14 @@
                 this.playSound(this.getJumpSound(), this.getSoundVolume(), ((this.rand.nextFloat() - this.rand.nextFloat()) * 0.2F + 1.0F) / 0.8F);
             }
 
-            this.field_70813_a = -0.5F;
+            this.squishAmount = -0.5F;
         }
         else if (!this.onGround && flag)
         {
-            this.field_70813_a = 1.0F;
-        }
-
-        this.func_70808_l();
+            this.squishAmount = 1.0F;
+        }
+
+        this.alterSquishAmount();
 
         if (this.worldObj.isRemote)
         {
@@ -141,18 +150,37 @@
     protected void updateEntityActionState()
     {
         this.despawnEntity();
-        EntityPlayer entityplayer = this.worldObj.getClosestVulnerablePlayerToEntity(this, 16.0D);
-
-        if (entityplayer != null)
-        {
-            this.faceEntity(entityplayer, 10.0F, 20.0F);
+        // CraftBukkit start
+        Entity entityhuman = this.worldObj.getClosestVulnerablePlayerToEntity(this, 16.0D); // EntityHuman -> Entity
+        EntityTargetEvent event = null;
+
+        if (entityhuman != null && !entityhuman.equals(lastTarget))
+        {
+            event = CraftEventFactory.callEntityTargetEvent(this, entityhuman, EntityTargetEvent.TargetReason.CLOSEST_PLAYER);
+        }
+        else if (lastTarget != null && entityhuman == null)
+        {
+            event = CraftEventFactory.callEntityTargetEvent(this, entityhuman, EntityTargetEvent.TargetReason.FORGOT_TARGET);
+        }
+
+        if (event != null && !event.isCancelled())
+        {
+            entityhuman = event.getTarget() == null ? null : ((CraftEntity) event.getTarget()).getHandle();
+        }
+
+        this.lastTarget = entityhuman;
+        // CraftBukkit end
+
+        if (entityhuman != null)
+        {
+            this.faceEntity(entityhuman, 10.0F, 20.0F);
         }
 
         if (this.onGround && this.slimeJumpDelay-- <= 0)
         {
             this.slimeJumpDelay = this.getJumpDelay();
 
-            if (entityplayer != null)
+            if (entityhuman != null)
             {
                 this.slimeJumpDelay /= 3;
             }
@@ -178,9 +206,9 @@
         }
     }
 
-    protected void func_70808_l()
-    {
-        this.field_70813_a *= 0.6F;
+    protected void alterSquishAmount()
+    {
+        this.squishAmount *= 0.6F;
     }
 
     /**
@@ -203,9 +231,23 @@
     {
         int i = this.getSlimeSize();
 
-        if (!this.worldObj.isRemote && i > 1 && this.func_110143_aJ() <= 0.0F)
+        if (!this.worldObj.isRemote && i > 1 && this.getHealth() <= 0.0F)
         {
             int j = 2 + this.rand.nextInt(3);
+            // CraftBukkit start
+            SlimeSplitEvent event = new SlimeSplitEvent((org.bukkit.entity.Slime) this.getBukkitEntity(), j);
+            this.worldObj.getServer().getPluginManager().callEvent(event);
+
+            if (!event.isCancelled() && event.getCount() > 0)
+            {
+                j = event.getCount();
+            }
+            else
+            {
+                super.setDead();
+                return;
+            }
+            // CraftBukkit end
 
             for (int k = 0; k < j; ++k)
             {
@@ -214,7 +256,7 @@
                 EntitySlime entityslime = this.createInstance();
                 entityslime.setSlimeSize(i / 2);
                 entityslime.setLocationAndAngles(this.posX + (double)f, this.posY + 0.5D, this.posZ + (double)f1, this.rand.nextFloat() * 360.0F, 0.0F);
-                this.worldObj.spawnEntityInWorld(entityslime);
+                this.worldObj.addEntity(entityslime, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.SLIME_SPLIT); // CraftBukkit - SpawnReason
             }
         }
 
@@ -294,7 +336,7 @@
             {
                 BiomeGenBase biomegenbase = this.worldObj.getBiomeGenForCoords(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posZ));
 
-                if (biomegenbase == BiomeGenBase.swampland && this.posY > 50.0D && this.posY < 70.0D && this.rand.nextFloat() < 0.5F && this.rand.nextFloat() < this.worldObj.func_130001_d() && this.worldObj.getBlockLightValue(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY), MathHelper.floor_double(this.posZ)) <= this.rand.nextInt(8))
+                if (biomegenbase == BiomeGenBase.swampland && this.posY > 50.0D && this.posY < 70.0D && this.rand.nextFloat() < 0.5F && this.rand.nextFloat() < this.worldObj.getCurrentMoonPhaseFactor() && this.worldObj.getBlockLightValue(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY), MathHelper.floor_double(this.posZ)) <= this.rand.nextInt(8))
                 {
                     return super.getCanSpawnHere();
                 }
