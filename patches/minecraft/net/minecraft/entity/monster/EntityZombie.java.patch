--- ../src_base/minecraft/net/minecraft/entity/monster/EntityZombie.java
+++ ../src_work/minecraft/net/minecraft/entity/monster/EntityZombie.java
@@ -31,20 +31,27 @@
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.potion.Potion;
 import net.minecraft.potion.PotionEffect;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
+//CraftBukkit start
+import org.bukkit.craftbukkit.entity.CraftLivingEntity;
+import org.bukkit.event.entity.EntityCombustByEntityEvent;
+import org.bukkit.event.entity.EntityCombustEvent;
+//CraftBukkit end
 
 public class EntityZombie extends EntityMob
 {
     protected static final Attribute field_110186_bp = (new RangedAttribute("zombie.spawnReinforcements", 0.0D, 0.0D, 1.0D)).func_111117_a("Spawn Reinforcements Chance");
-    private static final UUID field_110187_bq = UUID.fromString("B9766B59-9566-4402-BC1F-2EE2A276D836");
-    private static final AttributeModifier field_110188_br = new AttributeModifier(field_110187_bq, "Baby speed boost", 0.5D, 1);
+    private static final UUID babySpeedBoostUUID = UUID.fromString("B9766B59-9566-4402-BC1F-2EE2A276D836");
+    private static final AttributeModifier babySpeedBoostModifier = new AttributeModifier(babySpeedBoostUUID, "Baby speed boost", 0.5D, 1);
 
     /**
      * Ticker used to determine the time remaining for this zombie to convert into a villager when cured.
      */
     private int conversionTime;
+    private int lastTick = MinecraftServer.currentTick; // CraftBukkit
 
     public EntityZombie(World par1World)
     {
@@ -64,13 +71,13 @@
         this.targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityVillager.class, 0, false));
     }
 
-    protected void func_110147_ax()
-    {
-        super.func_110147_ax();
-        this.func_110148_a(SharedMonsterAttributes.field_111265_b).func_111128_a(40.0D);
-        this.func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.23000000417232513D);
-        this.func_110148_a(SharedMonsterAttributes.field_111264_e).func_111128_a(3.0D);
-        this.func_110140_aT().func_111150_b(field_110186_bp).func_111128_a(this.rand.nextDouble() * 0.10000000149011612D);
+    protected void applyEntityAttributes()
+    {
+        super.applyEntityAttributes();
+        this.getEntityAttribute(SharedMonsterAttributes.followRange).setAttribute(40.0D);
+        this.getEntityAttribute(SharedMonsterAttributes.movementSpeed).setAttribute(0.23000000417232513D);
+        this.getEntityAttribute(SharedMonsterAttributes.attackDamage).setAttribute(3.0D);
+        this.getAttributeMap().func_111150_b(field_110186_bp).setAttribute(this.rand.nextDouble() * 0.10000000149011612D);
     }
 
     protected void entityInit()
@@ -121,12 +128,12 @@
 
         if (this.worldObj != null && !this.worldObj.isRemote)
         {
-            AttributeInstance attributeinstance = this.func_110148_a(SharedMonsterAttributes.field_111263_d);
-            attributeinstance.func_111124_b(field_110188_br);
+            AttributeInstance attributeinstance = this.getEntityAttribute(SharedMonsterAttributes.movementSpeed);
+            attributeinstance.removeModifier(babySpeedBoostModifier);
 
             if (par1)
             {
-                attributeinstance.func_111121_a(field_110188_br);
+                attributeinstance.applyModifier(babySpeedBoostModifier);
             }
         }
     }
@@ -180,7 +187,15 @@
 
                 if (flag)
                 {
-                    this.setFire(8);
+                    // CraftBukkit start
+                    EntityCombustEvent event = new EntityCombustEvent(this.getBukkitEntity(), 8);
+                    this.worldObj.getServer().getPluginManager().callEvent(event);
+
+                    if (!event.isCancelled())
+                    {
+                        this.setFire(event.getDuration());
+                    }
+                    // CraftBukkit end
                 }
             }
         }
@@ -211,7 +226,7 @@
                 entitylivingbase = (EntityLivingBase)par1DamageSource.getEntity();
             }
 
-            if (entitylivingbase != null && this.worldObj.difficultySetting >= 3 && (double)this.rand.nextFloat() < this.func_110148_a(field_110186_bp).func_111126_e())
+            if (entitylivingbase != null && this.worldObj.difficultySetting >= 3 && (double)this.rand.nextFloat() < this.getEntityAttribute(field_110186_bp).getAttributeValue())
             {
                 int i = MathHelper.floor_double(this.posX);
                 int j = MathHelper.floor_double(this.posY);
@@ -232,9 +247,9 @@
                         {
                             this.worldObj.spawnEntityInWorld(entityzombie);
                             entityzombie.setAttackTarget(entitylivingbase);
-                            entityzombie.func_110161_a((EntityLivingData)null);
-                            this.func_110148_a(field_110186_bp).func_111121_a(new AttributeModifier("Zombie reinforcement caller charge", -0.05000000074505806D, 0));
-                            entityzombie.func_110148_a(field_110186_bp).func_111121_a(new AttributeModifier("Zombie reinforcement callee charge", -0.05000000074505806D, 0));
+                            entityzombie.onSpawnWithEgg((EntityLivingData)null);
+                            this.getEntityAttribute(field_110186_bp).applyModifier(new AttributeModifier("Zombie reinforcement caller charge", -0.05000000074505806D, 0));
+                            entityzombie.getEntityAttribute(field_110186_bp).applyModifier(new AttributeModifier("Zombie reinforcement callee charge", -0.05000000074505806D, 0));
                             break;
                         }
                     }
@@ -253,6 +268,11 @@
         if (!this.worldObj.isRemote && this.isConverting())
         {
             int i = this.getConversionTimeBoost();
+            // CraftBukkit start - Use wall time instead of ticks for villager conversion
+            int elapsedTicks = MinecraftServer.currentTick - this.lastTick;
+            this.lastTick = MinecraftServer.currentTick;
+            i *= elapsedTicks;
+            // CraftBukkit end
             this.conversionTime -= i;
 
             if (this.conversionTime <= 0)
@@ -270,7 +290,15 @@
 
         if (flag && this.getHeldItem() == null && this.isBurning() && this.rand.nextFloat() < (float)this.worldObj.difficultySetting * 0.3F)
         {
-            par1Entity.setFire(2 * this.worldObj.difficultySetting);
+            // CraftBukkit start
+            EntityCombustByEntityEvent event = new EntityCombustByEntityEvent(this.getBukkitEntity(), par1Entity.getBukkitEntity(), 2 * this.worldObj.difficultySetting);
+            this.worldObj.getServer().getPluginManager().callEvent(event);
+
+            if (!event.isCancelled())
+            {
+                par1Entity.setFire(event.getDuration());
+            }
+            // CraftBukkit end
         }
 
         return flag;
@@ -324,20 +352,22 @@
         return EnumCreatureAttribute.UNDEAD;
     }
 
-    protected void dropRareDrop(int par1)
+    // CraftBukkit start - Return rare dropped item instead of dropping it
+    protected ItemStack dropRareDrop(int i)
     {
         switch (this.rand.nextInt(3))
         {
             case 0:
-                this.dropItem(Item.ingotIron.itemID, 1);
-                break;
+                return new ItemStack(Item.ingotIron.itemID, 1, 0);
             case 1:
-                this.dropItem(Item.carrot.itemID, 1);
-                break;
+                return new ItemStack(Item.carrot.itemID, 1, 0);
             case 2:
-                this.dropItem(Item.potato.itemID, 1);
-        }
-    }
+                return new ItemStack(Item.potato.itemID, 1, 0);
+            default:
+                return null;
+        }
+    }
+    // CraftBukkit end
 
     /**
      * Makes entity wear random armor based on difficulty
@@ -421,7 +451,7 @@
             EntityZombie entityzombie = new EntityZombie(this.worldObj);
             entityzombie.copyLocationAndAnglesFrom(par1EntityLivingBase);
             this.worldObj.removeEntity(par1EntityLivingBase);
-            entityzombie.func_110161_a((EntityLivingData)null);
+            entityzombie.onSpawnWithEgg((EntityLivingData)null);
             entityzombie.setVillager(true);
 
             if (par1EntityLivingBase.isChild())
@@ -434,10 +464,10 @@
         }
     }
 
-    public EntityLivingData func_110161_a(EntityLivingData par1EntityLivingData)
-    {
-        Object par1EntityLivingData1 = super.func_110161_a(par1EntityLivingData);
-        float f = this.worldObj.func_110746_b(this.posX, this.posY, this.posZ);
+    public EntityLivingData onSpawnWithEgg(EntityLivingData par1EntityLivingData)
+    {
+        Object par1EntityLivingData1 = super.onSpawnWithEgg(par1EntityLivingData);
+        float f = this.worldObj.getLocationTensionFactor(this.posX, this.posY, this.posZ);
         this.setCanPickUpLoot(this.rand.nextFloat() < 0.55F * f);
 
         if (par1EntityLivingData1 == null)
@@ -474,13 +504,13 @@
             }
         }
 
-        this.func_110148_a(SharedMonsterAttributes.field_111266_c).func_111121_a(new AttributeModifier("Random spawn bonus", this.rand.nextDouble() * 0.05000000074505806D, 0));
-        this.func_110148_a(SharedMonsterAttributes.field_111265_b).func_111121_a(new AttributeModifier("Random zombie-spawn bonus", this.rand.nextDouble() * 1.5D, 2));
+        this.getEntityAttribute(SharedMonsterAttributes.knockbackResistance).applyModifier(new AttributeModifier("Random spawn bonus", this.rand.nextDouble() * 0.05000000074505806D, 0));
+        this.getEntityAttribute(SharedMonsterAttributes.followRange).applyModifier(new AttributeModifier("Random zombie-spawn bonus", this.rand.nextDouble() * 1.5D, 2));
 
         if (this.rand.nextFloat() < f * 0.05F)
         {
-            this.func_110148_a(field_110186_bp).func_111121_a(new AttributeModifier("Leader zombie bonus", this.rand.nextDouble() * 0.25D + 0.5D, 0));
-            this.func_110148_a(SharedMonsterAttributes.field_111267_a).func_111121_a(new AttributeModifier("Leader zombie bonus", this.rand.nextDouble() * 3.0D + 1.0D, 2));
+            this.getEntityAttribute(field_110186_bp).applyModifier(new AttributeModifier("Leader zombie bonus", this.rand.nextDouble() * 0.25D + 0.5D, 0));
+            this.getEntityAttribute(SharedMonsterAttributes.maxHealth).applyModifier(new AttributeModifier("Leader zombie bonus", this.rand.nextDouble() * 3.0D + 1.0D, 2));
         }
 
         return (EntityLivingData)par1EntityLivingData1;
@@ -567,7 +597,7 @@
     {
         EntityVillager entityvillager = new EntityVillager(this.worldObj);
         entityvillager.copyLocationAndAnglesFrom(this);
-        entityvillager.func_110161_a((EntityLivingData)null);
+        entityvillager.onSpawnWithEgg((EntityLivingData)null);
         entityvillager.func_82187_q();
 
         if (this.isChild())
