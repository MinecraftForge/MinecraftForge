--- ../src_base/minecraft/net/minecraft/entity/monster/EntityEnderman.java
+++ ../src_work/minecraft/net/minecraft/entity/monster/EntityEnderman.java
@@ -16,20 +16,31 @@
 import net.minecraft.util.MathHelper;
 import net.minecraft.util.Vec3;
 import net.minecraft.world.World;
+import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.event.entity.living.EnderTeleportEvent;
+// CraftBukkit start
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTeleportEvent;
+// CraftBukkit end
 
 public class EntityEnderman extends EntityMob
 {
-    private static final UUID field_110192_bp = UUID.fromString("020E0DFB-87AE-4653-9556-831010E291A0");
-    private static final AttributeModifier field_110193_bq = (new AttributeModifier(field_110192_bp, "Attacking speed boost", 6.199999809265137D, 0)).func_111168_a(false);
+    private static final UUID attackingSpeedBoostModifierUUID = UUID.fromString("020E0DFB-87AE-4653-9556-831010E291A0");
+    private static final AttributeModifier attackingSpeedBoostModifier = (new AttributeModifier(attackingSpeedBoostModifierUUID, "Attacking speed boost", 6.199999809265137D, 0)).setSaved(false);
     public static boolean[] carriableBlocks = new boolean[256];
 
     /**
      * Counter to delay the teleportation of an enderman towards the currently attacked target
      */
     private int teleportDelay;
-    private int field_70826_g;
-    private Entity field_110194_bu;
-    private boolean field_104003_g;
+
+    /**
+     * A player must stare at an enderman for 5 ticks before it becomes aggressive. This field counts those ticks.
+     */
+    private int stareTimer;
+    private Entity lastEntityToAttack;
+    private boolean isAggressive;
 
     public EntityEnderman(World par1World)
     {
@@ -38,12 +49,12 @@
         this.stepHeight = 1.0F;
     }
 
-    protected void func_110147_ax()
-    {
-        super.func_110147_ax();
-        this.func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(40.0D);
-        this.func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.30000001192092896D);
-        this.func_110148_a(SharedMonsterAttributes.field_111264_e).func_111128_a(7.0D);
+    protected void applyEntityAttributes()
+    {
+        super.applyEntityAttributes();
+        this.getEntityAttribute(SharedMonsterAttributes.maxHealth).setAttribute(40.0D);
+        this.getEntityAttribute(SharedMonsterAttributes.movementSpeed).setAttribute(0.30000001192092896D);
+        this.getEntityAttribute(SharedMonsterAttributes.attackDamage).setAttribute(7.0D);
     }
 
     protected void entityInit()
@@ -86,23 +97,23 @@
         {
             if (this.shouldAttackPlayer(entityplayer))
             {
-                this.field_104003_g = true;
-
-                if (this.field_70826_g == 0)
+                this.isAggressive = true;
+
+                if (this.stareTimer == 0)
                 {
                     this.worldObj.playSoundAtEntity(entityplayer, "mob.endermen.stare", 1.0F, 1.0F);
                 }
 
-                if (this.field_70826_g++ == 5)
-                {
-                    this.field_70826_g = 0;
+                if (this.stareTimer++ == 5)
+                {
+                    this.stareTimer = 0;
                     this.setScreaming(true);
                     return entityplayer;
                 }
             }
             else
             {
-                this.field_70826_g = 0;
+                this.stareTimer = 0;
             }
         }
 
@@ -142,18 +153,18 @@
             this.attackEntityFrom(DamageSource.drown, 1.0F);
         }
 
-        if (this.field_110194_bu != this.entityToAttack)
-        {
-            AttributeInstance attributeinstance = this.func_110148_a(SharedMonsterAttributes.field_111263_d);
-            attributeinstance.func_111124_b(field_110193_bq);
+        if (this.lastEntityToAttack != this.entityToAttack)
+        {
+            AttributeInstance attributeinstance = this.getEntityAttribute(SharedMonsterAttributes.movementSpeed);
+            attributeinstance.removeModifier(attackingSpeedBoostModifier);
 
             if (this.entityToAttack != null)
             {
-                attributeinstance.func_111121_a(field_110193_bq);
-            }
-        }
-
-        this.field_110194_bu = this.entityToAttack;
+                attributeinstance.applyModifier(attackingSpeedBoostModifier);
+            }
+        }
+
+        this.lastEntityToAttack = this.entityToAttack;
         int i;
 
         if (!this.worldObj.isRemote && this.worldObj.getGameRules().getGameRuleBooleanValue("mobGriefing"))
@@ -173,9 +184,15 @@
 
                     if (carriableBlocks[l])
                     {
-                        this.setCarried(this.worldObj.getBlockId(i, j, k));
-                        this.setCarryingData(this.worldObj.getBlockMetadata(i, j, k));
-                        this.worldObj.setBlock(i, j, k, 0);
+                        // CraftBukkit start - Pickup event
+                        if (!CraftEventFactory.callEntityChangeBlockEvent(this, this.worldObj.getWorld().getBlockAt(i, j, k), org.bukkit.Material.AIR).isCancelled())
+                        {
+                            this.setCarried(this.worldObj.getBlockId(i, j, k));
+                            this.setCarryingData(this.worldObj.getBlockMetadata(i, j, k));
+                            this.worldObj.setBlock(i, j, k, 0);
+                        }
+
+                        // CraftBukkit end
                     }
                 }
             }
@@ -189,8 +206,14 @@
 
                 if (l == 0 && i1 > 0 && Block.blocksList[i1].renderAsNormalBlock())
                 {
-                    this.worldObj.setBlock(i, j, k, this.getCarried(), this.getCarryingData(), 3);
-                    this.setCarried(0);
+                    // CraftBukkit start - Place event
+                    if (!CraftEventFactory.callEntityChangeBlockEvent(this, i, j, k, this.getCarried(), this.getCarryingData()).isCancelled())
+                    {
+                        this.worldObj.setBlock(i, j, k, this.getCarried(), this.getCarryingData(), 3);
+                        this.setCarried(0);
+                    }
+
+                    // CraftBukkit end
                 }
             }
         }
@@ -208,7 +231,7 @@
             {
                 this.entityToAttack = null;
                 this.setScreaming(false);
-                this.field_104003_g = false;
+                this.isAggressive = false;
                 this.teleportRandomly();
             }
         }
@@ -217,11 +240,11 @@
         {
             this.entityToAttack = null;
             this.setScreaming(false);
-            this.field_104003_g = false;
+            this.isAggressive = false;
             this.teleportRandomly();
         }
 
-        if (this.isScreaming() && !this.field_104003_g && this.rand.nextInt(100) == 0)
+        if (this.isScreaming() && !this.isAggressive && this.rand.nextInt(100) == 0)
         {
             this.setScreaming(false);
         }
@@ -291,12 +314,17 @@
      */
     protected boolean teleportTo(double par1, double par3, double par5)
     {
+        EnderTeleportEvent event = new EnderTeleportEvent(this, par1, par3, par5, 0);
+        if (MinecraftForge.EVENT_BUS.post(event)){
+            return false;
+        }
+
         double d3 = this.posX;
         double d4 = this.posY;
         double d5 = this.posZ;
-        this.posX = par1;
-        this.posY = par3;
-        this.posZ = par5;
+        this.posX = event.targetX;
+        this.posY = event.targetY;
+        this.posZ = event.targetZ;
         boolean flag = false;
         int i = MathHelper.floor_double(this.posX);
         int j = MathHelper.floor_double(this.posY);
@@ -324,7 +352,18 @@
 
             if (flag1)
             {
-                this.setPosition(this.posX, this.posY, this.posZ);
+                // CraftBukkit start - Teleport event
+                EntityTeleportEvent teleport = new EntityTeleportEvent(this.getBukkitEntity(), new Location(this.worldObj.getWorld(), d3, d4, d5), new Location(this.worldObj.getWorld(), this.posX, this.posY, this.posZ));
+                this.worldObj.getServer().getPluginManager().callEvent(teleport);
+
+                if (teleport.isCancelled())
+                {
+                    return false;
+                }
+
+                Location to = teleport.getTo();
+                this.setPosition(to.getX(), to.getY(), to.getZ());
+                // CraftBukkit end
 
                 if (this.worldObj.getCollidingBoundingBoxes(this, this.boundingBox).isEmpty() && !this.worldObj.isAnyLiquid(this.boundingBox))
                 {
@@ -402,12 +441,17 @@
 
         if (j > 0)
         {
-            int k = this.rand.nextInt(2 + par2);
-
-            for (int l = 0; l < k; ++l)
-            {
-                this.dropItem(j, 1);
-            }
+            // CraftBukkit start - Whole method
+            java.util.List<org.bukkit.inventory.ItemStack> loot = new java.util.ArrayList<org.bukkit.inventory.ItemStack>();
+            int count = this.rand.nextInt(2 + par2);
+
+            if ((j > 0) && (count > 0))
+            {
+                loot.add(new org.bukkit.inventory.ItemStack(j, count));
+            }
+
+            CraftEventFactory.callEntityDeathEvent(this, loot);
+            // CraftBukkit end
         }
     }
 
@@ -458,12 +502,12 @@
 
             if (par1DamageSource instanceof EntityDamageSource && par1DamageSource.getEntity() instanceof EntityPlayer)
             {
-                this.field_104003_g = true;
+                this.isAggressive = true;
             }
 
             if (par1DamageSource instanceof EntityDamageSourceIndirect)
             {
-                this.field_104003_g = false;
+                this.isAggressive = false;
 
                 for (int i = 0; i < 64; ++i)
                 {
@@ -473,7 +517,7 @@
                     }
                 }
 
-                return false;
+                return super.attackEntityFrom(par1DamageSource, par2);
             }
             else
             {
