--- a/net/minecraft/entity/monster/SlimeEntity.java
+++ b/net/minecraft/entity/monster/SlimeEntity.java
@@ -127,6 +_,7 @@
       if (this.onGround && !this.wasOnGround) {
          int i = this.getSize();
 
+         if (spawnCustomParticles()) i = 0; // don't spawn particles if it's handled by the implementation itself
          for(int j = 0; j < i * 8; ++j) {
             float f = this.random.nextFloat() * ((float)Math.PI * 2F);
             float f1 = this.random.nextFloat() * 0.5F + 0.5F;
@@ -178,9 +_,10 @@
       return (EntityType<? extends SlimeEntity>)super.getType();
    }
 
-   public void remove() {
+   @Override
+   public void remove(boolean keepData) {
       int i = this.getSize();
-      if (!this.level.isClientSide && i > 1 && this.isDeadOrDying()) {
+      if (!this.level.isClientSide && i > 1 && this.isDeadOrDying() && !this.removed) {
          ITextComponent itextcomponent = this.getCustomName();
          boolean flag = this.isNoAi();
          float f = (float)i / 4.0F;
@@ -204,7 +_,7 @@
          }
       }
 
-      super.remove();
+      super.remove(keepData);
    }
 
    public void push(Entity p_70108_1_) {
@@ -323,6 +_,12 @@
    public EntitySize getDimensions(Pose p_213305_1_) {
       return super.getDimensions(p_213305_1_).scale(0.255F * (float)this.getSize());
    }
+
+   /**
+    * Called when the slime spawns particles on landing, see onUpdate.
+    * Return true to prevent the spawning of the default particles.
+    */
+   protected boolean spawnCustomParticles() { return false; }
 
    static class AttackGoal extends Goal {
       private final SlimeEntity slime;
