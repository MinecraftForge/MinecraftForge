--- ../src_base/minecraft/net/minecraft/entity/player/InventoryPlayer.java
+++ ../src_work/minecraft/net/minecraft/entity/player/InventoryPlayer.java
@@ -1,8 +1,7 @@
 package net.minecraft.entity.player;
 
-import cpw.mods.fml.relauncher.Side;
-import cpw.mods.fml.relauncher.SideOnly;
 import net.minecraft.block.Block;
+import net.minecraft.block.material.Material;
 import net.minecraft.crash.CrashReport;
 import net.minecraft.crash.CrashReportCategory;
 import net.minecraft.inventory.IInventory;
@@ -12,6 +11,8 @@
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.nbt.NBTTagList;
 import net.minecraft.util.ReportedException;
+import cpw.mods.fml.relauncher.Side;
+import cpw.mods.fml.relauncher.SideOnly;
 
 public class InventoryPlayer implements IInventory
 {
@@ -357,6 +358,14 @@
             if (this.mainInventory[i] != null)
             {
                 this.mainInventory[i].updateAnimation(this.player.worldObj, this.player, i, this.currentItem == i);
+            }
+        }
+
+        for (int i = 0; i < this.armorInventory.length; i++)
+        {
+            if (this.armorInventory[i] != null)
+            {
+                this.armorInventory[i].getItem().onArmorTickUpdate(this.player.worldObj, this.player, this.armorInventory[i]);
             }
         }
     }
@@ -679,6 +688,7 @@
     /**
      * Returns whether the current item (tool) can harvest from the specified block (actually get a result).
      */
+    @Deprecated
     public boolean canHarvestBlock(Block par1Block)
     {
         if (par1Block.blockMaterial.isToolNotRequired())
@@ -691,6 +701,19 @@
             return itemstack != null ? itemstack.canHarvestBlock(par1Block) : false;
         }
     }
+    
+    public boolean canHarvestBlock(Block par1Block, Material par2Material)
+    {
+        if (par2Material.isToolNotRequired())
+        {
+            return true;
+        }
+        else
+        {
+            ItemStack itemstack = this.getStackInSlot(this.currentItem);
+            return itemstack != null ? itemstack.canHarvestBlock(par1Block, par2Material) : false;
+        }
+    }
 
     /**
      * returns a player armor item (as itemstack) contained in specified armor slot.
