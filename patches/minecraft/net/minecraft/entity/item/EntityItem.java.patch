--- ../src_base/minecraft/net/minecraft/entity/item/EntityItem.java
+++ ../src_work/minecraft/net/minecraft/entity/item/EntityItem.java
@@ -1,6 +1,11 @@
 package net.minecraft.entity.item;
 
 import java.util.Iterator;
+
+import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.event.Event.Result;
+import net.minecraftforge.event.entity.item.ItemExpireEvent;
+import net.minecraftforge.event.entity.player.EntityItemPickupEvent;
 
 import cpw.mods.fml.common.registry.GameRegistry;
 import net.minecraft.block.Block;
@@ -10,11 +15,14 @@
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.stats.AchievementList;
+import net.minecraft.stats.StatBase;
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.MathHelper;
 import net.minecraft.util.StatCollector;
 import net.minecraft.world.World;
+import org.bukkit.event.player.PlayerPickupItemEvent; // CraftBukkit
 
 public class EntityItem extends Entity
 {
@@ -29,10 +37,17 @@
 
     /** The EntityItem's random initial float height. */
     public float hoverStart;
+    private int lastTick = MinecraftServer.currentTick; // CraftBukkit
+
+    /**
+     * The maximum age of this EntityItem.  The item is expired once this is reached.
+     */
+    public int lifespan = 6000;
 
     public EntityItem(World par1World, double par2, double par4, double par6)
     {
         super(par1World);
+        this.age = 0;
         this.health = 5;
         this.hoverStart = (float)(Math.random() * Math.PI * 2.0D);
         this.setSize(0.25F, 0.25F);
@@ -42,12 +57,20 @@
         this.motionX = (double)((float)(Math.random() * 0.20000000298023224D - 0.10000000149011612D));
         this.motionY = 0.20000000298023224D;
         this.motionZ = (double)((float)(Math.random() * 0.20000000298023224D - 0.10000000149011612D));
+        this.lifespan = par1World == null ? lifespan : par1World.spigotConfig.itemDespawnRate; // MCPC+ - add null check
     }
 
     public EntityItem(World par1World, double par2, double par4, double par6, ItemStack par8ItemStack)
     {
         this(par1World, par2, par4, par6);
+        // CraftBukkit start - Can't set null items in the datawatcher
+        if (par8ItemStack == null || par8ItemStack.getItem() == null)
+        {
+            return;
+        }
+        // CraftBukkit end
         this.setEntityItemStack(par8ItemStack);
+        this.lifespan = (par8ItemStack.getItem() == null ? 6000 : par8ItemStack.getItem().getEntityLifespan(par8ItemStack, par1World));
     }
 
     /**
@@ -62,6 +85,7 @@
     public EntityItem(World par1World)
     {
         super(par1World);
+        this.age = 0;
         this.health = 5;
         this.hoverStart = (float)(Math.random() * Math.PI * 2.0D);
         this.setSize(0.25F, 0.25F);
@@ -78,22 +102,37 @@
      */
     public void onUpdate()
     {
+        ItemStack stack = this.getDataWatcher().getWatchableObjectItemStack(10);
+        if (stack != null && stack.getItem() != null)
+        {
+            if (stack.getItem().onEntityItemUpdate(this))
+            {
+                return;
+            }
+        }
+
         super.onUpdate();
-
-        if (this.delayBeforeCanPickup > 0)
-        {
-            --this.delayBeforeCanPickup;
-        }
-
+        // CraftBukkit start - Use wall time for pickup and despawn timers
+        int elapsedTicks = MinecraftServer.currentTick - this.lastTick;
+        this.delayBeforeCanPickup -= elapsedTicks;
+        this.age += elapsedTicks;
+        this.lastTick = MinecraftServer.currentTick;
+        // CraftBukkit end
+
+        boolean forceUpdate = this.ticksExisted > 0 && this.ticksExisted % 25 == 0; // MCPC+ - optimize item tick updates
         this.prevPosX = this.posX;
         this.prevPosY = this.posY;
         this.prevPosZ = this.posZ;
         this.motionY -= 0.03999999910593033D;
-        this.noClip = this.pushOutOfBlocks(this.posX, (this.boundingBox.minY + this.boundingBox.maxY) / 2.0D, this.posZ);
+        // MCPC+ start - if forced
+        if (forceUpdate || noClip) {
+            this.noClip = this.pushOutOfBlocks(this.posX, (this.boundingBox.minY + this.boundingBox.maxY) / 2.0D, this.posZ);
+        }
+        // MCPC+ end
         this.moveEntity(this.motionX, this.motionY, this.motionZ);
         boolean flag = (int)this.prevPosX != (int)this.posX || (int)this.prevPosY != (int)this.posY || (int)this.prevPosZ != (int)this.posZ;
 
-        if (flag || this.ticksExisted % 25 == 0)
+        if ((flag && this.ticksExisted % 5 == 0) || forceUpdate) // MCPC+ - if forced
         {
             if (this.worldObj.getBlockMaterial(MathHelper.floor_double(this.posX), MathHelper.floor_double(this.posY), MathHelper.floor_double(this.posZ)) == Material.lava)
             {
@@ -103,7 +142,7 @@
                 this.playSound("random.fizz", 0.4F, 2.0F + this.rand.nextFloat() * 0.4F);
             }
 
-            if (!this.worldObj.isRemote)
+            if (forceUpdate && !this.worldObj.isRemote) // MCPC+ - if forced
             {
                 this.searchForOtherItemsNearby();
             }
@@ -131,9 +170,38 @@
             this.motionY *= -0.5D;
         }
 
-        ++this.age;
-
-        if (!this.worldObj.isRemote && this.age >= 6000)
+        // ++this.age; // CraftBukkit - Moved up (base age on wall time)
+
+        ItemStack item = getDataWatcher().getWatchableObjectItemStack(10);
+        
+        if (!this.worldObj.isRemote && this.age >= lifespan)
+        {
+            // CraftBukkit start
+            if (org.bukkit.craftbukkit.event.CraftEventFactory.callItemDespawnEvent(this).isCancelled())
+            {
+                this.age = 0;
+                return;
+            }
+            // CraftBukkit end
+            if (item != null)
+            {   
+                ItemExpireEvent event = new ItemExpireEvent(this, (item.getItem() == null ? 6000 : item.getItem().getEntityLifespan(item, worldObj)));
+                if (MinecraftForge.EVENT_BUS.post(event))
+                {
+                    lifespan += event.extraLife;
+                }
+                else
+                {
+                    this.setDead();
+                }
+            }
+            else
+            {
+                this.setDead();
+            }
+        }
+
+        if (item != null && item.stackSize <= 0)
         {
             this.setDead();
         }
@@ -144,8 +212,11 @@
      */
     private void searchForOtherItemsNearby()
     {
-        Iterator iterator = this.worldObj.getEntitiesWithinAABB(EntityItem.class, this.boundingBox.expand(0.5D, 0.0D, 0.5D)).iterator();
-
+        // Spigot start
+        double radius = worldObj.spigotConfig.itemMerge;
+        Iterator iterator = this.worldObj.getEntitiesWithinAABB(EntityItem.class, this.boundingBox.expand(radius, radius, radius)).iterator();
+        // Spigot end
+        
         while (iterator.hasNext())
         {
             EntityItem entityitem = (EntityItem)iterator.next();
@@ -268,6 +339,7 @@
     {
         par1NBTTagCompound.setShort("Health", (short)((byte)this.health));
         par1NBTTagCompound.setShort("Age", (short)this.age);
+        par1NBTTagCompound.setInteger("Lifespan", lifespan);
 
         if (this.getEntityItem() != null)
         {
@@ -283,12 +355,36 @@
         this.health = par1NBTTagCompound.getShort("Health") & 255;
         this.age = par1NBTTagCompound.getShort("Age");
         NBTTagCompound nbttagcompound1 = par1NBTTagCompound.getCompoundTag("Item");
-        this.setEntityItemStack(ItemStack.loadItemStackFromNBT(nbttagcompound1));
-
-        if (this.getEntityItem() == null)
+        // CraftBukkit start
+        if (nbttagcompound1 != null)
+        {
+            ItemStack itemstack = ItemStack.loadItemStackFromNBT(nbttagcompound1);
+            if (itemstack != null)
+            {
+                this.setEntityItemStack(itemstack);
+            }
+            else
+            {
+                this.setDead();
+            }
+        }
+        else
         {
             this.setDead();
         }
+        // CraftBukkit end
+
+        ItemStack item = getDataWatcher().getWatchableObjectItemStack(10);
+
+        if (item == null || item.stackSize <= 0)
+        {
+            this.setDead();
+        }
+
+        if (par1NBTTagCompound.hasKey("Lifespan"))
+        {
+            lifespan = par1NBTTagCompound.getInteger("Lifespan");
+        }
     }
 
     /**
@@ -298,10 +394,47 @@
     {
         if (!this.worldObj.isRemote)
         {
+            if (this.delayBeforeCanPickup > 0)
+            {
+                return;
+            }
+
+            EntityItemPickupEvent event = new EntityItemPickupEvent(par1EntityPlayer, this);
+
+            if (MinecraftForge.EVENT_BUS.post(event))
+            {
+                return;
+            }
+
             ItemStack itemstack = this.getEntityItem();
             int i = itemstack.stackSize;
 
-            if (this.delayBeforeCanPickup == 0 && par1EntityPlayer.inventory.addItemStackToInventory(itemstack))
+            // CraftBukkit start
+            int canHold = par1EntityPlayer.inventory.canHold(itemstack);
+            int remaining = itemstack.stackSize - canHold;
+
+            if (this.delayBeforeCanPickup <= 0 && canHold > 0)
+            {
+                itemstack.stackSize = canHold;
+                // MCPC+ start - rename to cbEvent to fix naming collision
+                PlayerPickupItemEvent cbEvent = new PlayerPickupItemEvent((org.bukkit.entity.Player) par1EntityPlayer.getBukkitEntity(), (org.bukkit.entity.Item) this.getBukkitEntity(), remaining);
+                //cbEvent.setCancelled(!par1EntityPlayer.canPickUpLoot); TODO
+                this.worldObj.getServer().getPluginManager().callEvent(cbEvent);
+                itemstack.stackSize = canHold + remaining;
+
+                if (cbEvent.isCancelled())
+                {
+                    return;
+                }
+                // MCPC+ end
+
+                // Possibly < 0; fix here so we do not have to modify code below
+                this.delayBeforeCanPickup = 0;
+            }
+
+            // CraftBukkit end
+
+            if (this.delayBeforeCanPickup <= 0 && (event.getResult() == Result.ALLOW || i <= 0 || par1EntityPlayer.inventory.addItemStackToInventory(itemstack)))
             {
                 if (itemstack.itemID == Block.wood.blockID)
                 {
