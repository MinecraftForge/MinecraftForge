--- ../src_base/minecraft/net/minecraft/entity/item/EntityMinecartContainer.java
+++ ../src_work/minecraft/net/minecraft/entity/item/EntityMinecartContainer.java
@@ -8,6 +8,14 @@
 import net.minecraft.nbt.NBTTagList;
 import net.minecraft.util.DamageSource;
 import net.minecraft.world.World;
+import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.event.entity.minecart.MinecartInteractEvent;
+// CraftBukkit start
+import java.util.List;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.inventory.InventoryHolder;
+// CraftBukkit end
 
 public abstract class EntityMinecartContainer extends EntityMinecart implements IInventory
 {
@@ -18,6 +26,48 @@
      * dimensions) it preserves its contents.
      */
     private boolean dropContentsWhenDead = true;
+
+    // CraftBukkit start
+    public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+    private int maxStack = MAX_STACK;
+
+    public ItemStack[] getContents()
+    {
+        return this.minecartContainerItems;
+    }
+
+    public void onOpen(CraftHumanEntity who)
+    {
+        transaction.add(who);
+    }
+
+    public void onClose(CraftHumanEntity who)
+    {
+        transaction.remove(who);
+    }
+
+    public List<HumanEntity> getViewers()
+    {
+        return transaction;
+    }
+
+    public InventoryHolder getOwner()
+    {
+        org.bukkit.entity.Entity cart = getBukkitEntity();
+
+        if (cart instanceof InventoryHolder)
+        {
+            return (InventoryHolder) cart;
+        }
+
+        return null;
+    }
+
+    public void setMaxStackSize(int size)
+    {
+        maxStack = size;
+    }
+    // CraftBukkit end
 
     public EntityMinecartContainer(World par1World)
     {
@@ -280,6 +330,10 @@
 
     public boolean func_130002_c(EntityPlayer par1EntityPlayer)
     {
+        if(MinecraftForge.EVENT_BUS.post(new MinecartInteractEvent(this, par1EntityPlayer))) 
+        {
+            return true;
+        }
         if (!this.worldObj.isRemote)
         {
             par1EntityPlayer.displayGUIChest(this);
