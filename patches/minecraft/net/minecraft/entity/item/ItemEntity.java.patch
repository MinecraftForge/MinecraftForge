--- a/net/minecraft/entity/item/ItemEntity.java
+++ b/net/minecraft/entity/item/ItemEntity.java
@@ -38,6 +_,10 @@
    private UUID thrower;
    private UUID owner;
    public final float bobOffs;
+   /**
+    * The maximum age of this EntityItem.  The item is expired once this is reached.
+    */
+   public int lifespan = 6000;
 
    public ItemEntity(EntityType<? extends ItemEntity> p_i50217_1_, World p_i50217_2_) {
       super(p_i50217_1_, p_i50217_2_);
@@ -54,6 +_,7 @@
    public ItemEntity(World p_i1710_1_, double p_i1710_2_, double p_i1710_4_, double p_i1710_6_, ItemStack p_i1710_8_) {
       this(p_i1710_1_, p_i1710_2_, p_i1710_4_, p_i1710_6_);
       this.setItem(p_i1710_8_);
+      this.lifespan = (p_i1710_8_.getItem() == null ? 6000 : p_i1710_8_.getEntityLifespan(p_i1710_1_));
    }
 
    @OnlyIn(Dist.CLIENT)
@@ -74,6 +_,7 @@
    }
 
    public void tick() {
+      if (getItem().onEntityItemUpdate(this)) return;
       if (this.getItem().isEmpty()) {
          this.remove();
       } else {
@@ -108,7 +_,7 @@
             this.move(MoverType.SELF, this.getDeltaMovement());
             float f1 = 0.98F;
             if (this.onGround) {
-               f1 = this.level.getBlockState(new BlockPos(this.getX(), this.getY() - 1.0D, this.getZ())).getBlock().getFriction() * 0.98F;
+               f1 = this.level.getBlockState(new BlockPos(this.getX(), this.getY() - 1.0D, this.getZ())).getSlipperiness(level, new BlockPos(this.getX(), this.getY() - 1.0D, this.getZ()), this) * 0.98F;
             }
 
             this.setDeltaMovement(this.getDeltaMovement().multiply((double)f1, 0.98D, (double)f1));
@@ -144,7 +_,14 @@
             }
          }
 
-         if (!this.level.isClientSide && this.age >= 6000) {
+         ItemStack item = this.getItem();
+         if (!this.level.isClientSide && this.age >= lifespan) {
+             int hook = net.minecraftforge.event.ForgeEventFactory.onItemExpire(this, item);
+             if (hook < 0) this.remove();
+             else          this.lifespan += hook;
+         }
+
+         if (item.isEmpty()) {
             this.remove();
          }
 
@@ -202,6 +_,8 @@
          return false;
       } else if (p_226532_1_.hasTag() ^ p_226532_0_.hasTag()) {
          return false;
+      } else if (!p_226532_0_.areCapsCompatible(p_226532_1_)) {
+         return false;
       } else {
          return !p_226532_1_.hasTag() || p_226532_1_.getTag().equals(p_226532_0_.getTag());
       }
@@ -235,6 +_,7 @@
    }
 
    public boolean hurt(DamageSource p_70097_1_, float p_70097_2_) {
+      if (this.level.isClientSide || this.removed) return false; //Forge: Fixes MC-53850
       if (this.isInvulnerableTo(p_70097_1_)) {
          return false;
       } else if (!this.getItem().isEmpty() && this.getItem().getItem() == Items.NETHER_STAR && p_70097_1_.isExplosion()) {
@@ -256,6 +_,7 @@
       p_213281_1_.putShort("Health", (short)this.health);
       p_213281_1_.putShort("Age", (short)this.age);
       p_213281_1_.putShort("PickupDelay", (short)this.pickupDelay);
+      p_213281_1_.putInt("Lifespan", lifespan);
       if (this.getThrower() != null) {
          p_213281_1_.putUUID("Thrower", this.getThrower());
       }
@@ -276,6 +_,7 @@
       if (p_70037_1_.contains("PickupDelay")) {
          this.pickupDelay = p_70037_1_.getShort("PickupDelay");
       }
+      if (p_70037_1_.contains("Lifespan")) lifespan = p_70037_1_.getInt("Lifespan");
 
       if (p_70037_1_.hasUUID("Owner")) {
          this.owner = p_70037_1_.getUUID("Owner");
@@ -295,10 +_,18 @@
 
    public void playerTouch(PlayerEntity p_70100_1_) {
       if (!this.level.isClientSide) {
+         if (this.pickupDelay > 0) return;
          ItemStack itemstack = this.getItem();
          Item item = itemstack.getItem();
          int i = itemstack.getCount();
-         if (this.pickupDelay == 0 && (this.owner == null || this.owner.equals(p_70100_1_.getUUID())) && p_70100_1_.inventory.add(itemstack)) {
+
+         int hook = net.minecraftforge.event.ForgeEventFactory.onItemPickup(this, p_70100_1_);
+         if (hook < 0) return;
+
+         ItemStack copy = itemstack.copy();
+         if (this.pickupDelay == 0 && (this.owner == null || lifespan - this.age <= 200 || this.owner.equals(p_70100_1_.getUUID())) && (hook == 1 || i <= 0 || p_70100_1_.inventory.add(itemstack))) {
+            copy.setCount(copy.getCount() - getItem().getCount());
+            net.minecraftforge.fml.hooks.BasicEventHooks.firePlayerItemPickupEvent(p_70100_1_, this, copy);
             p_70100_1_.take(this, i);
             if (itemstack.isEmpty()) {
                this.remove();
@@ -322,8 +_,8 @@
    }
 
    @Nullable
-   public Entity changeDimension(ServerWorld p_241206_1_) {
-      Entity entity = super.changeDimension(p_241206_1_);
+   public Entity changeDimension(ServerWorld p_241206_1_, net.minecraftforge.common.util.ITeleporter teleporter) {
+      Entity entity = super.changeDimension(p_241206_1_, teleporter);
       if (!this.level.isClientSide && entity instanceof ItemEntity) {
          ((ItemEntity)entity).mergeWithNeighbours();
       }
@@ -396,7 +_,7 @@
 
    public void makeFakeItem() {
       this.setNeverPickUp();
-      this.age = 5999;
+      this.age = getItem().getEntityLifespan(level) - 1;
    }
 
    @OnlyIn(Dist.CLIENT)
