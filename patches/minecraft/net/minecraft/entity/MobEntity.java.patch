--- a/net/minecraft/entity/MobEntity.java
+++ b/net/minecraft/entity/MobEntity.java
@@ -198,6 +_,7 @@
 
    public void setTarget(@Nullable LivingEntity p_70624_1_) {
       this.target = p_70624_1_;
+      net.minecraftforge.common.ForgeHooks.onLivingSetAttackTarget(this, p_70624_1_);
    }
 
    public boolean canAttackType(EntityType<?> p_213358_1_) {
@@ -486,7 +_,7 @@
    public void aiStep() {
       super.aiStep();
       this.level.getProfiler().push("looting");
-      if (!this.level.isClientSide && this.canPickUpLoot() && this.isAlive() && !this.dead && this.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
+      if (!this.level.isClientSide && this.canPickUpLoot() && this.isAlive() && !this.dead && net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.level, this)) {
          for(ItemEntity itementity : this.level.getEntitiesOfClass(ItemEntity.class, this.getBoundingBox().inflate(1.0D, 0.0D, 1.0D))) {
             if (!itementity.removed && !itementity.getItem().isEmpty() && !itementity.hasPickUpDelay() && this.wantsToPickUp(itementity.getItem())) {
                this.pickUpItem(itementity);
@@ -639,6 +_,14 @@
          this.remove();
       } else if (!this.isPersistenceRequired() && !this.requiresCustomPersistence()) {
          Entity entity = this.level.getNearestPlayer(this, -1.0D);
+         net.minecraftforge.eventbus.api.Event.Result result = net.minecraftforge.event.ForgeEventFactory.canEntityDespawn(this);
+         if (result == net.minecraftforge.eventbus.api.Event.Result.DENY) {
+            noActionTime = 0;
+            entity = null;
+         } else if (result == net.minecraftforge.eventbus.api.Event.Result.ALLOW) {
+            this.remove();
+            entity = null;
+         }
          if (entity != null) {
             double d0 = entity.distanceToSqr(this);
             int i = this.getType().getCategory().getDespawnDistance();
@@ -879,6 +_,8 @@
    }
 
    public static EquipmentSlotType getEquipmentSlotForItem(ItemStack p_184640_0_) {
+      final EquipmentSlotType slot = p_184640_0_.getEquipmentSlot();
+      if (slot != null) return slot; // FORGE: Allow modders to set a non-default equipment slot for a stack; e.g. a non-armor chestplate-slot item
       Item item = p_184640_0_.getItem();
       if (item != Blocks.CARVED_PUMPKIN.asItem() && (!(item instanceof BlockItem) || !(((BlockItem)item).getBlock() instanceof AbstractSkullBlock))) {
          if (item instanceof ArmorItem) {
@@ -886,7 +_,7 @@
          } else if (item == Items.ELYTRA) {
             return EquipmentSlotType.CHEST;
          } else {
-            return item == Items.SHIELD ? EquipmentSlotType.OFFHAND : EquipmentSlotType.MAINHAND;
+            return p_184640_0_.isShield(null) ? EquipmentSlotType.OFFHAND : EquipmentSlotType.MAINHAND;
          }
       } else {
          return EquipmentSlotType.HEAD;
