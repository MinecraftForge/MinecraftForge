--- a/net/minecraft/entity/ai/attributes/GlobalEntityTypeAttributes.java
+++ b/net/minecraft/entity/ai/attributes/GlobalEntityTypeAttributes.java
@@ -72,13 +_,22 @@
 public class GlobalEntityTypeAttributes {
    private static final Logger LOGGER = LogManager.getLogger();
    private static final Map<EntityType<? extends LivingEntity>, AttributeModifierMap> SUPPLIERS = ImmutableMap.<EntityType<? extends LivingEntity>, AttributeModifierMap>builder().put(EntityType.ARMOR_STAND, LivingEntity.createLivingAttributes().build()).put(EntityType.BAT, BatEntity.createAttributes().build()).put(EntityType.BEE, BeeEntity.createAttributes().build()).put(EntityType.BLAZE, BlazeEntity.createAttributes().build()).put(EntityType.CAT, CatEntity.createAttributes().build()).put(EntityType.CAVE_SPIDER, CaveSpiderEntity.createCaveSpider().build()).put(EntityType.CHICKEN, ChickenEntity.createAttributes().build()).put(EntityType.COD, AbstractFishEntity.createAttributes().build()).put(EntityType.COW, CowEntity.createAttributes().build()).put(EntityType.CREEPER, CreeperEntity.createAttributes().build()).put(EntityType.DOLPHIN, DolphinEntity.createAttributes().build()).put(EntityType.DONKEY, AbstractChestedHorseEntity.createBaseChestedHorseAttributes().build()).put(EntityType.DROWNED, ZombieEntity.createAttributes().build()).put(EntityType.ELDER_GUARDIAN, ElderGuardianEntity.createAttributes().build()).put(EntityType.ENDERMAN, EndermanEntity.createAttributes().build()).put(EntityType.ENDERMITE, EndermiteEntity.createAttributes().build()).put(EntityType.ENDER_DRAGON, EnderDragonEntity.createAttributes().build()).put(EntityType.EVOKER, EvokerEntity.createAttributes().build()).put(EntityType.FOX, FoxEntity.createAttributes().build()).put(EntityType.GHAST, GhastEntity.createAttributes().build()).put(EntityType.GIANT, GiantEntity.createAttributes().build()).put(EntityType.GUARDIAN, GuardianEntity.createAttributes().build()).put(EntityType.HOGLIN, HoglinEntity.createAttributes().build()).put(EntityType.HORSE, AbstractHorseEntity.createBaseHorseAttributes().build()).put(EntityType.HUSK, ZombieEntity.createAttributes().build()).put(EntityType.ILLUSIONER, IllusionerEntity.createAttributes().build()).put(EntityType.IRON_GOLEM, IronGolemEntity.createAttributes().build()).put(EntityType.LLAMA, LlamaEntity.createAttributes().build()).put(EntityType.MAGMA_CUBE, MagmaCubeEntity.createAttributes().build()).put(EntityType.MOOSHROOM, CowEntity.createAttributes().build()).put(EntityType.MULE, AbstractChestedHorseEntity.createBaseChestedHorseAttributes().build()).put(EntityType.OCELOT, OcelotEntity.createAttributes().build()).put(EntityType.PANDA, PandaEntity.createAttributes().build()).put(EntityType.PARROT, ParrotEntity.createAttributes().build()).put(EntityType.PHANTOM, MonsterEntity.createMonsterAttributes().build()).put(EntityType.PIG, PigEntity.createAttributes().build()).put(EntityType.PIGLIN, PiglinEntity.createAttributes().build()).put(EntityType.PIGLIN_BRUTE, PiglinBruteEntity.createAttributes().build()).put(EntityType.PILLAGER, PillagerEntity.createAttributes().build()).put(EntityType.PLAYER, PlayerEntity.createAttributes().build()).put(EntityType.POLAR_BEAR, PolarBearEntity.createAttributes().build()).put(EntityType.PUFFERFISH, AbstractFishEntity.createAttributes().build()).put(EntityType.RABBIT, RabbitEntity.createAttributes().build()).put(EntityType.RAVAGER, RavagerEntity.createAttributes().build()).put(EntityType.SALMON, AbstractFishEntity.createAttributes().build()).put(EntityType.SHEEP, SheepEntity.createAttributes().build()).put(EntityType.SHULKER, ShulkerEntity.createAttributes().build()).put(EntityType.SILVERFISH, SilverfishEntity.createAttributes().build()).put(EntityType.SKELETON, AbstractSkeletonEntity.createAttributes().build()).put(EntityType.SKELETON_HORSE, SkeletonHorseEntity.createAttributes().build()).put(EntityType.SLIME, MonsterEntity.createMonsterAttributes().build()).put(EntityType.SNOW_GOLEM, SnowGolemEntity.createAttributes().build()).put(EntityType.SPIDER, SpiderEntity.createAttributes().build()).put(EntityType.SQUID, SquidEntity.createAttributes().build()).put(EntityType.STRAY, AbstractSkeletonEntity.createAttributes().build()).put(EntityType.STRIDER, StriderEntity.createAttributes().build()).put(EntityType.TRADER_LLAMA, LlamaEntity.createAttributes().build()).put(EntityType.TROPICAL_FISH, AbstractFishEntity.createAttributes().build()).put(EntityType.TURTLE, TurtleEntity.createAttributes().build()).put(EntityType.VEX, VexEntity.createAttributes().build()).put(EntityType.VILLAGER, VillagerEntity.createAttributes().build()).put(EntityType.VINDICATOR, VindicatorEntity.createAttributes().build()).put(EntityType.WANDERING_TRADER, MobEntity.createMobAttributes().build()).put(EntityType.WITCH, WitchEntity.createAttributes().build()).put(EntityType.WITHER, WitherEntity.createAttributes().build()).put(EntityType.WITHER_SKELETON, AbstractSkeletonEntity.createAttributes().build()).put(EntityType.WOLF, WolfEntity.createAttributes().build()).put(EntityType.ZOGLIN, ZoglinEntity.createAttributes().build()).put(EntityType.ZOMBIE, ZombieEntity.createAttributes().build()).put(EntityType.ZOMBIE_HORSE, ZombieHorseEntity.createAttributes().build()).put(EntityType.ZOMBIE_VILLAGER, ZombieEntity.createAttributes().build()).put(EntityType.ZOMBIFIED_PIGLIN, ZombifiedPiglinEntity.createAttributes().build()).build();
+   @Deprecated // Remove in 1.17
+   private static final Map<EntityType<? extends LivingEntity>, AttributeModifierMap> FORGE_ATTRIBUTES = net.minecraftforge.common.ForgeHooks.getAttributesView();
+
+   /** FORGE: Use net.minecraftforge.event.entity.EntityAttributeCreationEvent#put To be removed in 1.17 */
+   @Deprecated
+   public static AttributeModifierMap put(EntityType<? extends LivingEntity> type, AttributeModifierMap map) {
+      return net.minecraftforge.common.ForgeHooks.putAttributesOld(type, map);
+   }
 
    public static AttributeModifierMap getSupplier(EntityType<? extends LivingEntity> p_233835_0_) {
-      return SUPPLIERS.get(p_233835_0_);
+      AttributeModifierMap map = FORGE_ATTRIBUTES.get(p_233835_0_);
+      return map != null ? map : SUPPLIERS.get(p_233835_0_);
    }
 
    public static boolean hasSupplier(EntityType<?> p_233837_0_) {
-      return SUPPLIERS.containsKey(p_233837_0_);
+      return SUPPLIERS.containsKey(p_233837_0_) || FORGE_ATTRIBUTES.containsKey(p_233837_0_);
    }
 
    public static void validate() {
