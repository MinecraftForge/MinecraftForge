--- ../src_base/minecraft/net/minecraft/entity/ai/EntityAITasks.java
+++ ../src_work/minecraft/net/minecraft/entity/ai/EntityAITasks.java
@@ -4,14 +4,17 @@
 import java.util.Iterator;
 import java.util.List;
 import net.minecraft.profiler.Profiler;
+import org.bukkit.craftbukkit.util.UnsafeList; // CraftBukkit
 
 public class EntityAITasks
 {
+    // CraftBukkit start - ArrayList -> UnsafeList
     /** A list of EntityAITaskEntrys in EntityAITasks. */
-    public List taskEntries = new ArrayList();
+    public List taskEntries = new ArrayList(); // MCPC+ - private->public, UnsafeList -> ArrayList
 
     /** A list of EntityAITaskEntrys that are currently being executed. */
-    private List executingTaskEntries = new ArrayList();
+    private List executingTaskEntries = new UnsafeList();
+    // CraftBukkit end
 
     /** Instance of Profiler. */
     private final Profiler theProfiler;
@@ -55,7 +58,7 @@
 
     public void onUpdateTasks()
     {
-        ArrayList arraylist = new ArrayList();
+        // ArrayList arraylist = new ArrayList(); // CraftBukkit - remove usage
         Iterator iterator;
         EntityAITaskEntry entityaitaskentry;
 
@@ -81,7 +84,10 @@
 
                 if (this.canUse(entityaitaskentry) && entityaitaskentry.action.shouldExecute())
                 {
-                    arraylist.add(entityaitaskentry);
+                    // CraftBukkit start - call method now instead of queueing
+                    // arraylist.add(entityaitaskentry);
+                    entityaitaskentry.action.startExecuting();
+                    // CraftBukkit end
                     this.executingTaskEntries.add(entityaitaskentry);
                 }
             }
@@ -103,7 +109,8 @@
         }
 
         this.theProfiler.startSection("goalStart");
-        iterator = arraylist.iterator();
+        // CraftBukkit start - removed usage of arraylist
+        /*iterator = arraylist.iterator();
 
         while (iterator.hasNext())
         {
@@ -111,8 +118,8 @@
             this.theProfiler.startSection(entityaitaskentry.action.getClass().getSimpleName());
             entityaitaskentry.action.startExecuting();
             this.theProfiler.endSection();
-        }
-
+        }*/
+        // CraftBukkit end
         this.theProfiler.endSection();
         this.theProfiler.startSection("goalTick");
         iterator = this.executingTaskEntries.iterator();
@@ -154,15 +161,20 @@
             {
                 if (par1EntityAITaskEntry.priority >= entityaitaskentry1.priority)
                 {
-                    if (this.executingTaskEntries.contains(entityaitaskentry1) && !this.areTasksCompatible(par1EntityAITaskEntry, entityaitaskentry1))
+                    // CraftBukkit - switch order
+                    if (!this.areTasksCompatible(par1EntityAITaskEntry, entityaitaskentry1) && this.executingTaskEntries.contains(entityaitaskentry1))
                     {
                         this.theProfiler.endSection();
+                        //((UnsafeList.Itr) iterator).valid = false; // CraftBukkit - mark iterator for reuse // MCPC+
                         return false;
                     }
+
+                    // CraftBukkit - switch order
                 }
-                else if (this.executingTaskEntries.contains(entityaitaskentry1) && !entityaitaskentry1.action.isInterruptible())
+                else if (!entityaitaskentry1.action.isInterruptible() && this.executingTaskEntries.contains(entityaitaskentry1))
                 {
                     this.theProfiler.endSection();
+                    //((UnsafeList.Itr) iterator).valid = false; // CraftBukkit - mark iterator for reuse // MCPC+
                     return false;
                 }
             }
