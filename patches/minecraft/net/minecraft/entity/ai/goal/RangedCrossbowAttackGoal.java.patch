--- a/net/minecraft/entity/ai/goal/RangedCrossbowAttackGoal.java
+++ b/net/minecraft/entity/ai/goal/RangedCrossbowAttackGoal.java
@@ -33,7 +_,7 @@
    }
 
    private boolean isHoldingCrossbow() {
-      return this.mob.isHolding(Items.CROSSBOW);
+      return this.mob.isHolding(item -> item instanceof CrossbowItem);
    }
 
    public boolean canContinueToUse() {
@@ -88,7 +_,7 @@
          this.mob.getLookControl().setLookAt(livingentity, 30.0F, 30.0F);
          if (this.crossbowState == RangedCrossbowAttackGoal.CrossbowState.UNCHARGED) {
             if (!flag2) {
-               this.mob.startUsingItem(ProjectileHelper.getWeaponHoldingHand(this.mob, Items.CROSSBOW));
+               this.mob.startUsingItem(ProjectileHelper.getWeaponHoldingHand(this.mob, item -> item instanceof CrossbowItem));
                this.crossbowState = RangedCrossbowAttackGoal.CrossbowState.CHARGING;
                this.mob.setChargingCrossbow(true);
             }
@@ -112,7 +_,7 @@
             }
          } else if (this.crossbowState == RangedCrossbowAttackGoal.CrossbowState.READY_TO_ATTACK && flag) {
             this.mob.performRangedAttack(livingentity, 1.0F);
-            ItemStack itemstack1 = this.mob.getItemInHand(ProjectileHelper.getWeaponHoldingHand(this.mob, Items.CROSSBOW));
+            ItemStack itemstack1 = this.mob.getItemInHand(ProjectileHelper.getWeaponHoldingHand(this.mob, item -> item instanceof CrossbowItem));
             CrossbowItem.setCharged(itemstack1, false);
             this.crossbowState = RangedCrossbowAttackGoal.CrossbowState.UNCHARGED;
          }
