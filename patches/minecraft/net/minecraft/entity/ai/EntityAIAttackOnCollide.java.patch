--- ../src_base/minecraft/net/minecraft/entity/ai/EntityAIAttackOnCollide.java
+++ ../src_work/minecraft/net/minecraft/entity/ai/EntityAIAttackOnCollide.java
@@ -3,8 +3,10 @@
 import net.minecraft.entity.EntityCreature;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.pathfinding.PathEntity;
+import net.minecraft.pathfinding.PathPoint;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
+import org.bukkit.event.entity.EntityTargetEvent; // CraftBukkit
 
 public class EntityAIAttackOnCollide extends EntityAIBase
 {
@@ -15,13 +17,21 @@
      * An amount of decrementing ticks that allows the entity to attack once the tick reaches 0.
      */
     int attackTick;
-    double field_75440_e;
-    boolean field_75437_f;
+
+    /** The speed with which the mob will approach the target */
+    double speedTowardsTarget;
+
+    /**
+     * When true, the mob will continue chasing its target, even if it can't find a path to them right now.
+     */
+    boolean longMemory;
 
     /** The PathEntity of our entity. */
     PathEntity entityPathEntity;
     Class classTarget;
     private int field_75445_i;
+
+    private int failedPathFindingPenalty;
 
     public EntityAIAttackOnCollide(EntityCreature par1EntityCreature, Class par2Class, double par3, boolean par5)
     {
@@ -33,8 +43,8 @@
     {
         this.attacker = par1EntityCreature;
         this.worldObj = par1EntityCreature.worldObj;
-        this.field_75440_e = par2;
-        this.field_75437_f = par4;
+        this.speedTowardsTarget = par2;
+        this.longMemory = par4;
         this.setMutexBits(3);
     }
 
@@ -59,8 +69,16 @@
         }
         else
         {
-            this.entityPathEntity = this.attacker.getNavigator().getPathToEntityLiving(entitylivingbase);
-            return this.entityPathEntity != null;
+            if (-- this.field_75445_i <= 0)
+            {
+                this.entityPathEntity = this.attacker.getNavigator().getPathToEntityLiving(entitylivingbase);
+                this.field_75445_i = 4 + this.attacker.getRNG().nextInt(7);
+                return this.entityPathEntity != null;
+            }
+            else
+            {
+                return true;
+            }
         }
     }
 
@@ -70,7 +88,16 @@
     public boolean continueExecuting()
     {
         EntityLivingBase entitylivingbase = this.attacker.getAttackTarget();
-        return entitylivingbase == null ? false : (!entitylivingbase.isEntityAlive() ? false : (!this.field_75437_f ? !this.attacker.getNavigator().noPath() : this.attacker.func_110176_b(MathHelper.floor_double(entitylivingbase.posX), MathHelper.floor_double(entitylivingbase.posY), MathHelper.floor_double(entitylivingbase.posZ))));
+        // CraftBukkit start
+        EntityTargetEvent.TargetReason reason = this.attacker.getAttackTarget() == null ? EntityTargetEvent.TargetReason.FORGOT_TARGET : EntityTargetEvent.TargetReason.TARGET_DIED;
+
+        if (this.attacker.getAttackTarget() == null || (this.attacker.getAttackTarget() != null && !this.attacker.getAttackTarget().isEntityAlive()))
+        {
+            org.bukkit.craftbukkit.event.CraftEventFactory.callEntityTargetEvent(attacker, null, reason);
+        }
+
+        // CraftBukkit end
+        return entitylivingbase == null ? false : (!entitylivingbase.isEntityAlive() ? false : (!this.longMemory ? !this.attacker.getNavigator().noPath() : this.attacker.func_110176_b(MathHelper.floor_double(entitylivingbase.posX), MathHelper.floor_double(entitylivingbase.posY), MathHelper.floor_double(entitylivingbase.posZ))));
     }
 
     /**
@@ -78,7 +105,7 @@
      */
     public void startExecuting()
     {
-        this.attacker.getNavigator().setPath(this.entityPathEntity, this.field_75440_e);
+        this.attacker.getNavigator().setPath(this.entityPathEntity, this.speedTowardsTarget);
         this.field_75445_i = 0;
     }
 
@@ -98,10 +125,26 @@
         EntityLivingBase entitylivingbase = this.attacker.getAttackTarget();
         this.attacker.getLookHelper().setLookPositionWithEntity(entitylivingbase, 30.0F, 30.0F);
 
-        if ((this.field_75437_f || this.attacker.getEntitySenses().canSee(entitylivingbase)) && --this.field_75445_i <= 0)
+        if ((this.longMemory || this.attacker.getEntitySenses().canSee(entitylivingbase)) && --this.field_75445_i <= 0)
         {
-            this.field_75445_i = 4 + this.attacker.getRNG().nextInt(7);
-            this.attacker.getNavigator().tryMoveToEntityLiving(entitylivingbase, this.field_75440_e);
+            this.field_75445_i = failedPathFindingPenalty + 4 + this.attacker.getRNG().nextInt(7);
+            this.attacker.getNavigator().tryMoveToEntityLiving(entitylivingbase, this.speedTowardsTarget);
+            if (this.attacker.getNavigator().getPath() != null)
+            {
+                PathPoint finalPathPoint = this.attacker.getNavigator().getPath().getFinalPathPoint();
+                if (finalPathPoint != null && entitylivingbase.getDistanceSq(finalPathPoint.xCoord, finalPathPoint.yCoord, finalPathPoint.zCoord) < 1)
+                {
+                    failedPathFindingPenalty = 0;
+                }
+                else
+                {
+                    failedPathFindingPenalty += 10;
+                }
+            }
+            else
+            {
+                failedPathFindingPenalty += 10;
+            }
         }
 
         this.attackTick = Math.max(this.attackTick - 1, 0);
