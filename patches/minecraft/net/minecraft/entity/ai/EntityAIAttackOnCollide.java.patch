--- ../src_base/minecraft/net/minecraft/entity/ai/EntityAIAttackOnCollide.java
+++ ../src_work/minecraft/net/minecraft/entity/ai/EntityAIAttackOnCollide.java
@@ -3,6 +3,7 @@
 import net.minecraft.entity.EntityCreature;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.pathfinding.PathEntity;
+import net.minecraft.pathfinding.PathPoint;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
 
@@ -28,6 +29,8 @@
     PathEntity entityPathEntity;
     Class classTarget;
     private int field_75445_i;
+
+    private int failedPathFindingPenalty;
 
     public EntityAIAttackOnCollide(EntityCreature par1EntityCreature, Class par2Class, double par3, boolean par5)
     {
@@ -65,8 +68,16 @@
         }
         else
         {
-            this.entityPathEntity = this.attacker.getNavigator().getPathToEntityLiving(entitylivingbase);
-            return this.entityPathEntity != null;
+            if (-- this.field_75445_i <= 0)
+            {
+                this.entityPathEntity = this.attacker.getNavigator().getPathToEntityLiving(entitylivingbase);
+                this.field_75445_i = 4 + this.attacker.getRNG().nextInt(7);
+                return this.entityPathEntity != null;
+            }
+            else
+            {
+                return true;
+            }
         }
     }
 
@@ -106,8 +117,24 @@
 
         if ((this.longMemory || this.attacker.getEntitySenses().canSee(entitylivingbase)) && --this.field_75445_i <= 0)
         {
-            this.field_75445_i = 4 + this.attacker.getRNG().nextInt(7);
+            this.field_75445_i = failedPathFindingPenalty + 4 + this.attacker.getRNG().nextInt(7);
             this.attacker.getNavigator().tryMoveToEntityLiving(entitylivingbase, this.speedTowardsTarget);
+            if (this.attacker.getNavigator().getPath() != null)
+            {
+                PathPoint finalPathPoint = this.attacker.getNavigator().getPath().getFinalPathPoint();
+                if (finalPathPoint != null && entitylivingbase.getDistanceSq(finalPathPoint.xCoord, finalPathPoint.yCoord, finalPathPoint.zCoord) < 1)
+                {
+                    failedPathFindingPenalty = 0;
+                }
+                else
+                {
+                    failedPathFindingPenalty += 10;
+                }
+            }
+            else
+            {
+                failedPathFindingPenalty += 10;
+            }
         }
 
         this.attackTick = Math.max(this.attackTick - 1, 0);
