--- ../src-base/minecraft/net/minecraft/entity/EntityLivingBase.java
+++ ../src-work/minecraft/net/minecraft/entity/EntityLivingBase.java
@@ -19,6 +19,7 @@
 import net.minecraft.entity.item.EntityItem;
 import net.minecraft.entity.item.EntityXPOrb;
 import net.minecraft.entity.monster.EntityZombie;
+import net.minecraft.entity.passive.EntityPig;
 import net.minecraft.entity.passive.EntityWolf;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EntityPlayerMP;
@@ -48,6 +49,7 @@
 import net.minecraft.util.Vec3;
 import net.minecraft.world.World;
 import net.minecraft.world.WorldServer;
+import net.minecraftforge.common.ForgeHooks;
 
 public abstract class EntityLivingBase extends Entity
 {
@@ -225,7 +227,7 @@
                 }
             }
 
-            if (!this.field_70170_p.field_72995_K && this.func_70115_ae() && this.field_70154_o instanceof EntityLivingBase)
+            if (!this.field_70170_p.field_72995_K && this.func_70115_ae() && this.field_70154_o != null && field_70154_o.shouldDismountInWater(this))
             {
                 this.func_70078_a((Entity)null);
             }
@@ -374,6 +376,7 @@
     {
         this.field_70755_b = p_70604_1_;
         this.field_70756_c = this.field_70173_aa;
+        ForgeHooks.onLivingSetAttackTarget(this, p_70604_1_);
     }
 
     public EntityLivingBase func_110144_aD()
@@ -661,7 +664,6 @@
         return this.func_70668_bt() == EnumCreatureAttribute.UNDEAD;
     }
 
-    @SideOnly(Side.CLIENT)
     public void func_70618_n(int p_70618_1_)
     {
         this.field_70713_bf.remove(Integer.valueOf(p_70618_1_));
@@ -730,6 +732,7 @@
 
     public boolean func_70097_a(DamageSource p_70097_1_, float p_70097_2_)
     {
+        if (ForgeHooks.onLivingAttack(this, p_70097_1_, p_70097_2_)) return false;
         if (this.func_85032_ar())
         {
             return false;
@@ -883,6 +886,7 @@
 
     public void func_70645_a(DamageSource p_70645_1_)
     {
+        if (ForgeHooks.onLivingDeath(this, p_70645_1_)) return;
         Entity entity = p_70645_1_.func_76346_g();
         EntityLivingBase entitylivingbase = this.func_94060_bK();
 
@@ -907,6 +911,10 @@
                 i = EnchantmentHelper.func_77519_f((EntityLivingBase)entity);
             }
 
+            captureDrops = true;
+            capturedDrops.clear();
+            int j = 0;
+
             if (this.func_146066_aG() && this.field_70170_p.func_82736_K().func_82766_b("doMobLoot"))
             {
                 this.func_70628_a(this.field_70718_bc > 0, i);
@@ -914,7 +922,7 @@
 
                 if (this.field_70718_bc > 0)
                 {
-                    int j = this.field_70146_Z.nextInt(200) - i;
+                    j = this.field_70146_Z.nextInt(200) - i;
 
                     if (j < 5)
                     {
@@ -922,6 +930,16 @@
                     }
                 }
             }
+
+            captureDrops = false;
+
+            if (!ForgeHooks.onLivingDrops(this, p_70645_1_, capturedDrops, i, field_70718_bc > 0, j))
+            {
+                for (EntityItem item : capturedDrops)
+                {
+                    field_70170_p.func_72838_d(item);
+                }
+            }
         }
 
         this.field_70170_p.func_72960_a(this, (byte)3);
@@ -970,7 +988,7 @@
         int j = MathHelper.func_76128_c(this.field_70121_D.field_72338_b);
         int k = MathHelper.func_76128_c(this.field_70161_v);
         Block block = this.field_70170_p.func_147439_a(i, j, k);
-        return block == Blocks.field_150468_ap || block == Blocks.field_150395_bd;
+        return ForgeHooks.isLivingOnLadder(block, field_70170_p, i, j, k, this);
     }
 
     public boolean func_70089_S()
@@ -980,6 +998,8 @@
 
     protected void func_70069_a(float p_70069_1_)
     {
+        p_70069_1_ = ForgeHooks.onLivingFall(this, p_70069_1_);
+        if (p_70069_1_ <= 0) return;
         super.func_70069_a(p_70069_1_);
         PotionEffect potioneffect = this.func_70660_b(Potion.field_76430_j);
         float f1 = potioneffect != null ? (float)(potioneffect.func_76458_c() + 1) : 0.0F;
@@ -1059,7 +1079,7 @@
         {
             if (this instanceof EntityZombie)
             {
-                p_70672_2_ = p_70672_2_;
+                //par2 = par2; // Forge: Noop Warning
             }
 
             int i;
@@ -1103,6 +1123,8 @@
     {
         if (!this.func_85032_ar())
         {
+            p_70665_2_ = ForgeHooks.onLivingHurt(this, p_70665_1_, p_70665_2_);
+            if (p_70665_2_ <= 0) return;
             p_70665_2_ = this.func_70655_b(p_70665_1_, p_70665_2_);
             p_70665_2_ = this.func_70672_c(p_70665_1_, p_70665_2_);
             float f1 = p_70665_2_;
@@ -1151,6 +1173,17 @@
 
     public void func_71038_i()
     {
+        ItemStack stack = this.func_70694_bm();
+
+        if (stack != null && stack.func_77973_b() != null)
+        {
+            Item item = stack.func_77973_b();
+            if (item.onEntitySwing(this, stack))
+            {
+                return;
+            }
+        }
+
         if (!this.field_82175_bq || this.field_110158_av >= this.func_82166_i() / 2 || this.field_110158_av < 0)
         {
             this.field_110158_av = -1;
@@ -1331,13 +1364,13 @@
 
     protected void func_70664_aZ()
     {
-        this.field_70181_x = 0.41999998688697815D;
+        this.field_70181_x = getInitialJumpSpeed();
 
-        if (this.func_70644_a(Potion.field_76430_j))
-        {
-            this.field_70181_x += (double)((float)(this.func_70660_b(Potion.field_76430_j).func_76458_c() + 1) * 0.1F);
-        }
 
+
+
+
+
         if (this.func_70051_ag())
         {
             float f = this.field_70177_z * 0.017453292F;
@@ -1346,6 +1379,7 @@
         }
 
         this.field_70160_al = true;
+        ForgeHooks.onLivingJump(this);
     }
 
     public void func_70612_e(float p_70612_1_, float p_70612_2_)
@@ -1358,9 +1392,9 @@
             this.func_70060_a(p_70612_1_, p_70612_2_, this.func_70650_aV() ? 0.04F : 0.02F);
             this.func_70091_d(this.field_70159_w, this.field_70181_x, this.field_70179_y);
             this.field_70159_w *= 0.800000011920929D;
-            this.field_70181_x *= 0.800000011920929D;
+            this.field_70181_x *= getYFriction(true, false);
             this.field_70179_y *= 0.800000011920929D;
-            this.field_70181_x -= 0.02D;
+            this.field_70181_x -= getGravity(true, false);
 
             if (this.field_70123_F && this.func_70038_c(this.field_70159_w, this.field_70181_x + 0.6000000238418579D - this.field_70163_u + d0, this.field_70179_y))
             {
@@ -1373,9 +1407,9 @@
             this.func_70060_a(p_70612_1_, p_70612_2_, 0.02F);
             this.func_70091_d(this.field_70159_w, this.field_70181_x, this.field_70179_y);
             this.field_70159_w *= 0.5D;
-            this.field_70181_x *= 0.5D;
+            this.field_70181_x *= getYFriction(false, true);
             this.field_70179_y *= 0.5D;
-            this.field_70181_x -= 0.02D;
+            this.field_70181_x -= getGravity(false, true);
 
             if (this.field_70123_F && this.func_70038_c(this.field_70159_w, this.field_70181_x + 0.6000000238418579D - this.field_70163_u + d0, this.field_70179_y))
             {
@@ -1470,10 +1504,10 @@
             }
             else
             {
-                this.field_70181_x -= 0.08D;
+                this.field_70181_x -= getGravity(false, false);
             }
 
-            this.field_70181_x *= 0.9800000190734863D;
+            this.field_70181_x *= getYFriction(false, false);
             this.field_70159_w *= (double)f2;
             this.field_70179_y *= (double)f2;
         }
@@ -1520,6 +1554,7 @@
 
     public void func_70071_h_()
     {
+        if (ForgeHooks.onLivingUpdate(this)) return;
         super.func_70071_h_();
 
         if (!this.field_70170_p.field_72995_K)
@@ -2000,4 +2035,124 @@
     {
         return this.func_96124_cp() != null ? this.func_96124_cp().func_142054_a(p_142012_1_) : false;
     }
+
+    /**************** Start Forge modification **************/
+
+    /**
+     * Return the gravity applied on this entity
+     * @param inWater   True if the entity is in water
+     * @param inLava    True if the entity is in lava
+     * @return The gravity to apply
+     */
+    protected double getGravity(boolean inWater, boolean inLava)
+    {
+        return inWater ? 0.02D : inLava ? 0.02D : 0.08D;
+    }
+
+    /**
+     * Return the Y friction of the entity
+     * @param inWater   True if the entity is in water
+     * @param inLava    True if the entity is in lava
+     * @return The friction on Y axis
+     */
+    protected double getYFriction(boolean inWater, boolean inLava)
+    {
+        return inWater ? 0.800000011920929D : inLava ? 0.5D : 0.9800000190734863D;
+    }
+
+    /**
+     * Compute and return the jump height of this entity
+     * @return The maximal jump height
+     */
+    public double getJumpHeight()
+    {
+        double jumpSpeed = getInitialJumpSpeed();
+        double jumpHeight = 0;
+
+        if (this.func_70090_H() && (!(this instanceof EntityPlayer) || !((EntityPlayer)this).field_71075_bZ.field_75100_b))
+        {
+            while (jumpSpeed > 0)
+            {
+                jumpHeight += jumpSpeed;
+
+                jumpSpeed *= getYFriction(true, false);
+                jumpSpeed -= getGravity(true, false);
+            }
+        }
+        else if (this.func_70058_J() && (!(this instanceof EntityPlayer) || !((EntityPlayer)this).field_71075_bZ.field_75100_b))
+        {
+            jumpHeight += jumpSpeed;
+
+            jumpSpeed *= getYFriction(false, true);;
+            jumpSpeed -= getGravity(false, true);;
+        }
+        else
+        {
+            while (jumpSpeed > 0)
+            {
+                jumpHeight += jumpSpeed;
+
+                jumpSpeed -= getGravity(false, false);;
+                jumpSpeed *= getYFriction(false, false);;
+            }
+        }
+
+        return jumpHeight;
+    }
+
+    /**
+     * Return the initial jump velocity of this entity
+     * @return The initial jump velocity
+     */
+    protected double getInitialJumpSpeed()
+    {
+        double jumpSpeed = 0.41999998688697815D;
+
+        if (this.func_70644_a(Potion.field_76430_j))
+        {
+            jumpSpeed += (double)((float)(this.func_70660_b(Potion.field_76430_j).func_76458_c() + 1) * 0.1F);
+        }
+
+        return ForgeHooks.onGetLivingJumpSpeed(this, jumpSpeed);
+    }
+
+    /***
+     * Removes all potion effects that have curativeItem as a curative item for its effect
+     * @param curativeItem The itemstack we are using to cure potion effects
+     */
+    public void curePotionEffects(ItemStack curativeItem)
+    {
+        Iterator<Integer> potionKey = field_70713_bf.keySet().iterator();
+
+        if (field_70170_p.field_72995_K)
+        {
+            return;
+        }
+
+        while (potionKey.hasNext())
+        {
+            Integer key = potionKey.next();
+            PotionEffect effect = (PotionEffect)field_70713_bf.get(key);
+
+            if (effect.isCurativeItem(curativeItem))
+            {
+                potionKey.remove();
+                func_70688_c(effect);
+            }
+        }
+    }
+
+    /**
+     * Returns true if the entity's rider (EntityPlayer) should face forward when mounted.
+     * currently only used in vanilla code by pigs.
+     *
+     * @param player The player who is riding the entity.
+     * @return If the player should orient the same direction as this entity.
+     */
+    public boolean shouldRiderFaceForward(EntityPlayer player)
+    {
+        return this instanceof EntityPig;
+    }
+
+    /**************** End Forge modification **************/
 }
