--- a/net/minecraft/entity/passive/horse/AbstractHorseEntity.java
+++ b/net/minecraft/entity/passive/horse/AbstractHorseEntity.java
@@ -276,6 +_,7 @@
 
       this.inventory.addListener(this);
       this.updateContainerEquipment();
+      this.itemHandler = net.minecraftforge.common.util.LazyOptional.of(() -> new net.minecraftforge.items.wrapper.InvWrapper(this.inventory));
    }
 
    protected void updateContainerEquipment() {
@@ -334,9 +_,9 @@
    protected void playStepSound(BlockPos p_180429_1_, BlockState p_180429_2_) {
       if (!p_180429_2_.getMaterial().isLiquid()) {
          BlockState blockstate = this.level.getBlockState(p_180429_1_.above());
-         SoundType soundtype = p_180429_2_.getSoundType();
+         SoundType soundtype = p_180429_2_.getSoundType(level, p_180429_1_, this);
          if (blockstate.is(Blocks.SNOW)) {
-            soundtype = blockstate.getSoundType();
+            soundtype = blockstate.getSoundType(level, p_180429_1_, this);
          }
 
          if (this.isVehicle() && this.canGallop) {
@@ -694,6 +_,7 @@
                this.setDeltaMovement(vector3d.x, d1, vector3d.z);
                this.setIsJumping(true);
                this.hasImpulse = true;
+               net.minecraftforge.common.ForgeHooks.onLivingJump(this);
                if (f1 > 0.0F) {
                   float f2 = MathHelper.sin(this.yRot * ((float)Math.PI / 180F));
                   float f3 = MathHelper.cos(this.yRot * ((float)Math.PI / 180F));
@@ -1009,5 +_,24 @@
 
       this.randomizeAttributes();
       return super.finalizeSpawn(p_213386_1_, p_213386_2_, p_213386_3_, p_213386_4_, p_213386_5_);
+   }
+
+   private net.minecraftforge.common.util.LazyOptional<?> itemHandler = null;
+
+   @Override
+   public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable net.minecraft.util.Direction facing) {
+      if (this.isAlive() && capability == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY && itemHandler != null)
+         return itemHandler.cast();
+      return super.getCapability(capability, facing);
+   }
+
+   @Override
+   protected void invalidateCaps() {
+      super.invalidateCaps();
+      if (itemHandler != null) {
+         net.minecraftforge.common.util.LazyOptional<?> oldHandler = itemHandler;
+         itemHandler = null;
+         oldHandler.invalidate();
+      }
    }
 }
