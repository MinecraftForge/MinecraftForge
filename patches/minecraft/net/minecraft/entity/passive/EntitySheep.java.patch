--- ../src_base/minecraft/net/minecraft/entity/passive/EntitySheep.java
+++ ../src_work/minecraft/net/minecraft/entity/passive/EntitySheep.java
@@ -2,6 +2,8 @@
 
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
+
+import java.util.ArrayList;
 import java.util.Random;
 import net.minecraft.block.Block;
 import net.minecraft.entity.EntityAgeable;
@@ -26,7 +28,14 @@
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.World;
 
-public class EntitySheep extends EntityAnimal
+import net.minecraftforge.common.IShearable;
+// CraftBukkit start
+import org.bukkit.event.entity.SheepRegrowWoolEvent;
+import org.bukkit.event.player.PlayerShearEntityEvent;
+import net.minecraft.inventory.InventoryCraftResult;
+// CraftBukkit end
+
+public class EntitySheep extends EntityAnimal implements IShearable
 {
     private final InventoryCrafting field_90016_e = new InventoryCrafting(new ContainerSheep(this), 2, 1);
 
@@ -60,6 +69,7 @@
         this.tasks.addTask(8, new EntityAILookIdle(this));
         this.field_90016_e.setInventorySlotContents(0, new ItemStack(Item.dyePowder, 1, 0));
         this.field_90016_e.setInventorySlotContents(1, new ItemStack(Item.dyePowder, 1, 0));
+        this.field_90016_e.resultInventory = new InventoryCraftResult(); // CraftBukkit - add result slot for event
     }
 
     /**
@@ -90,11 +100,11 @@
         super.onLivingUpdate();
     }
 
-    protected void func_110147_ax()
-    {
-        super.func_110147_ax();
-        this.func_110148_a(SharedMonsterAttributes.field_111267_a).func_111128_a(8.0D);
-        this.func_110148_a(SharedMonsterAttributes.field_111263_d).func_111128_a(0.23000000417232513D);
+    protected void applyEntityAttributes()
+    {
+        super.applyEntityAttributes();
+        this.getEntityAttribute(SharedMonsterAttributes.maxHealth).setAttribute(8.0D);
+        this.getEntityAttribute(SharedMonsterAttributes.movementSpeed).setAttribute(0.23000000417232513D);
     }
 
     protected void entityInit()
@@ -109,10 +119,16 @@
      */
     protected void dropFewItems(boolean par1, int par2)
     {
+        // CraftBukkit start - Whole method
+        java.util.List<org.bukkit.inventory.ItemStack> loot = new java.util.ArrayList<org.bukkit.inventory.ItemStack>();
+
         if (!this.getSheared())
         {
-            this.entityDropItem(new ItemStack(Block.cloth.blockID, 1, this.getFleeceColor()), 0.0F);
-        }
+            loot.add(new org.bukkit.inventory.ItemStack(org.bukkit.Material.WOOL, 1, (short) 0, (byte) this.getFleeceColor()));
+        }
+
+        org.bukkit.craftbukkit.event.CraftEventFactory.callEntityDeathEvent(this, loot);
+        // CraftBukkit end
     }
 
     /**
@@ -141,29 +157,8 @@
      */
     public boolean interact(EntityPlayer par1EntityPlayer)
     {
-        ItemStack itemstack = par1EntityPlayer.inventory.getCurrentItem();
-
-        if (itemstack != null && itemstack.itemID == Item.shears.itemID && !this.getSheared() && !this.isChild())
-        {
-            if (!this.worldObj.isRemote)
-            {
-                this.setSheared(true);
-                int i = 1 + this.rand.nextInt(3);
-
-                for (int j = 0; j < i; ++j)
-                {
-                    EntityItem entityitem = this.entityDropItem(new ItemStack(Block.cloth.blockID, 1, this.getFleeceColor()), 1.0F);
-                    entityitem.motionY += (double)(this.rand.nextFloat() * 0.05F);
-                    entityitem.motionX += (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.1F);
-                    entityitem.motionZ += (double)((this.rand.nextFloat() - this.rand.nextFloat()) * 0.1F);
-                }
-            }
-
-            itemstack.damageItem(1, par1EntityPlayer);
-            this.playSound("mob.sheep.shear", 1.0F, 1.0F);
-        }
-
         return super.interact(par1EntityPlayer);
+        // MCPC+ - TODO: missing PlayerShearEvent!
     }
 
     @SideOnly(Side.CLIENT)
@@ -298,17 +293,26 @@
      */
     public void eatGrassBonus()
     {
-        this.setSheared(false);
+        // CraftBukkit start
+        SheepRegrowWoolEvent event = new SheepRegrowWoolEvent((org.bukkit.entity.Sheep) this.getBukkitEntity());
+        this.worldObj.getServer().getPluginManager().callEvent(event);
+
+        if (!event.isCancelled())
+        {
+            this.setSheared(false);
+        }
+
+        // CraftBukkit end
 
         if (this.isChild())
         {
-            this.func_110195_a(60);
-        }
-    }
-
-    public EntityLivingData func_110161_a(EntityLivingData par1EntityLivingData)
-    {
-        par1EntityLivingData = super.func_110161_a(par1EntityLivingData);
+            this.addGrowth(60);
+        }
+    }
+
+    public EntityLivingData onSpawnWithEgg(EntityLivingData par1EntityLivingData)
+    {
+        par1EntityLivingData = super.onSpawnWithEgg(par1EntityLivingData);
         this.setFleeceColor(getRandomFleeceColor(this.worldObj.rand));
         return par1EntityLivingData;
     }
@@ -343,4 +347,24 @@
     {
         return this.func_90015_b(par1EntityAgeable);
     }
+
+    @Override
+    public boolean isShearable(ItemStack item, World world, int X, int Y, int Z)
+    {
+        return !getSheared() && !isChild();
+    }
+
+    @Override
+    public ArrayList<ItemStack> onSheared(ItemStack item, World world, int X, int Y, int Z, int fortune)
+    {
+        ArrayList<ItemStack> ret = new ArrayList<ItemStack>();
+        setSheared(true);
+        int i = 1 + rand.nextInt(3);
+        for (int j = 0; j < i; j++)
+        {
+            ret.add(new ItemStack(Block.cloth.blockID, 1, getFleeceColor()));
+        }
+        this.worldObj.playSoundAtEntity(this, "mob.sheep.shear", 1.0F, 1.0F);
+        return ret;
+    }
 }
