--- a/net/minecraft/tileentity/ChestTileEntity.java
+++ b/net/minecraft/tileentity/ChestTileEntity.java
@@ -38,6 +_,7 @@
    protected float oOpenness;
    protected int openCount;
    private int tickInterval;
+   private net.minecraftforge.common.util.LazyOptional<net.minecraftforge.items.IItemHandlerModifiable> chestHandler;
 
    protected ChestTileEntity(TileEntityType<?> p_i48287_1_) {
       super(p_i48287_1_);
@@ -202,7 +_,7 @@
 
    public static int getOpenCount(IBlockReader p_195481_0_, BlockPos p_195481_1_) {
       BlockState blockstate = p_195481_0_.getBlockState(p_195481_1_);
-      if (blockstate.getBlock().isEntityBlock()) {
+      if (blockstate.hasTileEntity()) {
          TileEntity tileentity = p_195481_0_.getBlockEntity(p_195481_1_);
          if (tileentity instanceof ChestTileEntity) {
             return ((ChestTileEntity)tileentity).openCount;
@@ -220,5 +_,41 @@
 
    protected Container createMenu(int p_213906_1_, PlayerInventory p_213906_2_) {
       return ChestContainer.threeRows(p_213906_1_, p_213906_2_, this);
+   }
+
+   @Override
+   public void clearCache() {
+      super.clearCache();
+      if (this.chestHandler != null) {
+         net.minecraftforge.common.util.LazyOptional<?> oldHandler = this.chestHandler;
+         this.chestHandler = null;
+         oldHandler.invalidate();
+      }
+   }
+
+   @Override
+   public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> cap, Direction side) {
+       if (!this.remove && cap == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY) {
+          if (this.chestHandler == null)
+             this.chestHandler = net.minecraftforge.common.util.LazyOptional.of(this::createHandler);
+          return this.chestHandler.cast();
+       }
+       return super.getCapability(cap, side);
+   }
+
+   private net.minecraftforge.items.IItemHandlerModifiable createHandler() {
+      BlockState state = this.getBlockState();
+      if (!(state.getBlock() instanceof ChestBlock)) {
+         return new net.minecraftforge.items.wrapper.InvWrapper(this);
+      }
+      IInventory inv = ChestBlock.getContainer((ChestBlock) state.getBlock(), state, getLevel(), getBlockPos(), true);
+      return new net.minecraftforge.items.wrapper.InvWrapper(inv == null ? this : inv);
+   }
+
+   @Override
+   protected void invalidateCaps() {
+      super.invalidateCaps();
+      if (chestHandler != null)
+        chestHandler.invalidate();
    }
 }
