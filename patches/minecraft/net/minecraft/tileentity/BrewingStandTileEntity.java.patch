--- a/net/minecraft/tileentity/BrewingStandTileEntity.java
+++ b/net/minecraft/tileentity/BrewingStandTileEntity.java
@@ -146,6 +_,7 @@
 
    private boolean isBrewable() {
       ItemStack itemstack = this.items.get(3);
+      if (!itemstack.isEmpty()) return net.minecraftforge.common.brewing.BrewingRecipeRegistry.canBrew(items, itemstack, SLOTS_FOR_SIDES); // divert to VanillaBrewingRegistry
       if (itemstack.isEmpty()) {
          return false;
       } else if (!PotionBrewing.isIngredient(itemstack)) {
@@ -163,22 +_,22 @@
    }
 
    private void doBrew() {
+      if (net.minecraftforge.event.ForgeEventFactory.onPotionAttemptBrew(items)) return;
       ItemStack itemstack = this.items.get(3);
 
-      for(int i = 0; i < 3; ++i) {
-         this.items.set(i, PotionBrewing.mix(itemstack, this.items.get(i)));
-      }
-
-      itemstack.shrink(1);
+      net.minecraftforge.common.brewing.BrewingRecipeRegistry.brewPotions(items, itemstack, SLOTS_FOR_SIDES);
+      net.minecraftforge.event.ForgeEventFactory.onPotionBrewed(items);
       BlockPos blockpos = this.getBlockPos();
-      if (itemstack.getItem().hasCraftingRemainingItem()) {
-         ItemStack itemstack1 = new ItemStack(itemstack.getItem().getCraftingRemainingItem());
+      if (itemstack.hasContainerItem()) {
+         ItemStack itemstack1 = itemstack.getContainerItem();
+         itemstack.shrink(1);
          if (itemstack.isEmpty()) {
             itemstack = itemstack1;
          } else if (!this.level.isClientSide) {
             InventoryHelper.dropItemStack(this.level, (double)blockpos.getX(), (double)blockpos.getY(), (double)blockpos.getZ(), itemstack1);
          }
       }
+      else itemstack.shrink(1);
 
       this.items.set(3, itemstack);
       this.level.levelEvent(1035, blockpos, 0);
@@ -229,13 +_,13 @@
 
    public boolean canPlaceItem(int p_94041_1_, ItemStack p_94041_2_) {
       if (p_94041_1_ == 3) {
-         return PotionBrewing.isIngredient(p_94041_2_);
+         return net.minecraftforge.common.brewing.BrewingRecipeRegistry.isValidIngredient(p_94041_2_);
       } else {
          Item item = p_94041_2_.getItem();
          if (p_94041_1_ == 4) {
             return item == Items.BLAZE_POWDER;
          } else {
-            return (item == Items.POTION || item == Items.SPLASH_POTION || item == Items.LINGERING_POTION || item == Items.GLASS_BOTTLE) && this.getItem(p_94041_1_).isEmpty();
+            return net.minecraftforge.common.brewing.BrewingRecipeRegistry.isValidInput(p_94041_2_) && this.getItem(p_94041_1_).isEmpty();
          }
       }
    }
@@ -266,5 +_,28 @@
 
    protected Container createMenu(int p_213906_1_, PlayerInventory p_213906_2_) {
       return new BrewingStandContainer(p_213906_1_, p_213906_2_, this, this.dataAccess);
+   }
+
+   net.minecraftforge.common.util.LazyOptional<? extends net.minecraftforge.items.IItemHandler>[] handlers =
+           net.minecraftforge.items.wrapper.SidedInvWrapper.create(this, Direction.UP, Direction.DOWN, Direction.NORTH);
+
+   @Override
+   public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable Direction facing) {
+      if (!this.remove && facing != null && capability == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY) {
+         if (facing == Direction.UP)
+            return handlers[0].cast();
+         else if (facing == Direction.DOWN)
+            return handlers[1].cast();
+         else
+            return handlers[2].cast();
+      }
+      return super.getCapability(capability, facing);
+   }
+
+   @Override
+   protected void invalidateCaps() {
+      super.invalidateCaps();
+      for (int x = 0; x < handlers.length; x++)
+        handlers[x].invalidate();
    }
 }
