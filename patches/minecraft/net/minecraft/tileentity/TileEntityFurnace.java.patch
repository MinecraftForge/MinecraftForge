--- ../src_base/minecraft/net/minecraft/tileentity/TileEntityFurnace.java
+++ ../src_work/minecraft/net/minecraft/tileentity/TileEntityFurnace.java
@@ -3,12 +3,15 @@
 import cpw.mods.fml.common.registry.GameRegistry;
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
+
+import java.util.List;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockFurnace;
 import net.minecraft.block.material.Material;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.inventory.ISidedInventory;
 import net.minecraft.item.Item;
+import net.minecraft.item.ItemBlock;
 import net.minecraft.item.ItemHoe;
 import net.minecraft.item.ItemStack;
 import net.minecraft.item.ItemSword;
@@ -16,6 +19,21 @@
 import net.minecraft.item.crafting.FurnaceRecipes;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.nbt.NBTTagList;
+import net.minecraft.server.MinecraftServer;
+import net.minecraftforge.common.ForgeDirection;
+import net.minecraftforge.common.ForgeDummyContainer;
+// CraftBukkit start
+import java.util.List;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.event.inventory.FurnaceBurnEvent;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.event.inventory.FurnaceBurnEvent;
+import org.bukkit.event.inventory.FurnaceSmeltEvent;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+// CraftBukkit end
 
 public class TileEntityFurnace extends TileEntity implements ISidedInventory
 {
@@ -40,6 +58,39 @@
     public int furnaceCookTime;
     private String field_94130_e;
 
+    // CraftBukkit start
+    private int lastTick = MinecraftServer.currentTick;
+    private int maxStack = MAX_STACK;
+    public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+
+    public ItemStack[] getContents()
+    {
+        return this.furnaceItemStacks;
+    }
+
+    public void onOpen(CraftHumanEntity who)
+    {
+        transaction.add(who);
+    }
+
+    public void onClose(CraftHumanEntity who)
+    {
+        transaction.remove(who);
+    }
+
+    public List<HumanEntity> getViewers()
+    {
+        return transaction;
+    }
+
+    public void setMaxStackSize(int size)
+    {
+        maxStack = size;
+    }
+    // CraftBukkit end
+
+    public TileEntityFurnace() {}
+
     /**
      * Returns the number of slots in the inventory.
      */
@@ -211,7 +262,7 @@
      */
     public int getInventoryStackLimit()
     {
-        return 64;
+        return maxStack; // CraftBukkit
     }
 
     @SideOnly(Side.CLIENT)
@@ -257,20 +308,54 @@
     {
         boolean flag = this.furnaceBurnTime > 0;
         boolean flag1 = false;
+        // CraftBukkit start - Use wall time instead of ticks for cooking
+        int elapsedTicks = MinecraftServer.currentTick - this.lastTick;
+        this.lastTick = MinecraftServer.currentTick;
+
+        // CraftBukkit - moved from below
+        if (this.isBurning() && this.canSmelt())
+        {
+            this.furnaceCookTime += elapsedTicks;
+
+            if (this.furnaceCookTime >= 200)
+            {
+                this.furnaceCookTime %= 200;
+                this.smeltItem();
+                flag1 = true;
+            }
+        }
+        else
+        {
+            this.furnaceCookTime = 0;
+        }
+
+        // CraftBukkit end
 
         if (this.furnaceBurnTime > 0)
         {
-            --this.furnaceBurnTime;
+            this.furnaceBurnTime -= elapsedTicks; // CraftBukkit
         }
 
         if (!this.worldObj.isRemote)
         {
-            if (this.furnaceBurnTime == 0 && this.canSmelt())
-            {
-                this.currentItemBurnTime = this.furnaceBurnTime = getItemBurnTime(this.furnaceItemStacks[1]);
-
-                if (this.furnaceBurnTime > 0)
-                {
+            // CraftBukkit start - Handle multiple elapsed ticks
+            if (this.furnaceBurnTime <= 0 && this.canSmelt() && this.furnaceItemStacks[1] != null)   // CraftBukkit - == to <=
+            {
+                CraftItemStack fuel = CraftItemStack.asCraftMirror(this.furnaceItemStacks[1]);
+                FurnaceBurnEvent furnaceBurnEvent = new FurnaceBurnEvent(this.worldObj.getWorld().getBlockAt(this.xCoord, this.yCoord, this.zCoord), fuel, getItemBurnTime(this.furnaceItemStacks[1]));
+                this.worldObj.getServer().getPluginManager().callEvent(furnaceBurnEvent);
+
+                if (furnaceBurnEvent.isCancelled())
+                {
+                    return;
+                }
+
+                this.currentItemBurnTime = furnaceBurnEvent.getBurnTime();
+                this.furnaceBurnTime += this.currentItemBurnTime;
+
+                if (this.furnaceBurnTime > 0 && furnaceBurnEvent.isBurning())
+                {
+                    // CraftBukkit end
                     flag1 = true;
 
                     if (this.furnaceItemStacks[1] != null)
@@ -279,28 +364,24 @@
 
                         if (this.furnaceItemStacks[1].stackSize == 0)
                         {
-                            Item item = this.furnaceItemStacks[1].getItem().getContainerItem();
-                            this.furnaceItemStacks[1] = item != null ? new ItemStack(item) : null;
+                            this.furnaceItemStacks[1] = this.furnaceItemStacks[1].getItem().getContainerItemStack(furnaceItemStacks[1]);
                         }
                     }
                 }
             }
 
-            if (this.isBurning() && this.canSmelt())
-            {
-                ++this.furnaceCookTime;
-
-                if (this.furnaceCookTime == 200)
-                {
-                    this.furnaceCookTime = 0;
-                    this.smeltItem();
+            /* CraftBukkit start - Moved up
+            if (this.isBurning() && this.canBurn()) {
+                ++this.cookTime;
+                if (this.cookTime == 200) {
+                    this.cookTime = 0;
+                    this.burn();
                     flag1 = true;
                 }
-            }
-            else
-            {
-                this.furnaceCookTime = 0;
-            }
+            } else {
+                this.cookTime = 0;
+            }
+            // CraftBukkit end */
 
             if (flag != this.furnaceBurnTime > 0)
             {
@@ -326,8 +407,12 @@
         }
         else
         {
-            ItemStack itemstack = FurnaceRecipes.smelting().getSmeltingResult(this.furnaceItemStacks[0].getItem().itemID);
-            return itemstack == null ? false : (this.furnaceItemStacks[2] == null ? true : (!this.furnaceItemStacks[2].isItemEqual(itemstack) ? false : (this.furnaceItemStacks[2].stackSize < this.getInventoryStackLimit() && this.furnaceItemStacks[2].stackSize < this.furnaceItemStacks[2].getMaxStackSize() ? true : this.furnaceItemStacks[2].stackSize < itemstack.getMaxStackSize())));
+            ItemStack itemstack = FurnaceRecipes.smelting().getSmeltingResult(this.furnaceItemStacks[0]);
+            if (itemstack == null) return false;
+            if (this.furnaceItemStacks[2] == null) return true;
+            if (!this.furnaceItemStacks[2].isItemEqual(itemstack)) return false;
+            int result = furnaceItemStacks[2].stackSize + itemstack.stackSize;
+            return (result <= getInventoryStackLimit() && result <= itemstack.getMaxStackSize());
         }
     }
 
@@ -338,15 +423,32 @@
     {
         if (this.canSmelt())
         {
-            ItemStack itemstack = FurnaceRecipes.smelting().getSmeltingResult(this.furnaceItemStacks[0].getItem().itemID);
+            ItemStack itemstack = FurnaceRecipes.smelting().getSmeltingResult(this.furnaceItemStacks[0]);
+            // CraftBukkit start
+            CraftItemStack source = CraftItemStack.asCraftMirror(this.furnaceItemStacks[0]);
+            CraftItemStack result = CraftItemStack.asCraftMirror(itemstack.copy());
+            FurnaceSmeltEvent furnaceSmeltEvent = new FurnaceSmeltEvent(this.worldObj.getWorld().getBlockAt(this.xCoord, this.yCoord, this.zCoord), source, result);
+            this.worldObj.getServer().getPluginManager().callEvent(furnaceSmeltEvent);
+
+            if (furnaceSmeltEvent.isCancelled())
+            {
+                return;
+            }
+
+            itemstack = CraftItemStack.asNMSCopy(furnaceSmeltEvent.getResult());
 
             if (this.furnaceItemStacks[2] == null)
             {
                 this.furnaceItemStacks[2] = itemstack.copy();
             }
-            else if (this.furnaceItemStacks[2].itemID == itemstack.itemID)
-            {
-                ++this.furnaceItemStacks[2].stackSize;
+            else if (this.furnaceItemStacks[2].isItemEqual(itemstack))
+            {
+                // CraftBukkit - compare damage too
+                if (this.furnaceItemStacks[2].getItemDamage() == itemstack.getItemDamage())
+                {
+                    this.furnaceItemStacks[2].stackSize += itemstack.stackSize;
+                }
+                // CraftBukkit end
             }
 
             --this.furnaceItemStacks[0].stackSize;
@@ -373,7 +475,7 @@
             int i = par0ItemStack.getItem().itemID;
             Item item = par0ItemStack.getItem();
 
-            if (i < 256 && Block.blocksList[i] != null)
+            if (par0ItemStack.getItem() instanceof ItemBlock && Block.blocksList[i] != null)
             {
                 Block block = Block.blocksList[i];
 
