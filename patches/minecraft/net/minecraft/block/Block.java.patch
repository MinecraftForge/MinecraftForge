--- a/net/minecraft/block/Block.java
+++ b/net/minecraft/block/Block.java
@@ -75,9 +75,10 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public class Block implements IItemProvider {
+public class Block extends net.minecraftforge.registries.ForgeRegistryEntry<Block> implements IItemProvider, net.minecraftforge.common.extensions.IForgeBlock {
    protected static final Logger field_196273_d = LogManager.getLogger();
-   public static final ObjectIntIdentityMap<BlockState> field_176229_d = new ObjectIntIdentityMap<>();
+   @Deprecated //Forge: Do not use, use GameRegistry
+   public static final ObjectIntIdentityMap<BlockState> field_176229_d = net.minecraftforge.registries.GameData.getBlockStateIDMap();
    private static final Direction[] field_212556_a = new Direction[]{Direction.WEST, Direction.EAST, Direction.NORTH, Direction.SOUTH, Direction.DOWN, Direction.UP};
    private static final LoadingCache<VoxelShape, Boolean> field_223006_b = CacheBuilder.newBuilder().maximumSize(512L).weakKeys().build(new CacheLoader<VoxelShape, Boolean>() {
       public Boolean load(VoxelShape p_load_1_) {
@@ -291,7 +292,7 @@
 
    @Deprecated
    public boolean func_196253_a(BlockState p_196253_1_, BlockItemUseContext p_196253_2_) {
-      return this.field_149764_J.func_76222_j() && (p_196253_2_.func_195996_i().func_190926_b() || p_196253_2_.func_195996_i().func_77973_b() != this.func_199767_j());
+      return p_196253_1_.func_185904_a().func_76222_j() && (p_196253_2_.func_195996_i().func_190926_b() || p_196253_2_.func_195996_i().func_77973_b() != this.func_199767_j());
    }
 
    @Deprecated
@@ -303,8 +304,9 @@
       return this.field_149789_z;
    }
 
+   @Deprecated //Forge: New State sensitive version.
    public boolean func_149716_u() {
-      return this instanceof ITileEntityProvider;
+      return hasTileEntity(func_176223_P());
    }
 
    @Deprecated
@@ -315,7 +317,7 @@
    @Deprecated
    @OnlyIn(Dist.CLIENT)
    public int func_220058_a(BlockState p_220058_1_, IEnviromentBlockReader p_220058_2_, BlockPos p_220058_3_) {
-      return p_220058_2_.func_217338_b(p_220058_3_, p_220058_1_.func_185906_d());
+      return p_220058_2_.func_217338_b(p_220058_3_, p_220058_1_.getLightValue(p_220058_2_, p_220058_3_));
    }
 
    @OnlyIn(Dist.CLIENT)
@@ -460,10 +462,9 @@
 
    @Deprecated
    public void func_196243_a(BlockState p_196243_1_, World p_196243_2_, BlockPos p_196243_3_, BlockState p_196243_4_, boolean p_196243_5_) {
-      if (this.func_149716_u() && p_196243_1_.func_177230_c() != p_196243_4_.func_177230_c()) {
+      if (p_196243_1_.hasTileEntity() && p_196243_1_.func_177230_c() != p_196243_4_.func_177230_c()) {
          p_196243_2_.func_175713_t(p_196243_3_);
       }
-
    }
 
    @Deprecated
@@ -472,8 +473,8 @@
       if (f == -1.0F) {
          return 0.0F;
       } else {
-         int i = p_180647_2_.func_184823_b(p_180647_1_) ? 30 : 100;
-         return p_180647_2_.func_184813_a(p_180647_1_) / f / (float)i;
+         int i = net.minecraftforge.common.ForgeHooks.canHarvestBlock(p_180647_1_, p_180647_2_, p_180647_3_, p_180647_4_) ? 30 : 100;
+         return p_180647_2_.getDigSpeed(p_180647_1_, p_180647_4_) / f / (float)i;
       }
    }
 
@@ -493,14 +494,11 @@
    @Deprecated
    public List<ItemStack> func_220076_a(BlockState p_220076_1_, LootContext.Builder p_220076_2_) {
       ResourceLocation resourcelocation = this.func_220068_i();
-      if (resourcelocation == LootTables.field_186419_a) {
-         return Collections.emptyList();
-      } else {
-         LootContext lootcontext = p_220076_2_.func_216015_a(LootParameters.field_216287_g, p_220076_1_).func_216022_a(LootParameterSets.field_216267_h);
-         ServerWorld serverworld = lootcontext.func_202879_g();
-         LootTable loottable = serverworld.func_73046_m().func_200249_aQ().func_186521_a(resourcelocation);
-         return loottable.func_216113_a(lootcontext);
-      }
+      p_220076_2_ = p_220076_2_.func_216015_a(LootParameters.field_216287_g, p_220076_1_);
+      ServerWorld serverworld = p_220076_2_.func_216018_a();
+      LootTable loottable = serverworld.func_73046_m().func_200249_aQ().func_186521_a(resourcelocation);
+
+      return net.minecraftforge.event.ForgeEventFactory.fireBlockGenerateLootEvent(loottable, p_220076_2_);
    }
 
    public static List<ItemStack> func_220070_a(BlockState p_220070_0_, ServerWorld p_220070_1_, BlockPos p_220070_2_, @Nullable TileEntity p_220070_3_) {
@@ -514,15 +512,18 @@
    }
 
    public static void func_220078_b(BlockState p_220078_0_, LootContext.Builder p_220078_1_) {
+      startDropCapture();
       ServerWorld serverworld = p_220078_1_.func_216018_a();
       BlockPos blockpos = p_220078_1_.func_216024_a(LootParameters.field_216286_f);
       p_220078_0_.func_215693_a(p_220078_1_).forEach((p_220063_2_) -> {
          func_180635_a(serverworld, blockpos, p_220063_2_);
       });
       p_220078_0_.func_215706_a(serverworld, blockpos, ItemStack.field_190927_a);
+      finishDropCapture(serverworld, blockpos, p_220078_0_, p_220078_1_.func_216022_a(LootParameterSets.field_216267_h));
    }
 
    public static void func_220075_c(BlockState p_220075_0_, World p_220075_1_, BlockPos p_220075_2_) {
+      startDropCapture();
       if (p_220075_1_ instanceof ServerWorld) {
          func_220070_a(p_220075_0_, (ServerWorld)p_220075_1_, p_220075_2_, (TileEntity)null).forEach((p_220079_2_) -> {
             func_180635_a(p_220075_1_, p_220075_2_, p_220079_2_);
@@ -530,9 +531,11 @@
       }
 
       p_220075_0_.func_215706_a(p_220075_1_, p_220075_2_, ItemStack.field_190927_a);
+      finishDropCapture(p_220075_1_, p_220075_2_, p_220075_0_, null);
    }
 
    public static void func_220059_a(BlockState p_220059_0_, World p_220059_1_, BlockPos p_220059_2_, @Nullable TileEntity p_220059_3_) {
+      startDropCapture();
       if (p_220059_1_ instanceof ServerWorld) {
          func_220070_a(p_220059_0_, (ServerWorld)p_220059_1_, p_220059_2_, p_220059_3_).forEach((p_220061_2_) -> {
             func_180635_a(p_220059_1_, p_220059_2_, p_220061_2_);
@@ -540,9 +543,11 @@
       }
 
       p_220059_0_.func_215706_a(p_220059_1_, p_220059_2_, ItemStack.field_190927_a);
+      finishDropCapture(p_220059_1_, p_220059_2_, p_220059_0_, null);
    }
 
    public static void func_220054_a(BlockState p_220054_0_, World p_220054_1_, BlockPos p_220054_2_, @Nullable TileEntity p_220054_3_, Entity p_220054_4_, ItemStack p_220054_5_) {
+      startDropCapture();
       if (p_220054_1_ instanceof ServerWorld) {
          func_220077_a(p_220054_0_, (ServerWorld)p_220054_1_, p_220054_2_, p_220054_3_, p_220054_4_, p_220054_5_).forEach((p_220057_2_) -> {
             func_180635_a(p_220054_1_, p_220054_2_, p_220057_2_);
@@ -550,10 +555,12 @@
       }
 
       p_220054_0_.func_215706_a(p_220054_1_, p_220054_2_, p_220054_5_);
+      finishDropCapture(p_220054_1_, p_220054_2_, p_220054_0_, null);
    }
 
    public static void func_180635_a(World p_180635_0_, BlockPos p_180635_1_, ItemStack p_180635_2_) {
-      if (!p_180635_0_.field_72995_K && !p_180635_2_.func_190926_b() && p_180635_0_.func_82736_K().func_223586_b(GameRules.field_223603_f)) {
+      if (!p_180635_0_.field_72995_K && !p_180635_2_.func_190926_b() && p_180635_0_.func_82736_K().func_223586_b(GameRules.field_223603_f) && !p_180635_0_.restoringBlockSnapshots) { // do not drop items while restoring blockstates, prevents item dupe
+         if (captureDrops.get()) { capturedDrops.get().add(p_180635_2_); return; }
          float f = 0.5F;
          double d0 = (double)(p_180635_0_.field_73012_v.nextFloat() * 0.5F) + 0.25D;
          double d1 = (double)(p_180635_0_.field_73012_v.nextFloat() * 0.5F) + 0.25D;
@@ -565,7 +572,7 @@
    }
 
    public void func_180637_b(World p_180637_1_, BlockPos p_180637_2_, int p_180637_3_) {
-      if (!p_180637_1_.field_72995_K && p_180637_1_.func_82736_K().func_223586_b(GameRules.field_223603_f)) {
+      if (!p_180637_1_.field_72995_K && p_180637_1_.func_82736_K().func_223586_b(GameRules.field_223603_f) && !p_180637_1_.restoringBlockSnapshots) { // do not drop items while restoring blockstates, prevents item dupe
          while(p_180637_3_ > 0) {
             int i = ExperienceOrbEntity.func_70527_a(p_180637_3_);
             p_180637_3_ -= i;
@@ -575,6 +582,7 @@
 
    }
 
+   @Deprecated //Forge: State sensitive version
    public float func_149638_a() {
       return this.field_149781_w;
    }
@@ -677,6 +685,7 @@
       p_176216_2_.func_213317_d(p_176216_2_.func_213322_ci().func_216372_d(1.0D, 0.0D, 1.0D));
    }
 
+   @Deprecated // Forge: Use more sensitive version below: getPickBlock
    @OnlyIn(Dist.CLIENT)
    public ItemStack func_185473_a(IBlockReader p_185473_1_, BlockPos p_185473_2_, BlockState p_185473_3_) {
       return new ItemStack(this);
@@ -691,6 +700,7 @@
       return Fluids.field_204541_a.func_207188_f();
    }
 
+   @Deprecated //Forge: Use more sensitive version
    public float func_208618_m() {
       return this.field_149765_K;
    }
@@ -711,6 +721,7 @@
    public void func_176224_k(World p_176224_1_, BlockPos p_176224_2_) {
    }
 
+   @Deprecated //Forge: Use more sensitive version
    public boolean func_149659_a(Explosion p_149659_1_) {
       return true;
    }
@@ -755,6 +766,7 @@
       }
    }
 
+   @Deprecated //Forge: Use more sensitive version {@link IForgeBlockState#getSoundType(IWorldReader, BlockPos, Entity) }
    public SoundType func_220072_p(BlockState p_220072_1_) {
       return this.field_149762_H;
    }
@@ -780,13 +792,93 @@
    }
 
    public static boolean func_196252_e(Block p_196252_0_) {
-      return p_196252_0_ == Blocks.field_150348_b || p_196252_0_ == Blocks.field_196650_c || p_196252_0_ == Blocks.field_196654_e || p_196252_0_ == Blocks.field_196656_g;
+      return net.minecraftforge.common.Tags.Blocks.STONE.func_199685_a_(p_196252_0_);
    }
 
    public static boolean func_196245_f(Block p_196245_0_) {
-      return p_196245_0_ == Blocks.field_150346_d || p_196245_0_ == Blocks.field_196660_k || p_196245_0_ == Blocks.field_196661_l;
+      return net.minecraftforge.common.Tags.Blocks.DIRT.func_199685_a_(p_196245_0_);
    }
 
+   /* ======================================== FORGE START =====================================*/
+   protected Random RANDOM = new Random();
+   private net.minecraftforge.common.ToolType harvestTool;
+   private int harvestLevel;
+   private final net.minecraftforge.common.util.ReverseTagWrapper<Block> reverseTags = new net.minecraftforge.common.util.ReverseTagWrapper<>(this, BlockTags::getGeneration, BlockTags::func_199896_a);
+   // For internal use only, captures block drops before they're added to the world so they can be tweaked with events.
+   protected static ThreadLocal<Boolean> captureDrops = ThreadLocal.withInitial(() -> false);
+   protected static ThreadLocal<NonNullList<ItemStack>> capturedDrops = ThreadLocal.withInitial(NonNullList::func_191196_a);
+   protected static void startDropCapture()
+   {
+      captureDrops.set(true);
+      capturedDrops.get().clear();
+   }
+   protected static void finishDropCapture(World world, BlockPos pos, BlockState state, @Nullable LootContext context)
+   {
+      captureDrops.set(false);
+      net.minecraftforge.event.ForgeEventFactory.fireBlockDropLootEvent(world, pos, state, context, capturedDrops.get()).forEach(s -> func_180635_a(world, pos, s));
+   }
+
+   @Override
+   public float getSlipperiness(BlockState state, IWorldReader world, BlockPos pos, @Nullable Entity entity) {
+      return this.field_149765_K;
+   }
+
+   @Nullable
+   @Override
+   public net.minecraftforge.common.ToolType getHarvestTool(BlockState state) {
+      return harvestTool; //TODO: RE-Evaluate
+   }
+
+   @Override
+   public int getHarvestLevel(BlockState state) {
+      return harvestLevel; //TODO: RE-Evaluate
+   }
+
+   @Override
+   public boolean canSustainPlant(BlockState state, IBlockReader world, BlockPos pos, Direction facing, net.minecraftforge.common.IPlantable plantable) {
+       BlockState plant = plantable.getPlant(world, pos.func_177972_a(facing));
+       net.minecraftforge.common.PlantType type = plantable.getPlantType(world, pos.func_177972_a(facing));
+
+       if (plant.func_177230_c() == Blocks.field_150434_aF)
+           return this.getBlock() == Blocks.field_150434_aF || this.getBlock() == Blocks.field_150354_m || this.getBlock() == Blocks.field_196611_F;
+
+       if (plant.func_177230_c() == Blocks.field_196608_cF && this == Blocks.field_196608_cF)
+           return true;
+
+       if (plantable instanceof BushBlock && ((BushBlock)plantable).func_200014_a_(state, world, pos))
+           return true;
+
+       switch (type) {
+           case Desert: return this.getBlock() == Blocks.field_150354_m || this.getBlock() == Blocks.field_150405_ch || this.getBlock() instanceof GlazedTerracottaBlock;
+           case Nether: return this.getBlock() == Blocks.field_150425_aM;
+           case Crop:   return this.getBlock() == Blocks.field_150458_ak;
+           case Cave:   return Block.func_220056_d(state, world, pos, Direction.UP);
+           case Plains: return this.getBlock() == Blocks.field_196658_i || Block.func_196245_f(this) || this.getBlock() == Blocks.field_150458_ak;
+           case Water:  return state.func_185904_a() == Material.field_151586_h; //&& state.getValue(BlockLiquidWrapper)
+           case Beach:
+               boolean isBeach = this.getBlock() == Blocks.field_196658_i || Block.func_196245_f(this) || this.getBlock() == Blocks.field_150354_m;
+               boolean hasWater = (world.func_180495_p(pos.func_177974_f()).func_185904_a() == Material.field_151586_h ||
+                       world.func_180495_p(pos.func_177976_e()).func_185904_a() == Material.field_151586_h ||
+                       world.func_180495_p(pos.func_177978_c()).func_185904_a() == Material.field_151586_h ||
+                       world.func_180495_p(pos.func_177968_d()).func_185904_a() == Material.field_151586_h);
+               return isBeach && hasWater;
+       }
+       return false;
+   }
+
+   @Override
+   public final java.util.Set<ResourceLocation> getTags() {
+      return reverseTags.getTagNames();
+   }
+
+   static {
+      net.minecraftforge.common.ForgeHooks.setBlockToolSetter((block, tool, level) -> {
+         block.harvestTool = tool;
+         block.harvestLevel = level;
+      });
+   }
+   /* ========================================= FORGE END ======================================*/
+
    public static enum OffsetType {
       NONE,
       XZ,
