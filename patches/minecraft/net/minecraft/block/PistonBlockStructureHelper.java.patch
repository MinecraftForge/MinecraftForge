--- a/net/minecraft/block/PistonBlockStructureHelper.java
+++ b/net/minecraft/block/PistonBlockStructureHelper.java
@@ -48,7 +_,7 @@
       } else {
          for(int i = 0; i < this.toPush.size(); ++i) {
             BlockPos blockpos = this.toPush.get(i);
-            if (isSticky(this.level.getBlockState(blockpos).getBlock()) && !this.addBranchingBlocks(blockpos)) {
+            if (this.level.getBlockState(blockpos).isStickyBlock() && !this.addBranchingBlocks(blockpos)) {
                return false;
             }
          }
@@ -57,24 +_,9 @@
       }
    }
 
-   private static boolean isSticky(Block p_227029_0_) {
-      return p_227029_0_ == Blocks.SLIME_BLOCK || p_227029_0_ == Blocks.HONEY_BLOCK;
-   }
-
-   private static boolean canStickToEachOther(Block p_227030_0_, Block p_227030_1_) {
-      if (p_227030_0_ == Blocks.HONEY_BLOCK && p_227030_1_ == Blocks.SLIME_BLOCK) {
-         return false;
-      } else if (p_227030_0_ == Blocks.SLIME_BLOCK && p_227030_1_ == Blocks.HONEY_BLOCK) {
-         return false;
-      } else {
-         return isSticky(p_227030_0_) || isSticky(p_227030_1_);
-      }
-   }
-
    private boolean addBlockLine(BlockPos p_177251_1_, Direction p_177251_2_) {
       BlockState blockstate = this.level.getBlockState(p_177251_1_);
-      Block block = blockstate.getBlock();
-      if (blockstate.isAir()) {
+      if (level.isEmptyBlock(p_177251_1_)) {
          return true;
       } else if (!PistonBlock.isPushable(blockstate, this.level, p_177251_1_, this.pushDirection, false, p_177251_2_)) {
          return true;
@@ -87,12 +_,12 @@
          if (i + this.toPush.size() > 12) {
             return false;
          } else {
-            while(isSticky(block)) {
+            BlockState oldState;
+            while(blockstate.isStickyBlock()) {
                BlockPos blockpos = p_177251_1_.relative(this.pushDirection.getOpposite(), i);
-               Block block1 = block;
+               oldState = blockstate;
                blockstate = this.level.getBlockState(blockpos);
-               block = blockstate.getBlock();
-               if (blockstate.isAir() || !canStickToEachOther(block1, block) || !PistonBlock.isPushable(blockstate, this.level, blockpos, this.pushDirection, false, this.pushDirection.getOpposite()) || blockpos.equals(this.pistonPos)) {
+               if (blockstate.isAir(this.level, blockpos) || !oldState.canStickTo(blockstate) || !PistonBlock.isPushable(blockstate, this.level, blockpos, this.pushDirection, false, this.pushDirection.getOpposite()) || blockpos.equals(this.pistonPos)) {
                   break;
                }
 
@@ -119,7 +_,7 @@
 
                   for(int k = 0; k <= j + l; ++k) {
                      BlockPos blockpos2 = this.toPush.get(k);
-                     if (isSticky(this.level.getBlockState(blockpos2).getBlock()) && !this.addBranchingBlocks(blockpos2)) {
+                     if (this.level.getBlockState(blockpos2).isStickyBlock() && !this.addBranchingBlocks(blockpos2)) {
                         return false;
                      }
                   }
@@ -128,7 +_,7 @@
                }
 
                blockstate = this.level.getBlockState(blockpos1);
-               if (blockstate.isAir()) {
+               if (blockstate.isAir(level, blockpos1)) {
                   return true;
                }
 
@@ -173,7 +_,7 @@
          if (direction.getAxis() != this.pushDirection.getAxis()) {
             BlockPos blockpos = p_177250_1_.relative(direction);
             BlockState blockstate1 = this.level.getBlockState(blockpos);
-            if (canStickToEachOther(blockstate1.getBlock(), blockstate.getBlock()) && !this.addBlockLine(blockpos, direction)) {
+            if (blockstate1.canStickTo(blockstate) && !this.addBlockLine(blockpos, direction)) {
                return false;
             }
          }
