--- a/net/minecraft/block/FlowerPotBlock.java
+++ b/net/minecraft/block/FlowerPotBlock.java
@@ -24,10 +_,33 @@
    protected static final VoxelShape SHAPE = Block.box(5.0D, 0.0D, 5.0D, 11.0D, 6.0D, 11.0D);
    private final Block content;
 
+   @Deprecated // Mods should use the constructor below
    public FlowerPotBlock(Block p_i48395_1_, AbstractBlock.Properties p_i48395_2_) {
-      super(p_i48395_2_);
-      this.content = p_i48395_1_;
-      POTTED_BY_CONTENT.put(p_i48395_1_, this);
+       this(Blocks.FLOWER_POT == null ? null : () -> (FlowerPotBlock) Blocks.FLOWER_POT.delegate.get(), () -> p_i48395_1_.delegate.get(), p_i48395_2_);
+       if (Blocks.FLOWER_POT != null) {
+           ((FlowerPotBlock)Blocks.FLOWER_POT).addPlant(p_i48395_1_.getRegistryName(), () -> this);
+       }
+   }
+
+   /**
+    * For mod use, eliminates the need to extend this class, and prevents modded
+    * flower pots from altering vanilla behavior.
+    *
+    * @param emptyPot    The empty pot for this pot, or null for self.
+    * @param block The flower block.
+    * @param properties
+    */
+   public FlowerPotBlock(@javax.annotation.Nullable java.util.function.Supplier<FlowerPotBlock> emptyPot, java.util.function.Supplier<? extends Block> p_i48395_1_, AbstractBlock.Properties properties) {
+      super(properties);
+      this.content = null; // Unused, redirected by coremod
+      this.flowerDelegate = p_i48395_1_;
+      if (emptyPot == null) {
+         this.fullPots = Maps.newHashMap();
+         this.emptyPot = null;
+      } else {
+         this.fullPots = java.util.Collections.emptyMap();
+         this.emptyPot = emptyPot;
+      }
    }
 
    public VoxelShape getShape(BlockState p_220053_1_, IBlockReader p_220053_2_, BlockPos p_220053_3_, ISelectionContext p_220053_4_) {
@@ -41,7 +_,7 @@
    public ActionResultType use(BlockState p_225533_1_, World p_225533_2_, BlockPos p_225533_3_, PlayerEntity p_225533_4_, Hand p_225533_5_, BlockRayTraceResult p_225533_6_) {
       ItemStack itemstack = p_225533_4_.getItemInHand(p_225533_5_);
       Item item = itemstack.getItem();
-      Block block = item instanceof BlockItem ? POTTED_BY_CONTENT.getOrDefault(((BlockItem)item).getBlock(), Blocks.AIR) : Blocks.AIR;
+      Block block = item instanceof BlockItem ? getEmptyPot().fullPots.getOrDefault(((BlockItem)item).getBlock().getRegistryName(), Blocks.AIR.delegate).get() : Blocks.AIR;
       boolean flag = block == Blocks.AIR;
       boolean flag1 = this.content == Blocks.AIR;
       if (flag != flag1) {
@@ -59,7 +_,7 @@
                p_225533_4_.drop(itemstack1, false);
             }
 
-            p_225533_2_.setBlock(p_225533_3_, Blocks.FLOWER_POT.defaultBlockState(), 3);
+            p_225533_2_.setBlock(p_225533_3_, getEmptyPot().defaultBlockState(), 3);
          }
 
          return ActionResultType.sidedSuccess(p_225533_2_.isClientSide);
@@ -77,10 +_,31 @@
    }
 
    public Block getContent() {
-      return this.content;
+      return flowerDelegate.get();
    }
 
    public boolean isPathfindable(BlockState p_196266_1_, IBlockReader p_196266_2_, BlockPos p_196266_3_, PathType p_196266_4_) {
       return false;
    }
+
+   //Forge Start
+   private final Map<net.minecraft.util.ResourceLocation, java.util.function.Supplier<? extends Block>> fullPots;
+   private final java.util.function.Supplier<FlowerPotBlock> emptyPot;
+   private final java.util.function.Supplier<? extends Block> flowerDelegate;
+
+   public FlowerPotBlock getEmptyPot() {
+       return emptyPot == null ? this : emptyPot.get();
+   }
+
+   public void addPlant(net.minecraft.util.ResourceLocation flower, java.util.function.Supplier<? extends Block> fullPot) {
+       if (getEmptyPot() != this) {
+           throw new IllegalArgumentException("Cannot add plant to non-empty pot: " + this);
+       }
+       fullPots.put(flower, fullPot);
+   }
+
+   public Map<net.minecraft.util.ResourceLocation, java.util.function.Supplier<? extends Block>> getFullPotsView() {
+      return java.util.Collections.unmodifiableMap(fullPots);
+   }
+   //Forge End
 }
