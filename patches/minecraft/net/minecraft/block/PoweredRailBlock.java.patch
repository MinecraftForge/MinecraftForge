--- a/net/minecraft/block/PoweredRailBlock.java
+++ b/net/minecraft/block/PoweredRailBlock.java
@@ -14,10 +_,16 @@
 public class PoweredRailBlock extends AbstractRailBlock {
    public static final EnumProperty<RailShape> SHAPE = BlockStateProperties.RAIL_SHAPE_STRAIGHT;
    public static final BooleanProperty POWERED = BlockStateProperties.POWERED;
+   private final boolean isActivator;  // TRUE for an Activator Rail, FALSE for Powered Rail
 
    public PoweredRailBlock(AbstractBlock.Properties p_i48349_1_) {
-      super(true, p_i48349_1_);
+      this(p_i48349_1_, false);
+   }
+
+   protected PoweredRailBlock(AbstractBlock.Properties builder, boolean isPoweredRail) {
+      super(true, builder);
       this.registerDefaultState(this.stateDefinition.any().setValue(SHAPE, RailShape.NORTH_SOUTH).setValue(POWERED, Boolean.valueOf(false)));
+      this.isActivator = !isPoweredRail;
    }
 
    protected boolean findPoweredRailSignal(World p_176566_1_, BlockPos p_176566_2_, BlockState p_176566_3_, boolean p_176566_4_, int p_176566_5_) {
@@ -99,13 +_,13 @@
 
    protected boolean isSameRailWithPower(World p_208071_1_, BlockPos p_208071_2_, boolean p_208071_3_, int p_208071_4_, RailShape p_208071_5_) {
       BlockState blockstate = p_208071_1_.getBlockState(p_208071_2_);
-      if (!blockstate.is(this)) {
+      if (!(blockstate.getBlock() instanceof PoweredRailBlock)) {
          return false;
       } else {
-         RailShape railshape = blockstate.getValue(SHAPE);
+         RailShape railshape = getRailDirection(blockstate, p_208071_1_, p_208071_2_, null);
          if (p_208071_5_ != RailShape.EAST_WEST || railshape != RailShape.NORTH_SOUTH && railshape != RailShape.ASCENDING_NORTH && railshape != RailShape.ASCENDING_SOUTH) {
             if (p_208071_5_ != RailShape.NORTH_SOUTH || railshape != RailShape.EAST_WEST && railshape != RailShape.ASCENDING_EAST && railshape != RailShape.ASCENDING_WEST) {
-               if (blockstate.getValue(POWERED)) {
+               if (isActivator == (((PoweredRailBlock) blockstate.getBlock()).isActivator)) {
                   return p_208071_1_.hasNeighborSignal(p_208071_2_) ? true : this.findPoweredRailSignal(p_208071_1_, p_208071_2_, blockstate, p_208071_3_, p_208071_4_ + 1);
                } else {
                   return false;
@@ -156,6 +_,9 @@
             return p_185499_1_.setValue(SHAPE, RailShape.SOUTH_EAST);
          case NORTH_EAST:
             return p_185499_1_.setValue(SHAPE, RailShape.SOUTH_WEST);
+         case NORTH_SOUTH: //Forge fix: MC-196102
+         case EAST_WEST:
+            return p_185499_1_;
          }
       case COUNTERCLOCKWISE_90:
          switch((RailShape)p_185499_1_.getValue(SHAPE)) {
@@ -254,5 +_,9 @@
 
    protected void createBlockStateDefinition(StateContainer.Builder<Block, BlockState> p_206840_1_) {
       p_206840_1_.add(SHAPE, POWERED);
+   }
+
+   public boolean isActivatorRail() {
+      return isActivator;
    }
 }
