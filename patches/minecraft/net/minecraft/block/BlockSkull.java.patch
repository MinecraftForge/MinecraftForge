--- ../src_base/minecraft/net/minecraft/block/BlockSkull.java
+++ ../src_work/minecraft/net/minecraft/block/BlockSkull.java
@@ -2,6 +2,8 @@
 
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
+
+import java.util.ArrayList;
 import java.util.Random;
 import net.minecraft.block.material.Material;
 import net.minecraft.client.renderer.texture.IconRegister;
@@ -137,7 +139,22 @@
     /**
      * Drops the block items with a specified chance of dropping the specified items
      */
-    public void dropBlockAsItemWithChance(World par1World, int par2, int par3, int par4, int par5, float par6, int par7) {}
+    public void dropBlockAsItemWithChance(World par1World, int par2, int par3, int par4, int par5, float par6, int par7)
+    {
+        if (par1World.rand.nextFloat() < par6)
+        {
+            ItemStack itemstack = new ItemStack(Item.skull.itemID, 1, this.getDamageValue(par1World, par2, par3, par4));
+            TileEntitySkull tileentityskull = (TileEntitySkull) par1World.getBlockTileEntity(par2, par3, par4);
+
+            if (tileentityskull.getSkullType() == 3 && tileentityskull.getExtraType() != null && tileentityskull.getExtraType().length() > 0)
+            {
+                itemstack.setTagCompound(new NBTTagCompound());
+                itemstack.getTagCompound().setString("SkullOwner", tileentityskull.getExtraType());
+            }
+
+            this.dropBlockAsItem_do(par1World, par2, par3, par4, itemstack);
+        }
+    }
 
     /**
      * Called when the block is attempted to be harvested
@@ -150,6 +167,8 @@
             par1World.setBlockMetadataWithNotify(par2, par3, par4, par5, 4);
         }
 
+        //dropBlockAsItem(par1World, par2, par3, par4, par5, 0); // handled in dropNaturally
+
         super.onBlockHarvested(par1World, par2, par3, par4, par5, par6EntityPlayer);
     }
 
@@ -158,24 +177,30 @@
      */
     public void breakBlock(World par1World, int par2, int par3, int par4, int par5, int par6)
     {
-        if (!par1World.isRemote)
-        {
-            if ((par6 & 8) == 0)
-            {
-                ItemStack itemstack = new ItemStack(Item.skull.itemID, 1, this.getDamageValue(par1World, par2, par3, par4));
-                TileEntitySkull tileentityskull = (TileEntitySkull)par1World.getBlockTileEntity(par2, par3, par4);
-
-                if (tileentityskull.getSkullType() == 3 && tileentityskull.getExtraType() != null && tileentityskull.getExtraType().length() > 0)
-                {
-                    itemstack.setTagCompound(new NBTTagCompound());
-                    itemstack.getTagCompound().setString("SkullOwner", tileentityskull.getExtraType());
-                }
-
-                this.dropBlockAsItem_do(par1World, par2, par3, par4, itemstack);
-            }
-
-            super.breakBlock(par1World, par2, par3, par4, par5, par6);
-        }
+        super.breakBlock(par1World, par2, par3, par4, par5, par6);
+    }
+
+    @Override
+    public ArrayList<ItemStack> getBlockDropped(World world, int x, int y, int z, int metadata, int fortune)
+    {
+        ArrayList<ItemStack> drops = new ArrayList<ItemStack>();
+        if ((metadata & 8) == 0)
+        {
+            ItemStack itemstack = new ItemStack(Item.skull.itemID, 1, this.getDamageValue(world, x, y, z));
+            TileEntitySkull tileentityskull = (TileEntitySkull)world.getBlockTileEntity(x, y, z);
+
+            if (tileentityskull == null)
+            {
+                return drops;
+            }
+            if (tileentityskull.getSkullType() == 3 && tileentityskull.getExtraType() != null && tileentityskull.getExtraType().length() > 0)
+            {
+                itemstack.setTagCompound(new NBTTagCompound());
+                itemstack.getTagCompound().setString("SkullOwner", tileentityskull.getExtraType());
+            }
+            drops.add(itemstack);
+        }
+        return drops;
     }
 
     /**
