--- ../src_base/minecraft/net/minecraft/block/BlockTripWireSource.java
+++ ../src_work/minecraft/net/minecraft/block/BlockTripWireSource.java
@@ -8,6 +8,10 @@
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
 
+import net.minecraftforge.common.ForgeDirection;
+import static net.minecraftforge.common.ForgeDirection.*;
+import org.bukkit.event.block.BlockRedstoneEvent; // CraftBukkit
+
 public class BlockTripWireSource extends Block
 {
     public BlockTripWireSource(int par1)
@@ -64,7 +68,11 @@
      */
     public boolean canPlaceBlockOnSide(World par1World, int par2, int par3, int par4, int par5)
     {
-        return par5 == 2 && par1World.isBlockNormalCube(par2, par3, par4 + 1) ? true : (par5 == 3 && par1World.isBlockNormalCube(par2, par3, par4 - 1) ? true : (par5 == 4 && par1World.isBlockNormalCube(par2 + 1, par3, par4) ? true : par5 == 5 && par1World.isBlockNormalCube(par2 - 1, par3, par4)));
+        ForgeDirection dir = ForgeDirection.getOrientation(par5);
+        return (dir == NORTH && par1World.isBlockSolidOnSide(par2, par3, par4 + 1, NORTH)) ||
+               (dir == SOUTH && par1World.isBlockSolidOnSide(par2, par3, par4 - 1, SOUTH)) ||
+               (dir == WEST  && par1World.isBlockSolidOnSide(par2 + 1, par3, par4, WEST )) ||
+               (dir == EAST  && par1World.isBlockSolidOnSide(par2 - 1, par3, par4, EAST ));
     }
 
     /**
@@ -72,7 +80,10 @@
      */
     public boolean canPlaceBlockAt(World par1World, int par2, int par3, int par4)
     {
-        return par1World.isBlockNormalCube(par2 - 1, par3, par4) ? true : (par1World.isBlockNormalCube(par2 + 1, par3, par4) ? true : (par1World.isBlockNormalCube(par2, par3, par4 - 1) ? true : par1World.isBlockNormalCube(par2, par3, par4 + 1)));
+        return par1World.isBlockSolidOnSide(par2 - 1, par3, par4, EAST ) ||
+               par1World.isBlockSolidOnSide(par2 + 1, par3, par4, WEST ) ||
+               par1World.isBlockSolidOnSide(par2, par3, par4 - 1, SOUTH) ||
+               par1World.isBlockSolidOnSide(par2, par3, par4 + 1, NORTH);
     }
 
     /**
@@ -82,22 +93,22 @@
     {
         byte b0 = 0;
 
-        if (par5 == 2 && par1World.isBlockNormalCubeDefault(par2, par3, par4 + 1, true))
+        if (par5 == 2 && par1World.isBlockSolidOnSide(par2, par3, par4 + 1, NORTH, true))
         {
             b0 = 2;
         }
 
-        if (par5 == 3 && par1World.isBlockNormalCubeDefault(par2, par3, par4 - 1, true))
+        if (par5 == 3 && par1World.isBlockSolidOnSide(par2, par3, par4 - 1, SOUTH, true))
         {
             b0 = 0;
         }
 
-        if (par5 == 4 && par1World.isBlockNormalCubeDefault(par2 + 1, par3, par4, true))
+        if (par5 == 4 && par1World.isBlockSolidOnSide(par2 + 1, par3, par4, WEST, true))
         {
             b0 = 1;
         }
 
-        if (par5 == 5 && par1World.isBlockNormalCubeDefault(par2 - 1, par3, par4, true))
+        if (par5 == 5 && par1World.isBlockSolidOnSide(par2 - 1, par3, par4, EAST, true))
         {
             b0 = 3;
         }
@@ -127,22 +138,22 @@
                 int j1 = i1 & 3;
                 boolean flag = false;
 
-                if (!par1World.isBlockNormalCube(par2 - 1, par3, par4) && j1 == 3)
+                if (!par1World.isBlockSolidOnSide(par2 - 1, par3, par4, EAST) && j1 == 3)
                 {
                     flag = true;
                 }
 
-                if (!par1World.isBlockNormalCube(par2 + 1, par3, par4) && j1 == 1)
+                if (!par1World.isBlockSolidOnSide(par2 + 1, par3, par4, WEST) && j1 == 1)
                 {
                     flag = true;
                 }
 
-                if (!par1World.isBlockNormalCube(par2, par3, par4 - 1) && j1 == 0)
+                if (!par1World.isBlockSolidOnSide(par2, par3, par4 - 1, SOUTH) && j1 == 0)
                 {
                     flag = true;
                 }
 
-                if (!par1World.isBlockNormalCube(par2, par3, par4 + 1) && j1 == 2)
+                if (!par1World.isBlockSolidOnSide(par2, par3, par4 + 1, NORTH) && j1 == 2)
                 {
                     flag = true;
                 }
@@ -163,7 +174,7 @@
         boolean flag2 = (par6 & 8) == 8;
         boolean flag3 = par5 == Block.tripWireSource.blockID;
         boolean flag4 = false;
-        boolean flag5 = !par1World.doesBlockHaveSolidTopSurface(par2, par3 - 1, par4);
+        boolean flag5 = !par1World.isBlockSolidOnSide(par2, par3 - 1, par4, UP);
         int i2 = Direction.offsetX[l1];
         int j2 = Direction.offsetZ[l1];
         int k2 = 0;
@@ -230,6 +241,16 @@
             this.playSoundEffect(par1World, l2, par3, k3, flag3, flag4, flag1, flag2);
         }
 
+        // CraftBukkit start
+        org.bukkit.block.Block block = par1World.getWorld().getBlockAt(par2, par3, par4);
+        BlockRedstoneEvent eventRedstone = new BlockRedstoneEvent(block, 15, 0);
+        par1World.getServer().getPluginManager().callEvent(eventRedstone);
+
+        if (eventRedstone.getNewCurrent() > 0)
+        {
+            return;
+        }
+        // CraftBukkit end
         this.playSoundEffect(par1World, par2, par3, par4, flag3, flag4, flag1, flag2);
 
         if (par5 > 0)
