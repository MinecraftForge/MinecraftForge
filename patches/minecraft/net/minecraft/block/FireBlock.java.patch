--- a/net/minecraft/block/FireBlock.java
+++ b/net/minecraft/block/FireBlock.java
@@ -92,13 +_,13 @@
    protected BlockState getStateForPlacement(IBlockReader p_196448_1_, BlockPos p_196448_2_) {
       BlockPos blockpos = p_196448_2_.below();
       BlockState blockstate = p_196448_1_.getBlockState(blockpos);
-      if (!this.canBurn(blockstate) && !blockstate.isFaceSturdy(p_196448_1_, blockpos, Direction.UP)) {
+      if (!this.canCatchFire(p_196448_1_, p_196448_2_, Direction.UP) && !blockstate.isFaceSturdy(p_196448_1_, blockpos, Direction.UP)) {
          BlockState blockstate1 = this.defaultBlockState();
 
          for(Direction direction : Direction.values()) {
             BooleanProperty booleanproperty = PROPERTY_BY_DIRECTION.get(direction);
             if (booleanproperty != null) {
-               blockstate1 = blockstate1.setValue(booleanproperty, Boolean.valueOf(this.canBurn(p_196448_1_.getBlockState(p_196448_2_.relative(direction)))));
+               blockstate1 = blockstate1.setValue(booleanproperty, Boolean.valueOf(this.canCatchFire(p_196448_1_, p_196448_2_.relative(direction), direction.getOpposite())));
             }
          }
 
@@ -121,7 +_,7 @@
          }
 
          BlockState blockstate = p_225534_2_.getBlockState(p_225534_3_.below());
-         boolean flag = blockstate.is(p_225534_2_.dimensionType().infiniburn());
+         boolean flag = blockstate.isFireSource(p_225534_2_, p_225534_3_, Direction.UP);
          int i = p_225534_1_.getValue(AGE);
          if (!flag && p_225534_2_.isRaining() && this.isNearRain(p_225534_2_, p_225534_3_) && p_225534_4_.nextFloat() < 0.2F + (float)i * 0.03F) {
             p_225534_2_.removeBlock(p_225534_3_, false);
@@ -142,7 +_,7 @@
                   return;
                }
 
-               if (i == 15 && p_225534_4_.nextInt(4) == 0 && !this.canBurn(p_225534_2_.getBlockState(p_225534_3_.below()))) {
+               if (i == 15 && p_225534_4_.nextInt(4) == 0 && !this.canCatchFire(p_225534_2_, p_225534_3_.below(), Direction.UP)) {
                   p_225534_2_.removeBlock(p_225534_3_, false);
                   return;
                }
@@ -150,12 +_,12 @@
 
             boolean flag1 = p_225534_2_.isHumidAt(p_225534_3_);
             int k = flag1 ? -50 : 0;
-            this.checkBurnOut(p_225534_2_, p_225534_3_.east(), 300 + k, p_225534_4_, i);
-            this.checkBurnOut(p_225534_2_, p_225534_3_.west(), 300 + k, p_225534_4_, i);
-            this.checkBurnOut(p_225534_2_, p_225534_3_.below(), 250 + k, p_225534_4_, i);
-            this.checkBurnOut(p_225534_2_, p_225534_3_.above(), 250 + k, p_225534_4_, i);
-            this.checkBurnOut(p_225534_2_, p_225534_3_.north(), 300 + k, p_225534_4_, i);
-            this.checkBurnOut(p_225534_2_, p_225534_3_.south(), 300 + k, p_225534_4_, i);
+            this.tryCatchFire(p_225534_2_, p_225534_3_.east(), 300 + k, p_225534_4_, i, Direction.WEST);
+            this.tryCatchFire(p_225534_2_, p_225534_3_.west(), 300 + k, p_225534_4_, i, Direction.EAST);
+            this.tryCatchFire(p_225534_2_, p_225534_3_.below(), 250 + k, p_225534_4_, i, Direction.UP);
+            this.tryCatchFire(p_225534_2_, p_225534_3_.above(), 250 + k, p_225534_4_, i, Direction.DOWN);
+            this.tryCatchFire(p_225534_2_, p_225534_3_.north(), 300 + k, p_225534_4_, i, Direction.SOUTH);
+            this.tryCatchFire(p_225534_2_, p_225534_3_.south(), 300 + k, p_225534_4_, i, Direction.NORTH);
             BlockPos.Mutable blockpos$mutable = new BlockPos.Mutable();
 
             for(int l = -1; l <= 1; ++l) {
@@ -193,16 +_,18 @@
       return p_176537_1_.isRainingAt(p_176537_2_) || p_176537_1_.isRainingAt(p_176537_2_.west()) || p_176537_1_.isRainingAt(p_176537_2_.east()) || p_176537_1_.isRainingAt(p_176537_2_.north()) || p_176537_1_.isRainingAt(p_176537_2_.south());
    }
 
+   @Deprecated //Forge: Use IForgeBlockState.getFlammability, Public for default implementation only.
    public int getBurnOdd(BlockState p_220274_1_) {
       return p_220274_1_.hasProperty(BlockStateProperties.WATERLOGGED) && p_220274_1_.getValue(BlockStateProperties.WATERLOGGED) ? 0 : this.burnOdds.getInt(p_220274_1_.getBlock());
    }
 
+   @Deprecated //Forge: Use IForgeBlockState.getFireSpreadSpeed
    public int getFlameOdds(BlockState p_220275_1_) {
       return p_220275_1_.hasProperty(BlockStateProperties.WATERLOGGED) && p_220275_1_.getValue(BlockStateProperties.WATERLOGGED) ? 0 : this.flameOdds.getInt(p_220275_1_.getBlock());
    }
 
-   private void checkBurnOut(World p_176536_1_, BlockPos p_176536_2_, int p_176536_3_, Random p_176536_4_, int p_176536_5_) {
-      int i = this.getBurnOdd(p_176536_1_.getBlockState(p_176536_2_));
+   private void tryCatchFire(World p_176536_1_, BlockPos p_176536_2_, int p_176536_3_, Random p_176536_4_, int p_176536_5_, Direction face) {
+      int i = p_176536_1_.getBlockState(p_176536_2_).getFlammability(p_176536_1_, p_176536_2_, face);
       if (p_176536_4_.nextInt(p_176536_3_) < i) {
          BlockState blockstate = p_176536_1_.getBlockState(p_176536_2_);
          if (p_176536_4_.nextInt(p_176536_5_ + 10) < 5 && !p_176536_1_.isRainingAt(p_176536_2_)) {
@@ -212,11 +_,7 @@
             p_176536_1_.removeBlock(p_176536_2_, false);
          }
 
-         Block block = blockstate.getBlock();
-         if (block instanceof TNTBlock) {
-            TNTBlock tntblock = (TNTBlock)block;
-            TNTBlock.explode(p_176536_1_, p_176536_2_);
-         }
+         blockstate.catchFire(p_176536_1_, p_176536_2_, face, null);
       }
 
    }
@@ -228,7 +_,7 @@
 
    private boolean isValidFireLocation(IBlockReader p_196447_1_, BlockPos p_196447_2_) {
       for(Direction direction : Direction.values()) {
-         if (this.canBurn(p_196447_1_.getBlockState(p_196447_2_.relative(direction)))) {
+         if (this.canCatchFire(p_196447_1_, p_196447_2_.relative(direction), direction.getOpposite())) {
             return true;
          }
       }
@@ -244,13 +_,14 @@
 
          for(Direction direction : Direction.values()) {
             BlockState blockstate = p_176538_1_.getBlockState(p_176538_2_.relative(direction));
-            i = Math.max(this.getFlameOdds(blockstate), i);
+            i = Math.max(blockstate.getFireSpreadSpeed(p_176538_1_, p_176538_2_.relative(direction), direction.getOpposite()), i);
          }
 
          return i;
       }
    }
 
+   @Deprecated //Forge: Use canCatchFire with more context
    protected boolean canBurn(BlockState p_196446_1_) {
       return this.getFlameOdds(p_196446_1_) > 0;
    }
@@ -269,8 +_,21 @@
    }
 
    private void setFlammable(Block p_180686_1_, int p_180686_2_, int p_180686_3_) {
+      if (p_180686_1_ == Blocks.AIR) throw new IllegalArgumentException("Tried to set air on fire... This is bad.");
       this.flameOdds.put(p_180686_1_, p_180686_2_);
       this.burnOdds.put(p_180686_1_, p_180686_3_);
+   }
+
+   /**
+    * Side sensitive version that calls the block function.
+    *
+    * @param world The current world
+    * @param pos Block position
+    * @param face The side the fire is coming from
+    * @return True if the face can catch fire.
+    */
+   public boolean canCatchFire(IBlockReader world, BlockPos pos, Direction face) {
+      return world.getBlockState(pos).isFlammable(world, pos, face);
    }
 
    public static void bootStrap() {
