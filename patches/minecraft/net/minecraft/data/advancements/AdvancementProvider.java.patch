--- a/net/minecraft/data/advancements/AdvancementProvider.java
+++ b/net/minecraft/data/advancements/AdvancementProvider.java
@@ -18,8 +_,19 @@
    private final PackOutput.PathProvider f_236156_;
    private final List<AdvancementSubProvider> f_244266_;
    private final CompletableFuture<HolderLookup.Provider> f_254664_;
+   @org.jetbrains.annotations.Nullable
+   protected final net.minecraftforge.common.data.ExistingFileHelper existingFileHelper;
 
+   /**
+    * @deprecated Forge: Use the {@linkplain #AdvancementProvider(PackOutput, CompletableFuture, List, net.minecraftforge.common.data.ExistingFileHelper) existing file helper variant}
+    */
+   @Deprecated
    public AdvancementProvider(PackOutput p_256529_, CompletableFuture<HolderLookup.Provider> p_255722_, List<AdvancementSubProvider> p_255883_) {
+      this(p_256529_, p_255722_, p_255883_, null);
+   }
+
+   public AdvancementProvider(PackOutput p_256529_, CompletableFuture<HolderLookup.Provider> p_255722_, List<AdvancementSubProvider> p_255883_, @org.jetbrains.annotations.Nullable net.minecraftforge.common.data.ExistingFileHelper existingFileHelper) {
+      this.existingFileHelper = existingFileHelper;
       this.f_236156_ = p_256529_.m_245269_(PackOutput.Target.DATA_PACK, "advancements");
       this.f_244266_ = p_255883_;
       this.f_254664_ = p_255722_;
@@ -38,14 +_,27 @@
             }
          };
 
-         for(AdvancementSubProvider advancementsubprovider : this.f_244266_) {
-            advancementsubprovider.m_245571_(p_255484_, consumer);
-         }
+         // Forge: Allow mods to take control of advancement registration
+         this.registerAdvancements(p_255484_, consumer, this.existingFileHelper);
 
          return CompletableFuture.allOf(list.toArray((p_253393_) -> {
             return new CompletableFuture[p_253393_];
          }));
       });
+   }
+
+   /**
+    * Registers all {@linkplain Advancement advancements}.
+    *
+    * @param registries the registries available for lookup including all registries in {@link net.minecraft.core.registries.Registries}
+    * @param saver a {@link Consumer} which saves any advancements provided
+    * @param existingFileHelper the existing file helper to check for the existence of files like parent advancements
+    * @see Advancement.Builder#save(Consumer, ResourceLocation, net.minecraftforge.common.data.ExistingFileHelper)
+    */
+   protected void registerAdvancements(HolderLookup.Provider registries, Consumer<Advancement> saver, net.minecraftforge.common.data.ExistingFileHelper existingFileHelper) {
+      for (AdvancementSubProvider subProvider : this.f_244266_) {
+         subProvider.m_245571_(registries, saver);
+      }
    }
 
    public final String m_6055_() {
