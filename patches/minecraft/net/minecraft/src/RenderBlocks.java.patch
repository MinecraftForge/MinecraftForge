--- ../src_base/minecraft/net/minecraft/src/RenderBlocks.java
+++ ../src_work/minecraft/net/minecraft/src/RenderBlocks.java
@@ -3,6 +3,9 @@
 import cpw.mods.fml.common.Side;
 import cpw.mods.fml.common.asm.SideOnly;
 import net.minecraft.client.Minecraft;
+import net.minecraftforge.common.ForgeDirection;
+import static net.minecraftforge.common.ForgeDirection.*;
+
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.opengl.GL12;
 
@@ -558,9 +561,8 @@
     public boolean renderBlockBed(Block par1Block, int par2, int par3, int par4)
     {
         Tessellator var5 = Tessellator.instance;
-        int var6 = this.blockAccess.getBlockMetadata(par2, par3, par4);
-        int var7 = BlockBed.getDirection(var6);
-        boolean var8 = BlockBed.isBlockHeadOfBed(var6);
+        int var7 = par1Block.getBedDirection(blockAccess, par2, par3, par4);
+        boolean var8 = par1Block.isBedFoot(blockAccess, par2, par3, par4);
         float var9 = 0.5F;
         float var10 = 1.0F;
         float var11 = 0.8F;
@@ -569,6 +571,7 @@
         var5.setBrightness(var25);
         var5.setColorOpaque_F(var9, var9, var9);
         int var27 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 0);
+        if (overrideBlockTexture >= 0) var27 = overrideBlockTexture; //BugFix Proper breaking texture on underside
         int var28 = (var27 & 15) << 4;
         int var29 = var27 & 240;
         double var30 = (double)((float)var28 / 256.0F);
@@ -587,6 +590,7 @@
         var5.setBrightness(par1Block.getMixedBrightnessForBlock(this.blockAccess, par2, par3 + 1, par4));
         var5.setColorOpaque_F(var10, var10, var10);
         var27 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 1);
+        if (overrideBlockTexture >= 0) var27 = overrideBlockTexture; //BugFix Proper breaking texture on top
         var28 = (var27 & 15) << 4;
         var29 = var27 & 240;
         var30 = (double)((float)var28 / 256.0F);
@@ -1584,7 +1588,7 @@
         var8.setBrightness(par1Block.getMixedBrightnessForBlock(this.blockAccess, par2, par3, par4));
         float var13 = 1.0F;
 
-        if (Block.lightValue[par1Block.blockID] > 0)
+        if (Block.blocksList[par1Block.blockID].getLightValue(this.blockAccess, par2, par3, par4) > 0)
         {
             var13 = 1.0F;
         }
@@ -1807,7 +1811,7 @@
         var5.setBrightness(par1Block.getMixedBrightnessForBlock(this.blockAccess, par2, par3, par4));
         float var17 = 1.0F;
 
-        if (Block.lightValue[par1Block.blockID] > 0)
+        if (Block.blocksList[par1Block.blockID].getLightValue(this.blockAccess, par2, par3, par4) > 0)
         {
             var17 = 1.0F;
         }
@@ -2310,7 +2314,7 @@
         double var30;
         double var32;
 
-        if (!this.blockAccess.doesBlockHaveSolidTopSurface(par2, par3 - 1, par4) && !Block.fire.canBlockCatchFire(this.blockAccess, par2, par3 - 1, par4))
+        if (!this.blockAccess.doesBlockHaveSolidTopSurface(par2, par3 - 1, par4) && !Block.fire.canBlockCatchFire(this.blockAccess, par2, par3 - 1, par4, UP))
         {
             float var36 = 0.2F;
             float var19 = 0.0625F;
@@ -2330,7 +2334,7 @@
                 var9 = var20;
             }
 
-            if (Block.fire.canBlockCatchFire(this.blockAccess, par2 - 1, par3, par4))
+            if (Block.fire.canBlockCatchFire(this.blockAccess, par2 - 1, par3, par4, EAST))
             {
                 var5.addVertexWithUV((double)((float)par2 + var36), (double)((float)par3 + var17 + var19), (double)(par4 + 1), var11, var13);
                 var5.addVertexWithUV((double)(par2 + 0), (double)((float)(par3 + 0) + var19), (double)(par4 + 1), var11, var15);
@@ -2342,7 +2346,7 @@
                 var5.addVertexWithUV((double)((float)par2 + var36), (double)((float)par3 + var17 + var19), (double)(par4 + 1), var11, var13);
             }
 
-            if (Block.fire.canBlockCatchFire(this.blockAccess, par2 + 1, par3, par4))
+            if (Block.fire.canBlockCatchFire(this.blockAccess, par2 + 1, par3, par4, WEST))
             {
                 var5.addVertexWithUV((double)((float)(par2 + 1) - var36), (double)((float)par3 + var17 + var19), (double)(par4 + 0), var9, var13);
                 var5.addVertexWithUV((double)(par2 + 1 - 0), (double)((float)(par3 + 0) + var19), (double)(par4 + 0), var9, var15);
@@ -2354,7 +2358,7 @@
                 var5.addVertexWithUV((double)((float)(par2 + 1) - var36), (double)((float)par3 + var17 + var19), (double)(par4 + 0), var9, var13);
             }
 
-            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3, par4 - 1))
+            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3, par4 - 1, SOUTH))
             {
                 var5.addVertexWithUV((double)(par2 + 0), (double)((float)par3 + var17 + var19), (double)((float)par4 + var36), var11, var13);
                 var5.addVertexWithUV((double)(par2 + 0), (double)((float)(par3 + 0) + var19), (double)(par4 + 0), var11, var15);
@@ -2366,7 +2370,7 @@
                 var5.addVertexWithUV((double)(par2 + 0), (double)((float)par3 + var17 + var19), (double)((float)par4 + var36), var11, var13);
             }
 
-            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3, par4 + 1))
+            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3, par4 + 1, NORTH))
             {
                 var5.addVertexWithUV((double)(par2 + 1), (double)((float)par3 + var17 + var19), (double)((float)(par4 + 1) - var36), var9, var13);
                 var5.addVertexWithUV((double)(par2 + 1), (double)((float)(par3 + 0) + var19), (double)(par4 + 1 - 0), var9, var15);
@@ -2378,7 +2382,7 @@
                 var5.addVertexWithUV((double)(par2 + 1), (double)((float)par3 + var17 + var19), (double)((float)(par4 + 1) - var36), var9, var13);
             }
 
-            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3 + 1, par4))
+            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3 + 1, par4, DOWN))
             {
                 var20 = (double)par2 + 0.5D + 0.5D;
                 var22 = (double)par2 + 0.5D - 0.5D;
@@ -4135,7 +4139,7 @@
             var8 = var11;
         }
 
-        return Minecraft.isAmbientOcclusionEnabled() && Block.lightValue[par1Block.blockID] == 0 ? this.renderStandardBlockWithAmbientOcclusion(par1Block, par2, par3, par4, var6, var7, var8) : this.renderStandardBlockWithColorMultiplier(par1Block, par2, par3, par4, var6, var7, var8);
+        return Minecraft.isAmbientOcclusionEnabled() && Block.blocksList[par1Block.blockID].getLightValue(this.blockAccess, par2, par3, par4) == 0 ? this.renderStandardBlockWithAmbientOcclusion(par1Block, par2, par3, par4, var6, var7, var8) : this.renderStandardBlockWithColorMultiplier(par1Block, par2, par3, par4, var6, var7, var8);
     }
 
     /**
@@ -4230,18 +4234,19 @@
 
         Tessellator var26 = Tessellator.instance;
         var26.setBrightness(983055);
-        this.aoGrassXYZPPC = Block.canBlockGrass[this.blockAccess.getBlockId(par2 + 1, par3 + 1, par4)];
-        this.aoGrassXYZPNC = Block.canBlockGrass[this.blockAccess.getBlockId(par2 + 1, par3 - 1, par4)];
-        this.aoGrassXYZPCP = Block.canBlockGrass[this.blockAccess.getBlockId(par2 + 1, par3, par4 + 1)];
-        this.aoGrassXYZPCN = Block.canBlockGrass[this.blockAccess.getBlockId(par2 + 1, par3, par4 - 1)];
-        this.aoGrassXYZNPC = Block.canBlockGrass[this.blockAccess.getBlockId(par2 - 1, par3 + 1, par4)];
-        this.aoGrassXYZNNC = Block.canBlockGrass[this.blockAccess.getBlockId(par2 - 1, par3 - 1, par4)];
-        this.aoGrassXYZNCN = Block.canBlockGrass[this.blockAccess.getBlockId(par2 - 1, par3, par4 - 1)];
-        this.aoGrassXYZNCP = Block.canBlockGrass[this.blockAccess.getBlockId(par2 - 1, par3, par4 + 1)];
-        this.aoGrassXYZCPP = Block.canBlockGrass[this.blockAccess.getBlockId(par2, par3 + 1, par4 + 1)];
-        this.aoGrassXYZCPN = Block.canBlockGrass[this.blockAccess.getBlockId(par2, par3 + 1, par4 - 1)];
-        this.aoGrassXYZCNP = Block.canBlockGrass[this.blockAccess.getBlockId(par2, par3 - 1, par4 + 1)];
-        this.aoGrassXYZCNN = Block.canBlockGrass[this.blockAccess.getBlockId(par2, par3 - 1, par4 - 1)];
+        Block block;
+        block = Block.blocksList[this.blockAccess.getBlockId(par2 + 1, par3 + 1, par4)]; this.aoGrassXYZPPC = block == null ? true : block.getOpacityForSide(this.blockAccess, par2 + 1, par3 + 1, par4, ForgeDirection.UNKNOWN) == 0;
+        block = Block.blocksList[this.blockAccess.getBlockId(par2 + 1, par3 - 1, par4)]; this.aoGrassXYZPNC = block == null ? true : block.getOpacityForSide(this.blockAccess, par2 + 1, par3 - 1, par4, ForgeDirection.UNKNOWN) == 0;
+        block = Block.blocksList[this.blockAccess.getBlockId(par2 + 1, par3, par4 + 1)]; this.aoGrassXYZPCP = block == null ? true : block.getOpacityForSide(this.blockAccess, par2 + 1, par3, par4 + 1, ForgeDirection.UNKNOWN) == 0;
+        block = Block.blocksList[this.blockAccess.getBlockId(par2 + 1, par3, par4 - 1)]; this.aoGrassXYZPCN = block == null ? true : block.getOpacityForSide(this.blockAccess, par2 + 1, par3, par4 - 1, ForgeDirection.UNKNOWN) == 0;
+        block = Block.blocksList[this.blockAccess.getBlockId(par2 - 1, par3 + 1, par4)]; this.aoGrassXYZNPC = block == null ? true : block.getOpacityForSide(this.blockAccess, par2 - 1, par3 + 1, par4, ForgeDirection.UNKNOWN) == 0;
+        block = Block.blocksList[this.blockAccess.getBlockId(par2 - 1, par3 - 1, par4)]; this.aoGrassXYZNNC = block == null ? true : block.getOpacityForSide(this.blockAccess, par2 - 1, par3 - 1, par4, ForgeDirection.UNKNOWN) == 0;
+        block = Block.blocksList[this.blockAccess.getBlockId(par2 - 1, par3, par4 - 1)]; this.aoGrassXYZNCN = block == null ? true : block.getOpacityForSide(this.blockAccess, par2 - 1, par3, par4 - 1, ForgeDirection.UNKNOWN) == 0;
+        block = Block.blocksList[this.blockAccess.getBlockId(par2 - 1, par3, par4 + 1)]; this.aoGrassXYZNCP = block == null ? true : block.getOpacityForSide(this.blockAccess, par2 - 1, par3, par4 + 1, ForgeDirection.UNKNOWN) == 0;
+        block = Block.blocksList[this.blockAccess.getBlockId(par2, par3 + 1, par4 + 1)]; this.aoGrassXYZCPP = block == null ? true : block.getOpacityForSide(this.blockAccess, par2, par3 + 1, par4 + 1, ForgeDirection.UNKNOWN) == 0;
+        block = Block.blocksList[this.blockAccess.getBlockId(par2, par3 + 1, par4 - 1)]; this.aoGrassXYZCPN = block == null ? true : block.getOpacityForSide(this.blockAccess, par2, par3 + 1, par4 - 1, ForgeDirection.UNKNOWN) == 0;
+        block = Block.blocksList[this.blockAccess.getBlockId(par2, par3 - 1, par4 + 1)]; this.aoGrassXYZCNP = block == null ? true : block.getOpacityForSide(this.blockAccess, par2, par3 - 1, par4 + 1, ForgeDirection.UNKNOWN) == 0;
+        block = Block.blocksList[this.blockAccess.getBlockId(par2, par3 - 1, par4 - 1)]; this.aoGrassXYZCNN = block == null ? true : block.getOpacityForSide(this.blockAccess, par2, par3 - 1, par4 - 1, ForgeDirection.UNKNOWN) == 0;
 
         if (par1Block.blockIndexInTexture == 3)
         {
@@ -4574,7 +4579,7 @@
             var27 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 2);
             this.renderEastFace(par1Block, (double)par2, (double)par3, (double)par4, var27);
 
-            if (fancyGrass && var27 == 3 && this.overrideBlockTexture < 0)
+            if (Tessellator.instance.defaultTexture && fancyGrass && var27 == 3 && this.overrideBlockTexture < 0)
             {
                 this.colorRedTopLeft *= par5;
                 this.colorRedBottomLeft *= par5;
@@ -4697,7 +4702,7 @@
             var27 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 3);
             this.renderWestFace(par1Block, (double)par2, (double)par3, (double)par4, par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 3));
 
-            if (fancyGrass && var27 == 3 && this.overrideBlockTexture < 0)
+            if (Tessellator.instance.defaultTexture && fancyGrass && var27 == 3 && this.overrideBlockTexture < 0)
             {
                 this.colorRedTopLeft *= par5;
                 this.colorRedBottomLeft *= par5;
@@ -4820,7 +4825,7 @@
             var27 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 4);
             this.renderNorthFace(par1Block, (double)par2, (double)par3, (double)par4, var27);
 
-            if (fancyGrass && var27 == 3 && this.overrideBlockTexture < 0)
+            if (Tessellator.instance.defaultTexture && fancyGrass && var27 == 3 && this.overrideBlockTexture < 0)
             {
                 this.colorRedTopLeft *= par5;
                 this.colorRedBottomLeft *= par5;
@@ -4943,7 +4948,7 @@
             var27 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 5);
             this.renderSouthFace(par1Block, (double)par2, (double)par3, (double)par4, var27);
 
-            if (fancyGrass && var27 == 3 && this.overrideBlockTexture < 0)
+            if (Tessellator.instance.defaultTexture && fancyGrass && var27 == 3 && this.overrideBlockTexture < 0)
             {
                 this.colorRedTopLeft *= par5;
                 this.colorRedBottomLeft *= par5;
@@ -5055,7 +5060,7 @@
             var28 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 2);
             this.renderEastFace(par1Block, (double)par2, (double)par3, (double)par4, var28);
 
-            if (fancyGrass && var28 == 3 && this.overrideBlockTexture < 0)
+            if (Tessellator.instance.defaultTexture && fancyGrass && var28 == 3 && this.overrideBlockTexture < 0)
             {
                 var8.setColorOpaque_F(var18 * par5, var21 * par6, var24 * par7);
                 this.renderEastFace(par1Block, (double)par2, (double)par3, (double)par4, 38);
@@ -5071,7 +5076,7 @@
             var28 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 3);
             this.renderWestFace(par1Block, (double)par2, (double)par3, (double)par4, var28);
 
-            if (fancyGrass && var28 == 3 && this.overrideBlockTexture < 0)
+            if (Tessellator.instance.defaultTexture && fancyGrass && var28 == 3 && this.overrideBlockTexture < 0)
             {
                 var8.setColorOpaque_F(var18 * par5, var21 * par6, var24 * par7);
                 this.renderWestFace(par1Block, (double)par2, (double)par3, (double)par4, 38);
@@ -5087,7 +5092,7 @@
             var28 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 4);
             this.renderNorthFace(par1Block, (double)par2, (double)par3, (double)par4, var28);
 
-            if (fancyGrass && var28 == 3 && this.overrideBlockTexture < 0)
+            if (Tessellator.instance.defaultTexture && fancyGrass && var28 == 3 && this.overrideBlockTexture < 0)
             {
                 var8.setColorOpaque_F(var19 * par5, var22 * par6, var25 * par7);
                 this.renderNorthFace(par1Block, (double)par2, (double)par3, (double)par4, 38);
@@ -5103,7 +5108,7 @@
             var28 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 5);
             this.renderSouthFace(par1Block, (double)par2, (double)par3, (double)par4, var28);
 
-            if (fancyGrass && var28 == 3 && this.overrideBlockTexture < 0)
+            if (Tessellator.instance.defaultTexture && fancyGrass && var28 == 3 && this.overrideBlockTexture < 0)
             {
                 var8.setColorOpaque_F(var19 * par5, var22 * par6, var25 * par7);
                 this.renderSouthFace(par1Block, (double)par2, (double)par3, (double)par4, 38);
