--- a/net/minecraft/commands/Commands.java
+++ b/net/minecraft/commands/Commands.java
@@ -196,7 +_,7 @@
          JfrCommand.register(this.dispatcher);
       }
 
-      if (SharedConstants.IS_RUNNING_IN_IDE) {
+      if (net.minecraftforge.gametest.ForgeGameTestHooks.isGametestEnabled()) {
          TestCommand.register(this.dispatcher);
          SpawnArmorTrimsCommand.register(this.dispatcher);
          if (p_230943_.includeDedicated) {
@@ -224,9 +_,11 @@
       if (p_230943_.includeIntegrated) {
          PublishCommand.register(this.dispatcher);
       }
+      net.minecraftforge.event.ForgeEventFactory.onCommandRegister(this.dispatcher, p_230943_, p_230944_);
 
       this.dispatcher.setConsumer((p_230954_, p_230955_, p_230956_) -> {
          p_230954_.getSource().onCommandComplete(p_230954_, p_230955_, p_230956_);
+         p_230954_.getSource().onCommandComplete(p_230954_, p_230955_, p_230956_);
       });
    }
 
@@ -249,7 +_,16 @@
 
       try {
          try {
-            return this.dispatcher.execute(p_242844_);
+            net.minecraftforge.event.CommandEvent event = new net.minecraftforge.event.CommandEvent(p_242844_);
+            if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event)) {
+               if (event.getException() instanceof Exception exception) {
+                  throw exception;
+               } else if (event.getException() != null) {
+                  com.google.common.base.Throwables.throwIfUnchecked(event.getException());
+               }
+               return 1;
+            }
+            return this.dispatcher.execute(event.getParseResults());
          } catch (CommandRuntimeException commandruntimeexception) {
             commandsourcestack.sendFailure(commandruntimeexception.getComponent());
             return 0;
@@ -305,7 +_,8 @@
       Map<CommandNode<CommandSourceStack>, CommandNode<SharedSuggestionProvider>> map = Maps.newHashMap();
       RootCommandNode<SharedSuggestionProvider> rootcommandnode = new RootCommandNode<>();
       map.put(this.dispatcher.getRoot(), rootcommandnode);
-      this.fillUsableCommands(this.dispatcher.getRoot(), rootcommandnode, p_82096_.createCommandSourceStack(), map);
+      // FORGE: Use our own command node merging method to handle redirect nodes properly, see issue #7551
+      net.minecraftforge.server.command.CommandHelper.mergeCommandNode(this.dispatcher.getRoot(), rootcommandnode, map, p_82096_.createCommandSourceStack(), ctx -> 0, suggest -> SuggestionProviders.safelySwap((com.mojang.brigadier.suggestion.SuggestionProvider<SharedSuggestionProvider>) (com.mojang.brigadier.suggestion.SuggestionProvider<?>) suggest));
       p_82096_.connection.send(new ClientboundCommandsPacket(rootcommandnode));
    }
 
