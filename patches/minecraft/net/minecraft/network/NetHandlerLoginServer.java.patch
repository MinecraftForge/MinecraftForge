--- a/net/minecraft/network/NetHandlerLoginServer.java
+++ b/net/minecraft/network/NetHandlerLoginServer.java
@@ -54,7 +54,13 @@
    }
 
    public void func_73660_a() {
-      if (this.field_147328_g == NetHandlerLoginServer.LoginState.READY_TO_ACCEPT) {
+      if (this.field_147328_g == LoginState.NEGOTIATING) {
+         // We force the state into "NEGOTIATING" which is otherwise unused. Once we're completed we move the negotiation onto "READY_TO_ACCEPT"
+         // Might want to promote player object creation to here as well..
+         boolean negotiationComplete = net.minecraftforge.fml.network.NetworkHooks.tickNegotiation(this, this.field_147333_a, this.field_181025_l);
+         if (negotiationComplete)
+            this.field_147328_g = LoginState.READY_TO_ACCEPT;
+      } else if (this.field_147328_g == NetHandlerLoginServer.LoginState.READY_TO_ACCEPT) {
          this.func_147326_c();
       } else if (this.field_147328_g == NetHandlerLoginServer.LoginState.DELAY_ACCEPT) {
          EntityPlayerMP entityplayermp = this.field_147327_f.func_184103_al().func_177451_a(this.field_147337_i.getId());
@@ -125,7 +131,7 @@
          this.field_147328_g = NetHandlerLoginServer.LoginState.KEY;
          this.field_147333_a.func_179290_a(new SPacketEncryptionRequest("", this.field_147327_f.func_71250_E().getPublic(), this.field_147330_e));
       } else {
-         this.field_147328_g = NetHandlerLoginServer.LoginState.READY_TO_ACCEPT;
+         this.field_147328_g = NetHandlerLoginServer.LoginState.NEGOTIATING;
       }
 
    }
@@ -139,7 +145,7 @@
          this.field_147335_k = p_147315_1_.func_149300_a(privatekey);
          this.field_147328_g = NetHandlerLoginServer.LoginState.AUTHENTICATING;
          this.field_147333_a.func_150727_a(this.field_147335_k);
-         Thread thread = new Thread("User Authenticator #" + field_147331_b.incrementAndGet()) {
+         Thread thread = new Thread(net.minecraftforge.fml.common.thread.SidedThreadGroups.SERVER, "User Authenticator #" + field_147331_b.incrementAndGet()) {
             public void run() {
                GameProfile gameprofile = NetHandlerLoginServer.this.field_147337_i;
 
@@ -148,11 +154,11 @@
                   NetHandlerLoginServer.this.field_147337_i = NetHandlerLoginServer.this.field_147327_f.func_147130_as().hasJoinedServer(new GameProfile((UUID)null, gameprofile.getName()), s, this.func_191235_a());
                   if (NetHandlerLoginServer.this.field_147337_i != null) {
                      NetHandlerLoginServer.field_147332_c.info("UUID of player {} is {}", NetHandlerLoginServer.this.field_147337_i.getName(), NetHandlerLoginServer.this.field_147337_i.getId());
-                     NetHandlerLoginServer.this.field_147328_g = NetHandlerLoginServer.LoginState.READY_TO_ACCEPT;
+                     NetHandlerLoginServer.this.field_147328_g = NetHandlerLoginServer.LoginState.NEGOTIATING;
                   } else if (NetHandlerLoginServer.this.field_147327_f.func_71264_H()) {
                      NetHandlerLoginServer.field_147332_c.warn("Failed to verify username but will let them in anyway!");
                      NetHandlerLoginServer.this.field_147337_i = NetHandlerLoginServer.this.func_152506_a(gameprofile);
-                     NetHandlerLoginServer.this.field_147328_g = NetHandlerLoginServer.LoginState.READY_TO_ACCEPT;
+                     NetHandlerLoginServer.this.field_147328_g = NetHandlerLoginServer.LoginState.NEGOTIATING;
                   } else {
                      NetHandlerLoginServer.this.func_194026_b(new TextComponentTranslation("multiplayer.disconnect.unverified_username"));
                      NetHandlerLoginServer.field_147332_c.error("Username '{}' tried to join with an invalid session", (Object)gameprofile.getName());
@@ -161,7 +167,7 @@
                   if (NetHandlerLoginServer.this.field_147327_f.func_71264_H()) {
                      NetHandlerLoginServer.field_147332_c.warn("Authentication servers are down but will let them in anyway!");
                      NetHandlerLoginServer.this.field_147337_i = NetHandlerLoginServer.this.func_152506_a(gameprofile);
-                     NetHandlerLoginServer.this.field_147328_g = NetHandlerLoginServer.LoginState.READY_TO_ACCEPT;
+                     NetHandlerLoginServer.this.field_147328_g = NetHandlerLoginServer.LoginState.NEGOTIATING;
                   } else {
                      NetHandlerLoginServer.this.func_194026_b(new TextComponentTranslation("multiplayer.disconnect.authservers_down"));
                      NetHandlerLoginServer.field_147332_c.error("Couldn't verify username because servers are unavailable");
@@ -182,6 +188,7 @@
    }
 
    public void func_209526_a(CPacketCustomPayloadLogin p_209526_1_) {
+      if (!net.minecraftforge.fml.network.NetworkHooks.onCustomPayload(p_209526_1_, this.field_147333_a))
       this.func_194026_b(new TextComponentTranslation("multiplayer.disconnect.unexpected_query_response"));
    }
 
