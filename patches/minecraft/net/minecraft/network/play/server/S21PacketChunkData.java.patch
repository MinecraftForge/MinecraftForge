--- ../src-base/minecraft/net/minecraft/network/play/server/S21PacketChunkData.java
+++ ../src-work/minecraft/net/minecraft/network/play/server/S21PacketChunkData.java
@@ -3,6 +3,7 @@
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
 import java.io.IOException;
+import java.util.concurrent.Semaphore;
 import java.util.zip.DataFormatException;
 import java.util.zip.Deflater;
 import java.util.zip.Inflater;
@@ -26,6 +27,7 @@
     private int field_149285_h;
     private static byte[] field_149286_i = new byte[196864];
     private static final String __OBFID = "CL_00001304";
+    private Semaphore deflateGate;
 
     public S21PacketChunkData() {}
 
@@ -35,17 +37,22 @@
         this.field_149282_b = p_i45196_1_.field_76647_h;
         this.field_149279_g = p_i45196_2_;
         S21PacketChunkData.Extracted extracted = func_149269_a(p_i45196_1_, p_i45196_2_, p_i45196_3_);
-        Deflater deflater = new Deflater(-1);
         this.field_149280_d = extracted.field_150281_c;
         this.field_149283_c = extracted.field_150280_b;
+        this.field_149278_f = extracted.field_150282_a;
+        this.deflateGate = new Semaphore(1);
+    }
 
+    private void deflate()
+    {
+        Deflater deflater = new Deflater(-1);
         try
         {
-            this.field_149278_f = extracted.field_150282_a;
-            deflater.setInput(extracted.field_150282_a, 0, extracted.field_150282_a.length);
+            deflater.setInput(this.field_149278_f, 0, this.field_149278_f.length);
             deflater.finish();
-            this.field_149281_e = new byte[extracted.field_150282_a.length];
-            this.field_149285_h = deflater.deflate(this.field_149281_e);
+            byte[] deflated = new byte[this.field_149278_f.length];
+            this.field_149285_h = deflater.deflate(deflated);
+            this.field_149281_e = deflated;
         }
         finally
         {
@@ -75,13 +82,16 @@
         p_148837_1_.readBytes(field_149286_i, 0, this.field_149285_h);
         int i = 0;
         int j;
+        int msb = 0; //BugFix: MC does not read the MSB array from the packet properly, causing issues for servers that use blocks > 256
 
         for (j = 0; j < 16; ++j)
         {
             i += this.field_149283_c >> j & 1;
+            msb += this.field_149283_c >> j & 1;
         }
 
         j = 12288 * i;
+        j += 2048 * msb;
 
         if (this.field_149279_g)
         {
@@ -108,6 +118,15 @@
 
     public void func_148840_b(PacketBuffer p_148840_1_) throws IOException
     {
+        if (this.field_149281_e == null)
+        {
+            deflateGate.acquireUninterruptibly();
+            if (this.field_149281_e == null)
+            {
+                deflate();
+            }
+            deflateGate.release();
+        }
         p_148840_1_.writeInt(this.field_149284_a);
         p_148840_1_.writeInt(this.field_149282_b);
         p_148840_1_.writeBoolean(this.field_149279_g);
