--- ../src-base/minecraft/net/minecraft/network/play/server/S26PacketMapChunkBulk.java
+++ ../src-work/minecraft/net/minecraft/network/play/server/S26PacketMapChunkBulk.java
@@ -4,6 +4,7 @@
 import cpw.mods.fml.relauncher.SideOnly;
 import java.io.IOException;
 import java.util.List;
+import java.util.concurrent.Semaphore;
 import java.util.zip.DataFormatException;
 import java.util.zip.Deflater;
 import java.util.zip.Inflater;
@@ -25,6 +26,8 @@
     private boolean field_149267_h;
     private static byte[] field_149268_i = new byte[0];
     private static final String __OBFID = "CL_00001306";
+    private int maxLen = 0;
+    private Semaphore deflateGate;
 
     public S26PacketMapChunkBulk() {}
 
@@ -43,15 +46,6 @@
         {
             Chunk chunk = (Chunk)p_i45197_1_.get(k);
             S21PacketChunkData.Extracted extracted = S21PacketChunkData.func_149269_a(chunk, true, 65535);
-
-            if (field_149268_i.length < j + extracted.field_150282_a.length)
-            {
-                byte[] abyte = new byte[j + extracted.field_150282_a.length];
-                System.arraycopy(field_149268_i, 0, abyte, 0, field_149268_i.length);
-                field_149268_i = abyte;
-            }
-
-            System.arraycopy(extracted.field_150282_a, 0, field_149268_i, j, extracted.field_150282_a.length);
             j += extracted.field_150282_a.length;
             this.field_149266_a[k] = chunk.field_76635_g;
             this.field_149264_b[k] = chunk.field_76647_h;
@@ -59,15 +53,28 @@
             this.field_149262_d[k] = extracted.field_150281_c;
             this.field_149260_f[k] = extracted.field_150282_a;
         }
+        this.deflateGate = new Semaphore(1);
+        maxLen = j;
+    }
 
+    private void deflate()
+    {
+        byte[] data = new byte[maxLen];
+        int offset = 0;
+        for (int x = 0; x < field_149260_f.length; x++)
+        {
+            System.arraycopy(field_149260_f[x], 0, data, offset, field_149260_f[x].length);
+            offset += field_149260_f[x].length;
+        }
         Deflater deflater = new Deflater(-1);
 
         try
         {
-            deflater.setInput(field_149268_i, 0, j);
+            deflater.setInput(data, 0, data.length);
             deflater.finish();
-            this.field_149263_e = new byte[j];
-            this.field_149261_g = deflater.deflate(this.field_149263_e);
+            byte[] deflated = new byte[data.length];
+            this.field_149261_g = deflater.deflate(deflated);
+            this.field_149263_e = deflated;
         }
         finally
         {
@@ -148,6 +155,16 @@
 
     public void func_148840_b(PacketBuffer p_148840_1_) throws IOException
     {
+        if (this.field_149263_e == null)
+        {
+            deflateGate.acquireUninterruptibly();
+            if (this.field_149263_e == null)
+            {
+                deflate();
+            }
+            deflateGate.release();
+        }
+
         p_148840_1_.writeShort(this.field_149266_a.length);
         p_148840_1_.writeInt(this.field_149261_g);
         p_148840_1_.writeBoolean(this.field_149267_h);
