--- a/net/minecraft/network/protocol/common/ClientboundCustomPayloadPacket.java
+++ b/net/minecraft/network/protocol/common/ClientboundCustomPayloadPacket.java
@@ -26,7 +_,7 @@
 import net.minecraft.network.protocol.common.custom.WorldGenAttemptDebugPayload;
 import net.minecraft.resources.ResourceLocation;
 
-public record ClientboundCustomPayloadPacket(CustomPacketPayload payload) implements Packet<ClientCommonPacketListener> {
+public record ClientboundCustomPayloadPacket(CustomPacketPayload payload) implements Packet<ClientCommonPacketListener>, net.minecraftforge.network.ICustomPacket<ClientboundCustomPayloadPacket> {
    private static final int MAX_PAYLOAD_SIZE = 1048576;
    private static final Map<ResourceLocation, FriendlyByteBuf.Reader<? extends CustomPacketPayload>> KNOWN_TYPES = ImmutableMap.<ResourceLocation, FriendlyByteBuf.Reader<? extends CustomPacketPayload>>builder().put(BrandPayload.ID, BrandPayload::new).put(BeeDebugPayload.ID, BeeDebugPayload::new).put(BrainDebugPayload.ID, BrainDebugPayload::new).put(GameEventDebugPayload.ID, GameEventDebugPayload::new).put(GameEventListenerDebugPayload.ID, GameEventListenerDebugPayload::new).put(GameTestAddMarkerDebugPayload.ID, GameTestAddMarkerDebugPayload::new).put(GameTestClearMarkersDebugPayload.ID, GameTestClearMarkersDebugPayload::new).put(GoalDebugPayload.ID, GoalDebugPayload::new).put(HiveDebugPayload.ID, HiveDebugPayload::new).put(NeighborUpdatesDebugPayload.ID, NeighborUpdatesDebugPayload::new).put(PathfindingDebugPayload.ID, PathfindingDebugPayload::new).put(PoiAddedDebugPayload.ID, PoiAddedDebugPayload::new).put(PoiRemovedDebugPayload.ID, PoiRemovedDebugPayload::new).put(PoiTicketCountDebugPayload.ID, PoiTicketCountDebugPayload::new).put(RaidsDebugPayload.ID, RaidsDebugPayload::new).put(StructuresDebugPayload.ID, StructuresDebugPayload::new).put(VillageSectionsDebugPayload.ID, VillageSectionsDebugPayload::new).put(WorldGenAttemptDebugPayload.ID, WorldGenAttemptDebugPayload::new).build();
 
@@ -42,8 +_,7 @@
    private static DiscardedPayload readUnknownPayload(ResourceLocation p_299265_, FriendlyByteBuf p_297545_) {
       int i = p_297545_.readableBytes();
       if (i >= 0 && i <= 1048576) {
-         p_297545_.skipBytes(i);
-         return new DiscardedPayload(p_299265_);
+         return new DiscardedPayload(p_299265_, new FriendlyByteBuf(p_297545_.readBytes(i)));
       } else {
          throw new IllegalArgumentException("Payload may not be larger than 1048576 bytes");
       }
@@ -57,4 +_,8 @@
    public void handle(ClientCommonPacketListener p_299773_) {
       p_299773_.handleCustomPayload(this);
    }
+
+   @Override public @org.jetbrains.annotations.Nullable FriendlyByteBuf getInternalData() { return payload instanceof DiscardedPayload dc ? dc.data() : null; }
+   @Override public ResourceLocation getName() { return payload.id(); }
+   @Override public int getIndex() { return 0; }
 }
