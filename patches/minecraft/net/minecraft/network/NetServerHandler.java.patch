--- ../src_base/minecraft/net/minecraft/network/NetServerHandler.java
+++ ../src_work/minecraft/net/minecraft/network/NetServerHandler.java
@@ -71,6 +71,14 @@
 import net.minecraft.world.WorldServer;
 import org.apache.commons.lang3.StringUtils;
 
+import net.minecraftforge.common.ForgeHooks;
+import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.event.Event;
+import net.minecraftforge.event.ForgeEventFactory;
+import net.minecraftforge.event.ServerChatEvent;
+import net.minecraftforge.event.entity.player.PlayerInteractEvent;
+import net.minecraftforge.event.entity.player.PlayerInteractEvent.Action;
+
 public class NetServerHandler extends NetHandler
 {
     /** The underlying network manager for this server handler. */
@@ -221,6 +229,11 @@
                     if (this.playerEntity.ridingEntity != null)
                     {
                         this.playerEntity.ridingEntity.updateRiderPosition();
+                    }
+
+                    if (!this.hasMoved) //Fixes teleportation kick while riding entities
+                    {
+                        return;
                     }
 
                     this.mcServer.getConfigurationManager().serverUpdateMountedMovingPlayer(this.playerEntity);
@@ -300,9 +313,10 @@
                 d4 = d1 - this.playerEntity.posX;
                 double d5 = d2 - this.playerEntity.posY;
                 double d6 = d3 - this.playerEntity.posZ;
-                double d7 = Math.min(Math.abs(d4), Math.abs(this.playerEntity.motionX));
-                double d8 = Math.min(Math.abs(d5), Math.abs(this.playerEntity.motionY));
-                double d9 = Math.min(Math.abs(d6), Math.abs(this.playerEntity.motionZ));
+                //BUGFIX: min -> max, grabs the highest distance
+                double d7 = Math.max(Math.abs(d4), Math.abs(this.playerEntity.motionX));
+                double d8 = Math.max(Math.abs(d5), Math.abs(this.playerEntity.motionY));
+                double d9 = Math.max(Math.abs(d6), Math.abs(this.playerEntity.motionZ));
                 double d10 = d7 * d7 + d8 * d8 + d9 * d9;
 
                 if (d10 > 100.0D && (!this.mcServer.isSinglePlayer() || !this.mcServer.getServerOwner().equals(this.playerEntity.getCommandSenderName())))
@@ -318,6 +332,11 @@
                 if (this.playerEntity.onGround && !par1Packet10Flying.onGround && d5 > 0.0D)
                 {
                     this.playerEntity.addExhaustion(0.2F);
+                }
+
+                if (!this.hasMoved) //Fixes "Moved Too Fast" kick when being teleported while moving
+                {
+                    return;
                 }
 
                 this.playerEntity.moveEntity(d4, d5, d6);
@@ -342,10 +361,15 @@
                     this.mcServer.getLogAgent().logWarning(this.playerEntity.getCommandSenderName() + " moved wrongly!");
                 }
 
+                if (!this.hasMoved) //Fixes "Moved Too Fast" kick when being teleported while moving
+                {
+                    return;
+                }
+
                 this.playerEntity.setPositionAndRotation(d1, d2, d3, f2, f3);
                 boolean flag2 = worldserver.getCollidingBoundingBoxes(this.playerEntity, this.playerEntity.boundingBox.copy().contract((double)f4, (double)f4, (double)f4)).isEmpty();
 
-                if (flag && (flag1 || !flag2) && !this.playerEntity.isPlayerSleeping())
+                if (flag && (flag1 || !flag2) && !this.playerEntity.isPlayerSleeping() && !this.playerEntity.noClip)
                 {
                     this.setPlayerLocation(this.lastPosX, this.lastPosY, this.lastPosZ, f2, f3);
                     return;
@@ -353,7 +377,7 @@
 
                 AxisAlignedBB axisalignedbb = this.playerEntity.boundingBox.copy().expand((double)f4, (double)f4, (double)f4).addCoord(0.0D, -0.55D, 0.0D);
 
-                if (!this.mcServer.isFlightAllowed() && !this.playerEntity.theItemInWorldManager.isCreative() && !worldserver.checkBlockCollision(axisalignedbb))
+                if (!this.mcServer.isFlightAllowed() && !this.playerEntity.theItemInWorldManager.isCreative() && !worldserver.checkBlockCollision(axisalignedbb)  && !this.playerEntity.capabilities.allowFlying)
                 {
                     if (d11 >= -0.03125D)
                     {
@@ -372,6 +396,11 @@
                     this.ticksForFloatKick = 0;
                 }
 
+                if (!this.hasMoved) //Fixes "Moved Too Fast" kick when being teleported while moving
+                {
+                    return;
+                }
+
                 this.playerEntity.onGround = par1Packet10Flying.onGround;
                 this.mcServer.getConfigurationManager().serverUpdateMountedMovingPlayer(this.playerEntity);
                 this.playerEntity.updateFlyingState(this.playerEntity.posY - d0, par1Packet10Flying.onGround);
@@ -442,7 +471,10 @@
                 double d2 = this.playerEntity.posZ - ((double)k + 0.5D);
                 double d3 = d0 * d0 + d1 * d1 + d2 * d2;
 
-                if (d3 > 36.0D)
+                double dist = playerEntity.theItemInWorldManager.getBlockReachDistance() + 1;
+                dist *= dist;
+
+                if (d3 > dist)
                 {
                     return;
                 }
@@ -502,7 +534,11 @@
                 return;
             }
 
-            this.playerEntity.theItemInWorldManager.tryUseItem(this.playerEntity, worldserver, itemstack);
+            PlayerInteractEvent event = ForgeEventFactory.onPlayerInteract(playerEntity, PlayerInteractEvent.Action.RIGHT_CLICK_AIR, 0, 0, 0, -1);
+            if (event.useItem != Event.Result.DENY)
+            {
+                this.playerEntity.theItemInWorldManager.tryUseItem(this.playerEntity, worldserver, itemstack);
+            }
         }
         else if (par1Packet15Place.getYPosition() >= this.mcServer.getBuildLimit() - 1 && (par1Packet15Place.getDirection() == 1 || par1Packet15Place.getYPosition() >= this.mcServer.getBuildLimit()))
         {
@@ -511,7 +547,9 @@
         }
         else
         {
-            if (this.hasMoved && this.playerEntity.getDistanceSq((double)i + 0.5D, (double)j + 0.5D, (double)k + 0.5D) < 64.0D && !this.mcServer.isBlockProtected(worldserver, i, j, k, this.playerEntity))
+            double dist = playerEntity.theItemInWorldManager.getBlockReachDistance() + 1;
+            dist *= dist;
+            if (this.hasMoved && this.playerEntity.getDistanceSq((double)i + 0.5D, (double)j + 0.5D, (double)k + 0.5D) < dist && !this.mcServer.isBlockProtected(worldserver, i, j, k, this.playerEntity))
             {
                 this.playerEntity.theItemInWorldManager.activateBlockOrUseItem(this.playerEntity, worldserver, itemstack, i, j, k, l, par1Packet15Place.getXOffset(), par1Packet15Place.getYOffset(), par1Packet15Place.getZOffset());
             }
@@ -691,6 +729,8 @@
                     }
 
                     ChatMessageComponent chatmessagecomponent = ChatMessageComponent.createFromTranslationWithSubstitutions("chat.type.text", new Object[] {this.playerEntity.getTranslatedEntityName(), s});
+                    chatmessagecomponent = ForgeHooks.onServerChatEvent(this, s, chatmessagecomponent);
+                    if (chatmessagecomponent == null) return;
                     this.mcServer.getConfigurationManager().func_110459_a(chatmessagecomponent, false);
                 }
 
@@ -838,7 +878,7 @@
                     return;
                 }
 
-                this.playerEntity = this.mcServer.getConfigurationManager().respawnPlayer(this.playerEntity, 0, false);
+                this.playerEntity = this.mcServer.getConfigurationManager().respawnPlayer(this.playerEntity, playerEntity.dimension, false);
             }
         }
     }
