--- ../src_base/minecraft/net/minecraft/network/packet/Packet.java
+++ ../src_work/minecraft/net/minecraft/network/packet/Packet.java
@@ -16,6 +16,8 @@
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.IntHashMap;
 
+import org.bukkit.craftbukkit.inventory.CraftItemStack; // CraftBukkit
+
 public abstract class Packet
 {
     /** Maps packet id to packet class */
@@ -32,7 +34,7 @@
     protected ILogAgent field_98193_m;
 
     /** the system time in milliseconds when this packet was created. */
-    public final long creationTimeMillis = MinecraftServer.func_130071_aq();
+    public final long creationTimeMillis = MinecraftServer.getSystemTimeMillis();
     public static long receivedID;
     public static long receivedSize;
 
@@ -45,6 +47,18 @@
      * separate them into a different send queue.
      */
     public boolean isChunkDataPacket;
+    // CraftBukkit start - Calculate packet ID once - used a bunch of times
+    private int packetID;
+
+    public Packet()
+    {
+        // MCPC+ start - Do not try to get a packet ID for a class that does not exist. Fixes Pixelmon
+        Integer packetID_ = (Integer) packetClassToIdMap.get(this.getClass());
+        if (packetID_ != null)
+            packetID = packetID_.intValue();
+        // MCPC+ end
+    }
+    // CraftBukkit end
 
     /**
      * Adds a two way mapping between the packet ID and packet class.
@@ -127,7 +141,7 @@
      */
     public final int getPacketId()
     {
-        return ((Integer)packetClassToIdMap.get(this.getClass())).intValue();
+        return packetID; // ((Integer) a.get(this.getClass())).intValue(); // CraftBukkit
     }
 
     /**
@@ -172,7 +186,19 @@
             par0ILogAgent.logSevere("Reached end of stream for " + par3Socket.getInetAddress());
             return null;
         }
-
+        // CraftBukkit start
+        catch (java.net.SocketTimeoutException exception)
+        {
+            par0ILogAgent.logInfo("Read timed out");
+            return null;
+        }
+        catch (java.net.SocketException exception)
+        {
+            par0ILogAgent.logInfo("Connection reset");
+            return null;
+        }
+
+        // CraftBukkit end
         PacketCount.countPacket(j, (long)packet.getPacketSize());
         ++receivedID;
         receivedSize += (long)packet.getPacketSize();
@@ -278,7 +304,7 @@
      */
     public boolean canProcessAsync()
     {
-        return false;
+        return this instanceof Packet3Chat && !((Packet3Chat) this).message.startsWith("/"); // CraftBukkit - async chat
     }
 
     public String toString()
@@ -301,6 +327,15 @@
             short short2 = par0DataInput.readShort();
             itemstack = new ItemStack(short1, b0, short2);
             itemstack.stackTagCompound = readNBTTagCompound(par0DataInput);
+
+            // MCPC+ start - disabled for itemstacks until I can add support for modded items.
+            // CraftBukkit start
+            /*if (itemstack.stackTagCompound != null)
+            {
+                CraftItemStack.setItemMeta(itemstack, CraftItemStack.getItemMeta(itemstack));
+            }*/
+            // CraftBukkit end
+            // MCPC+ end
         }
 
         return itemstack;
@@ -311,7 +346,7 @@
      */
     public static void writeItemStack(ItemStack par0ItemStack, DataOutput par1DataOutput) throws IOException
     {
-        if (par0ItemStack == null)
+        if (par0ItemStack == null || par0ItemStack.getItem() == null)   // CraftBukkit - NPE fix itemstack.getItem()
         {
             par1DataOutput.writeShort(-1);
         }
