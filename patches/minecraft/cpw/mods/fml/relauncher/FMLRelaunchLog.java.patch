--- ../src_base/minecraft/cpw/mods/fml/relauncher/FMLRelaunchLog.java
+++ ../src_work/minecraft/cpw/mods/fml/relauncher/FMLRelaunchLog.java
@@ -35,7 +35,8 @@
 public class FMLRelaunchLog
 {
 
-    private static class ConsoleLogWrapper extends Handler
+    public static boolean useOnlyThisLogger = false; // MCPC+ - FML logger vs. CB logger
+    public static class ConsoleLogWrapper extends Handler // MCPC+ private -> public
     {
         @Override
         public void publish(LogRecord record)
@@ -67,9 +68,9 @@
         }
 
     }
-    private static class ConsoleLogThread implements Runnable
-    {
-        static ConsoleHandler wrappedHandler = new ConsoleHandler();
+    public static class ConsoleLogThread implements Runnable // MCPC+ private -> public
+    {
+        public static ConsoleHandler wrappedHandler = new ConsoleHandler(); // MCPC+ private -> public
         static LinkedBlockingQueue<LogRecord> recordQueue = new LinkedBlockingQueue<LogRecord>();
         @Override
         public void run()
@@ -167,10 +168,15 @@
         log.myLog = Logger.getLogger("ForgeModLoader");
         LogWrapper.retarget(log.myLog);
 
+        // MCPC+ start - FML and CraftBukkit logging compatibility - add conditional
         Logger stdOut = Logger.getLogger("STDOUT");
-        stdOut.setParent(log.myLog);
         Logger stdErr = Logger.getLogger("STDERR");
-        stdErr.setParent(log.myLog);
+        if (useOnlyThisLogger)
+        {
+            stdOut.setParent(log.myLog);
+            stdErr.setParent(log.myLog);
+        }
+        // MCPC+ end
         log.myLog.setLevel(Level.ALL);
         log.myLog.setUseParentHandlers(false);
         consoleLogThread = new Thread(new ConsoleLogThread());
@@ -197,8 +203,13 @@
         // Set system out to a log stream
         errCache = System.err;
 
-        System.setOut(new PrintStream(new LoggingOutStream(stdOut), true));
-        System.setErr(new PrintStream(new LoggingOutStream(stdErr), true));
+        // MCPC+ start - conditional
+        if (useOnlyThisLogger)
+        {
+            System.setOut(new PrintStream(new LoggingOutStream(stdOut), true));
+            System.setErr(new PrintStream(new LoggingOutStream(stdErr), true));
+        }
+        // MCPC+ end
 
         configured = true;
     }
