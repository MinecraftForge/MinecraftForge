--- /Volumes/Data/Users/tsingh/Desktop/patches/old/Entity.java	2012-08-18 00:28:36.000000000 +1000
+++ /Volumes/Data/Users/tsingh/Desktop/patches/new/Entity.java	2012-08-18 00:55:29.000000000 +1000
@@ -188,8 +188,6 @@
     public boolean ignoreFrustumCheck;
     public boolean isAirBorne;
     public EnumEntitySize myEntitySize;
-    /** Forge: Used to store custom data for each entity. */
-    private NBTTagCompound customEntityData;
     protected boolean captureDrops = false;
     protected ArrayList<EntityItem> capturedDrops = new ArrayList<EntityItem>();
 
@@ -1388,10 +1386,6 @@
         par1NBTTagCompound.setShort("Fire", (short)this.fire);
         par1NBTTagCompound.setShort("Air", (short)this.getAir());
         par1NBTTagCompound.setBoolean("OnGround", this.onGround);
-        if (customEntityData != null)
-        {
-            par1NBTTagCompound.setCompoundTag("ForgeData", customEntityData);
-        }
         this.writeEntityToNBT(par1NBTTagCompound);
     }
 
@@ -1433,10 +1427,6 @@
         this.onGround = par1NBTTagCompound.getBoolean("OnGround");
         this.setPosition(this.posX, this.posY, this.posZ);
         this.setRotation(this.rotationYaw, this.rotationPitch);
-        if (par1NBTTagCompound.hasKey("ForgeData"))
-        {
-            customEntityData = par1NBTTagCompound.getCompoundTag("ForgeData");
-        }
         this.readEntityFromNBT(par1NBTTagCompound);
     }
 
@@ -2131,20 +2121,6 @@
 
     /* ================================== Forge Start =====================================*/
     /**
-     * Returns a NBTTagCompound that can be used to store custom data for this entity.
-     * It will be written, and read from disc, so it persists over world saves.
-     * @return A NBTTagCompound
-     */
-    public NBTTagCompound getEntityData()
-    {
-        if (customEntityData == null)
-        {
-            customEntityData = new NBTTagCompound();
-        }
-        return customEntityData;
-    }
-
-    /**
      * Used in model rendering to determine if the entity riding this entity should be in the 'sitting' position.
      * @return false to prevent an entity that is mounted to this entity from displaying the 'sitting' animation.
      */
