--- ../src_base/common/net/minecraft/src/BlockPistonBase.java
+++ ../src_work/common/net/minecraft/src/BlockPistonBase.java
@@ -2,12 +2,17 @@
 
 import cpw.mods.fml.common.Side;
 import cpw.mods.fml.common.asm.SideOnly;
+
+import java.util.ArrayList;
 import java.util.List;
+
+import net.minecraftforge.common.IOrientation;
 
 public class BlockPistonBase extends Block
 {
     /** This pistons is the sticky one? */
     private boolean isSticky;
+    public static List<IOrientation> orientationHooks = new ArrayList();
 
     public BlockPistonBase(int par1, int par2, boolean par3)
     {
@@ -316,23 +321,36 @@
      */
     public static int determineOrientation(World par0World, int par1, int par2, int par3, EntityPlayer par4EntityPlayer)
     {
-        if (MathHelper.abs((float)par4EntityPlayer.posX - (float)par1) < 2.0F && MathHelper.abs((float)par4EntityPlayer.posZ - (float)par3) < 2.0F)
-        {
-            double var5 = par4EntityPlayer.posY + 1.82D - (double)par4EntityPlayer.yOffset;
-
-            if (var5 - (double)par2 > 2.0D)
-            {
-                return 1;
-            }
-
-            if ((double)par2 - var5 > 0.0D)
-            {
-                return 0;
-            }
-        }
-
-        int var7 = MathHelper.floor_double((double)(par4EntityPlayer.rotationYaw * 4.0F / 360.0F) + 0.5D) & 3;
-        return var7 == 0 ? 2 : (var7 == 1 ? 5 : (var7 == 2 ? 3 : (var7 == 3 ? 4 : 0)));
+        boolean prematureExit = false;
+        for (IOrientation hook : orientationHooks) {
+            if (hook.beforeOrientation(par0World, par1, par2, par3, par4EntityPlayer)) {
+                prematureExit = true;
+            }
+        }
+        int currentOrientation = -1;
+        if (!prematureExit) {
+            if (MathHelper.abs((float)par4EntityPlayer.posX - (float)par1) < 2.0F && MathHelper.abs((float)par4EntityPlayer.posZ - (float)par3) < 2.0F)
+            {
+                double var5 = par4EntityPlayer.posY + 1.82D - (double)par4EntityPlayer.yOffset;
+    
+                if (var5 - (double)par2 > 2.0D)
+                {
+                    currentOrientation = 1;
+                }
+                if (currentOrientation == -1 && (double)par2 - var5 > 0.0D)
+                {
+                    currentOrientation = 0;
+                }
+            }
+            if (currentOrientation == -1) {
+                int var7 = MathHelper.floor_double((double)(par4EntityPlayer.rotationYaw * 4.0F / 360.0F) + 0.5D) & 3;
+                currentOrientation = var7 == 0 ? 2 : (var7 == 1 ? 5 : (var7 == 2 ? 3 : (var7 == 3 ? 4 : 0)));
+            }
+        }
+        for(IOrientation hook : orientationHooks) {
+            currentOrientation = hook.afterOrientation(par0World, par1, par2, par3, par4EntityPlayer, currentOrientation);
+        }
+        return currentOrientation;
     }
 
     /**
@@ -368,7 +386,7 @@
                 return false;
             }
 
-            return !(Block.blocksList[par0] instanceof BlockContainer);
+            return !par1World.blockHasTileEntity(par2, par3, par4);
         }
     }
 
@@ -386,7 +404,7 @@
         {
             if (var8 < 13)
             {
-                if (var6 <= 0 || var6 >= 255)
+                if (var6 <= 0 || var6 >= par0World.getHeight())
                 {
                     return false;
                 }
@@ -436,7 +454,7 @@
 
             if (var9 < 13)
             {
-                if (var7 <= 0 || var7 >= 255)
+                if (var7 <= 0 || var7 >= par1World.getHeight())
                 {
                     return false;
                 }
@@ -496,4 +514,10 @@
             return true;
         }
     }
+    
+    public static void registerOrientationHook(IOrientation hook) {
+        if (!orientationHooks.contains(hook)) {
+            orientationHooks.add(hook);
+        }
+    }
 }
