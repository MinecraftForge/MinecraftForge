--- ../src_base/common/net/minecraft/src/MapGenStronghold.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src_work/common/net/minecraft/src/MapGenStronghold.java	0000-00-00 00:00:00.000000000 -0000
@@ -1,9 +1,13 @@
 package net.minecraft.src;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.Collections;
 import java.util.List;
 import java.util.Random;
+import java.util.Set;
+
+import com.google.common.collect.Sets;
 
 public class MapGenStronghold extends MapGenStructure
 {
@@ -14,9 +18,11 @@
      */
     private boolean ranBiomeCheck;
     private ChunkCoordIntPair[] structureCoords;
+    private static MapGenStronghold INSTANCE;
 
     public MapGenStronghold()
     {
+    	INSTANCE = this;
         this.allowedBiomeGenBases = new BiomeGenBase[] {BiomeGenBase.desert, BiomeGenBase.forest, BiomeGenBase.extremeHills, BiomeGenBase.swampland, BiomeGenBase.taiga, BiomeGenBase.icePlains, BiomeGenBase.iceMountains, BiomeGenBase.desertHills, BiomeGenBase.forestHills, BiomeGenBase.extremeHillsEdge, BiomeGenBase.jungle, BiomeGenBase.jungleHills};
         this.structureCoords = new ChunkCoordIntPair[3];
     }
@@ -102,4 +108,21 @@
 
         return var3;
     }
+    
+    public static void addBiome(BiomeGenBase biome)
+    {
+    	Set<BiomeGenBase> biomes = Sets.newIdentityHashSet();
+        biomes.addAll(Arrays.asList(INSTANCE.allowedBiomeGenBases));
+        biomes.add(biome);
+        INSTANCE.allowedBiomeGenBases = biomes.toArray(new BiomeGenBase[0]);
+    }
+    
+    public static void removeBiome(BiomeGenBase biome)
+    {
+    	Set<BiomeGenBase> biomes = Sets.newIdentityHashSet();
+        biomes.addAll(Arrays.asList(INSTANCE.allowedBiomeGenBases));
+        biomes.remove(biome);
+       	INSTANCE.allowedBiomeGenBases = biomes.toArray(new BiomeGenBase[0]);
+    }
+    
 }
