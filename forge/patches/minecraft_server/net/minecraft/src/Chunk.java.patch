--- ../src_base/minecraft_server/net/minecraft/src/Chunk.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src_work/minecraft_server/net/minecraft/src/Chunk.java	0000-00-00 00:00:00.000000000 -0000
@@ -8,6 +8,8 @@
 import java.util.Map;
 import java.util.Random;
 
+import net.minecraft.src.forge.ForgeHooks;
+
 public class Chunk
 {
     /**
@@ -545,7 +547,7 @@
                 {
                     Block.blocksList[var8].onBlockRemoval(this.worldObj, var11, par2, var12);
                 }
-                else if (Block.blocksList[var8] instanceof BlockContainer && var8 != par4)
+                if (Block.blocksList[var8] != null && Block.blocksList[var8].hasTileEntity(getBlockMetadata(par1, par2, par3)))
                 {
                     this.worldObj.removeBlockTileEntity(var11, par2, var12);
                 }
@@ -589,32 +591,23 @@
                         Block.blocksList[par4].onBlockAdded(this.worldObj, var11, par2, var12);
                     }
 
-                    if (Block.blocksList[par4] instanceof BlockContainer)
+                    if (Block.blocksList[par4] != null && Block.blocksList[par4].hasTileEntity(par5))
                     {
                         var13 = this.getChunkBlockTileEntity(par1, par2, par3);
 
                         if (var13 == null)
                         {
-                            var13 = ((BlockContainer)Block.blocksList[par4]).getBlockEntity();
+                            var13 = Block.blocksList[par4].getTileEntity(par5);
                             this.worldObj.setBlockTileEntity(var11, par2, var12, var13);
                         }
 
                         if (var13 != null)
                         {
                             var13.updateContainingBlockInfo();
+                            var13.blockMetadata = par5;
                         }
                     }
                 }
-                else if (var8 > 0 && Block.blocksList[var8] instanceof BlockContainer)
-                {
-                    var13 = this.getChunkBlockTileEntity(par1, par2, par3);
-
-                    if (var13 != null)
-                    {
-                        var13.updateContainingBlockInfo();
-                    }
-                }
-
                 this.isModified = true;
                 return true;
             }
@@ -646,7 +639,7 @@
                 var5.setExtBlockMetadata(par1, par2 & 15, par3, par4);
                 int var7 = var5.getExtBlockID(par1, par2 & 15, par3);
 
-                if (var7 > 0 && Block.blocksList[var7] instanceof BlockContainer)
+                if (var7 > 0 && Block.blocksList[var7] != null && Block.blocksList[var7].hasTileEntity(var5.getExtBlockMetadata(par1, par2 & 15, par3)))
                 {
                     TileEntity var8 = this.getChunkBlockTileEntity(par1, par2, par3);
 
@@ -812,34 +805,31 @@
     {
         ChunkPosition var4 = new ChunkPosition(par1, par2, par3);
         TileEntity var5 = (TileEntity)this.chunkTileEntityMap.get(var4);
+        
+        if (var5 != null && var5.isInvalid())
+        {
+            chunkTileEntityMap.remove(var4);
+            var5 = null;
+        }
 
         if (var5 == null)
         {
             int var6 = this.getBlockID(par1, par2, par3);
-
-            if (var6 <= 0 || !Block.blocksList[var6].hasTileEntity())
+            int meta = getBlockMetadata(par1, par2, par3);
+            if (var6 <= 0 || Block.blocksList[var6] == null || !Block.blocksList[var6].hasTileEntity(meta))
             {
                 return null;
             }
 
             if (var5 == null)
             {
-                var5 = ((BlockContainer)Block.blocksList[var6]).getBlockEntity();
+                var5 = Block.blocksList[var6].getTileEntity(meta);
                 this.worldObj.setBlockTileEntity(this.xPosition * 16 + par1, par2, this.zPosition * 16 + par3, var5);
             }
 
             var5 = (TileEntity)this.chunkTileEntityMap.get(var4);
         }
-
-        if (var5 != null && var5.isInvalid())
-        {
-            this.chunkTileEntityMap.remove(var4);
-            return null;
-        }
-        else
-        {
-            return var5;
-        }
+        return var5;
     }
 
     /**
@@ -854,7 +844,7 @@
 
         if (this.isChunkLoaded)
         {
-            this.worldObj.loadedTileEntityList.add(par1TileEntity);
+            this.worldObj.addTileEntity(par1TileEntity);
         }
     }
 
@@ -869,8 +859,14 @@
         par4TileEntity.yCoord = par2;
         par4TileEntity.zCoord = this.zPosition * 16 + par3;
 
-        if (this.getBlockID(par1, par2, par3) != 0 && Block.blocksList[this.getBlockID(par1, par2, par3)] instanceof BlockContainer)
+        int id = getBlockID(par1, par2, par3);
+        if (id > 0 && Block.blocksList[id] != null && Block.blocksList[id].hasTileEntity(getBlockMetadata(par1, par2, par3)))
         {
+            TileEntity old = (TileEntity)chunkTileEntityMap.get(var5);
+            if (old != null)
+            {
+                old.invalidate();
+            }
             par4TileEntity.validate();
             this.chunkTileEntityMap.put(var5, par4TileEntity);
         }
@@ -906,6 +902,7 @@
         {
             this.worldObj.addLoadedEntities(this.entityLists[var1]);
         }
+        ForgeHooks.onChunkLoad(worldObj, this);
     }
 
     /**
@@ -926,6 +923,7 @@
         {
             this.worldObj.unloadEntities(this.entityLists[var3]);
         }
+        ForgeHooks.onChunkUnload(worldObj, this);
     }
 
     /**
@@ -1287,4 +1285,18 @@
             }
         }
     }
+    
+    /** FORGE: Used to remove only invalid TileEntities */
+    public void cleanChunkBlockTileEntity(int x, int y, int z) 
+    {
+        ChunkPosition position = new ChunkPosition(x, y, z);
+        if (isChunkLoaded)
+        {
+            TileEntity entity = (TileEntity)chunkTileEntityMap.get(position);
+            if (entity != null && entity.isInvalid())
+            {
+                chunkTileEntityMap.remove(position);
+            }
+        }
+    }
 }
