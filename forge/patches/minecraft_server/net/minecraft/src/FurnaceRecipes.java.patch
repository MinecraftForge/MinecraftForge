--- ../src_base/minecraft_server/net/minecraft/src/FurnaceRecipes.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src_work/minecraft_server/net/minecraft/src/FurnaceRecipes.java	0000-00-00 00:00:00.000000000 -0000
@@ -1,5 +1,6 @@
 package net.minecraft.src;
 
+import java.util.Arrays;
 import java.util.HashMap;
 import java.util.Map;
 
@@ -9,6 +10,7 @@
 
     /** The list of smelting results. */
     private Map smeltingList = new HashMap();
+    private Map metaSmeltingList = new HashMap();
 
     /**
      * Used to call methods addSmelting and getSmeltingResult.
@@ -47,7 +49,9 @@
 
     /**
      * Returns the smelting result of an item.
+     * Deprecated in favor of a metadata sensitive version
      */
+    @Deprecated
     public ItemStack getSmeltingResult(int par1)
     {
         return (ItemStack)this.smeltingList.get(Integer.valueOf(par1));
@@ -57,4 +61,34 @@
     {
         return this.smeltingList;
     }
+    
+    /**
+     * Add a metadata-sensitive furnace recipe
+     * @param itemID The Item ID
+     * @param metadata The Item Metadata
+     * @param itemstack The ItemStack for the result
+     */
+    public void addSmelting(int itemID, int metadata, ItemStack itemstack)
+    {
+        metaSmeltingList.put(Arrays.asList(itemID, metadata), itemstack);
+    }
+    
+    /**
+     * Used to get the resulting ItemStack form a source ItemStack
+     * @param item The Source ItemStack
+     * @return The result ItemStack
+     */
+    public ItemStack getSmeltingResult(ItemStack item) 
+    {
+        if (item == null)
+        {
+            return null;
+        }
+        ItemStack ret = (ItemStack)metaSmeltingList.get(Arrays.asList(item.itemID, item.getItemDamage()));
+        if (ret != null) 
+        {
+            return ret;
+        }
+        return (ItemStack)smeltingList.get(Integer.valueOf(item.itemID));
+    }
 }
