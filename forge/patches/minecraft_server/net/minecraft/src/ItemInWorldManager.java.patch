--- ../src_base/minecraft_server/net/minecraft/src/ItemInWorldManager.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src_work/minecraft_server/net/minecraft/src/ItemInWorldManager.java	0000-00-00 00:00:00.000000000 -0000
@@ -1,7 +1,11 @@
 package net.minecraft.src;
 
+import net.minecraft.src.forge.ForgeHooks;
+
 public class ItemInWorldManager
 {
+    /** Forge reach distance hook */
+    private double blockReachDistance = 5.0d;
     /** The world object that this object is connected to. */
     public World thisWorld;
 
@@ -81,7 +85,7 @@
             if (var2 != 0)
             {
                 Block var3 = Block.blocksList[var2];
-                float var4 = var3.blockStrength(this.thisPlayer) * (float)(var1 + 1);
+                float var4 = var3.blockStrength(thisWorld, this.thisPlayer, field_22049_l, field_22048_m, field_22047_n) * (float)(var1 + 1);
 
                 if (var4 >= 1.0F)
                 {
@@ -116,7 +120,7 @@
                 Block.blocksList[var5].onBlockClicked(this.thisWorld, par1, par2, par3, this.thisPlayer);
             }
 
-            if (var5 > 0 && Block.blocksList[var5].blockStrength(this.thisPlayer) >= 1.0F)
+            if (var5 > 0 && Block.blocksList[var5].blockStrength(thisWorld, this.thisPlayer, par1, par2, par3) >= 1.0F)
             {
                 this.blockHarvessted(par1, par2, par3);
             }
@@ -139,7 +143,7 @@
             if (var5 != 0)
             {
                 Block var6 = Block.blocksList[var5];
-                float var7 = var6.blockStrength(this.thisPlayer) * (float)(var4 + 1);
+                float var7 = var6.blockStrength(thisWorld, this.thisPlayer, par1, par2, par3) * (float)(var4 + 1);
 
                 if (var7 >= 0.7F)
                 {
@@ -166,7 +170,7 @@
     {
         Block var4 = Block.blocksList[this.thisWorld.getBlockId(par1, par2, par3)];
         int var5 = this.thisWorld.getBlockMetadata(par1, par2, par3);
-        boolean var6 = this.thisWorld.setBlockWithNotify(par1, par2, par3, 0);
+        boolean var6 = (var4 != null && var4.removeBlockByPlayer(thisWorld, thisPlayer, par1, par2, par3));
 
         if (var4 != null && var6)
         {
@@ -178,6 +182,11 @@
 
     public boolean blockHarvessted(int par1, int par2, int par3)
     {
+        ItemStack stack = thisPlayer.getCurrentEquippedItem();
+        if (stack != null && stack.getItem().onBlockStartBreak(stack, par1, par2, par3, thisPlayer))
+        {
+            return false;
+        }
         int var4 = this.thisWorld.getBlockId(par1, par2, par3);
         int var5 = this.thisWorld.getBlockMetadata(par1, par2, par3);
         this.thisWorld.playAuxSFXAtEntity(this.thisPlayer, 2001, par1, par2, par3, var4 + (this.thisWorld.getBlockMetadata(par1, par2, par3) << 12));
@@ -190,7 +199,7 @@
         else
         {
             ItemStack var7 = this.thisPlayer.getCurrentEquippedItem();
-            boolean var8 = this.thisPlayer.canHarvestBlock(Block.blocksList[var4]);
+            boolean var8 = Block.blocksList[var4].canHarvestBlock(thisPlayer, var5);
 
             if (var7 != null)
             {
@@ -200,6 +209,7 @@
                 {
                     var7.onItemDestroyedByUse(this.thisPlayer);
                     this.thisPlayer.destroyCurrentEquippedItem();
+                    ForgeHooks.onDestroyCurrentItem(thisPlayer, var7);
                 }
             }
 
@@ -246,6 +256,11 @@
      */
     public boolean activeBlockOrUseItem(EntityPlayer par1EntityPlayer, World par2World, ItemStack par3ItemStack, int par4, int par5, int par6, int par7)
     {
+        if (par3ItemStack != null && par3ItemStack.getItem().onItemUseFirst(par3ItemStack, par1EntityPlayer, par2World, par4, par5, par6, par7))
+        {
+            return true;
+        }
+        
         int var8 = par2World.getBlockId(par4, par5, par6);
 
         if (var8 > 0 && Block.blocksList[var8].blockActivated(par2World, par4, par5, par6, par1EntityPlayer))
@@ -267,7 +282,15 @@
         }
         else
         {
-            return par3ItemStack.useItem(par1EntityPlayer, par2World, par4, par5, par6, par7);
+            if (!par3ItemStack.useItem(par1EntityPlayer, par2World, par4, par5, par6, par7))
+            {
+                return false;
+            }
+            if (par3ItemStack.stackSize == 0)
+            {
+                ForgeHooks.onDestroyCurrentItem(par1EntityPlayer, par3ItemStack);
+            }
+            return true;
         }
     }
 
@@ -278,4 +301,13 @@
     {
         this.thisWorld = par1WorldServer;
     }
+    
+    public double getBlockReachDistance()
+    {
+        return blockReachDistance;
+    }
+    public void setBlockReachDistance(double distance)
+    {
+        blockReachDistance = distance;
+    }
 }
