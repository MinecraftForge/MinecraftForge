--- ../src_base/minecraft_server/net/minecraft/src/AnvilChunkLoader.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src_work/minecraft_server/net/minecraft/src/AnvilChunkLoader.java	0000-00-00 00:00:00.000000000 -0000
@@ -10,6 +10,8 @@
 import java.util.List;
 import java.util.Set;
 
+import net.minecraft.src.forge.ForgeHooks;
+
 public class AnvilChunkLoader implements IChunkLoader, IThreadedFileIO
 {
     private List field_48469_a = new ArrayList();
@@ -88,6 +90,7 @@
             }
 
             var5.removeUnknownBlocks();
+            ForgeHooks.onChunkLoadData(par1World, var5, par4NBTTagCompound);
             return var5;
         }
     }
@@ -103,6 +106,7 @@
             var3.setTag("Level", var4);
             this.func_48462_a(par2Chunk, par1World, var4);
             this.func_48463_a(par2Chunk.getChunkCoordIntPair(), var3);
+            ForgeHooks.onChunkSaveData(par1World, par2Chunk, var3);
         }
         catch (Exception var5)
         {
@@ -286,6 +290,8 @@
 
             par3NBTTagCompound.setTag("TileTicks", var11);
         }
+        
+        par3NBTTagCompound.setCompoundTag("ForgeData", par1Chunk.customChunkData);
     }
 
     private Chunk func_48465_a(World par1World, NBTTagCompound par2NBTTagCompound)
@@ -371,6 +377,9 @@
                 }
             }
         }
+        
+        if (par2NBTTagCompound.hasKey("ForgeData")) var5.customChunkData = par2NBTTagCompound.getCompoundTag("ForgeData");
+        else var5.customChunkData = new NBTTagCompound("ForgeData");
 
         return var5;
     }
