--- ../src_base/minecraft_server/net/minecraft/src/NetLoginHandler.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src_work/minecraft_server/net/minecraft/src/NetLoginHandler.java	0000-00-00 00:00:00.000000000 -0000
@@ -6,6 +6,9 @@
 import java.util.Random;
 import java.util.logging.Logger;
 import net.minecraft.server.MinecraftServer;
+import net.minecraft.src.forge.*;
+import net.minecraft.src.forge.packets.*;
+import java.io.UnsupportedEncodingException;
 
 public class NetLoginHandler extends NetHandler
 {
@@ -46,6 +49,7 @@
         this.mcServer = par1MinecraftServer;
         this.netManager = new NetworkManager(par2Socket, par3Str, this);
         this.netManager.chunkDataSendCounter = 0;
+        ForgeHooks.onConnect(netManager);
     }
 
     /**
@@ -164,7 +168,37 @@
             }
 
             var2.func_20057_k();
-            ModLoaderMp.handleAllLogins(var2);
+            if (par1Packet1Login.serverMode == ForgePacket.FORGE_ID)
+            {
+                //Pretty hackish place to put it, but it needs to go somewhere
+                ForgeHooksServer.init();
+                //pkt.mapSeed = ForgeHooks.buildVersion;
+                ForgeHooks.onLogin(netManager, par1Packet1Login);                
+
+                String[] channels = MessageManager.getInstance().getRegisteredChannels(netManager);
+                StringBuilder tmp = new StringBuilder();
+                tmp.append("Forge");
+                for(String channel : channels)
+                {
+                    tmp.append("\0");
+                    tmp.append(channel);
+                }
+                Packet250CustomPayload pkt = new Packet250CustomPayload(); 
+                pkt.channel = "REGISTER";
+                try {
+                    pkt.data = tmp.toString().getBytes("UTF8");
+                } catch (UnsupportedEncodingException e) {
+                    e.printStackTrace();
+                }
+                pkt.length = pkt.data.length;
+                var5.sendPacket(pkt);
+                ForgeHooksServer.sendModListRequest(netManager);                
+                ModLoaderMp.handleAllLogins(var2);
+            }
+            else
+            {
+                var5.kickPlayer("This server requires you to have Minecraft Forge installed.");
+            }
         }
 
         this.finishedProcessing = true;
