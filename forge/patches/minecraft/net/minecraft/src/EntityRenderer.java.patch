--- ../src_base/minecraft/net/minecraft/src/EntityRenderer.java 0000-00-00 00:00:00.000000000 -0000
+++ ../src_work/minecraft/net/minecraft/src/EntityRenderer.java	0000-00-00 00:00:00.000000000 -0000
@@ -5,6 +5,8 @@
 import java.util.List;
 import java.util.Random;
 import net.minecraft.client.Minecraft;
+import net.minecraft.src.forge.ForgeHooksClient;
+
 import org.lwjgl.input.Mouse;
 import org.lwjgl.opengl.Display;
 import org.lwjgl.opengl.GL11;
@@ -287,8 +289,15 @@
      */
     private void updateFovModifierHand()
     {
-        EntityPlayerSP var1 = (EntityPlayerSP)this.mc.renderViewEntity;
-        this.fovMultiplierTemp = var1.getFOVMultiplier();
+        if (mc.renderViewEntity instanceof EntityPlayerSP)
+        {
+            EntityPlayerSP var1 = (EntityPlayerSP)this.mc.renderViewEntity;
+            this.fovMultiplierTemp = var1.getFOVMultiplier();
+        }
+        else
+        {
+            this.fovMultiplierTemp = mc.thePlayer.getFOVMultiplier();
+        }
         this.fovModifierHandPrev = this.fovModifierHand;
         this.fovModifierHand += (this.fovMultiplierTemp - this.fovModifierHand) * 0.5F;
     }
@@ -304,7 +313,7 @@
         }
         else
         {
-            EntityPlayer var3 = (EntityPlayer)this.mc.renderViewEntity;
+            EntityLiving var3 = (EntityLiving)this.mc.renderViewEntity;
             float var4 = 70.0F;
 
             if (par2)
@@ -1095,8 +1104,11 @@
                     var20 = (EntityPlayer)var4;
                     GL11.glDisable(GL11.GL_ALPHA_TEST);
                     Profiler.endStartSection("outline");
-                    var5.drawBlockBreaking(var20, this.mc.objectMouseOver, 0, var20.inventory.getCurrentItem(), par1);
-                    var5.drawSelectionBox(var20, this.mc.objectMouseOver, 0, var20.inventory.getCurrentItem(), par1);
+                    if (!ForgeHooksClient.onBlockHighlight(var5, var20, mc.objectMouseOver, 0, var20.inventory.getCurrentItem(), par1))
+                    {
+                        var5.drawBlockBreaking(var20, this.mc.objectMouseOver, 0, var20.inventory.getCurrentItem(), par1);
+                        var5.drawSelectionBox(var20, this.mc.objectMouseOver, 0, var20.inventory.getCurrentItem(), par1);
+                    }
                     GL11.glEnable(GL11.GL_ALPHA_TEST);
                 }
             }
@@ -1119,28 +1131,31 @@
                     GL11.glShadeModel(GL11.GL_SMOOTH);
                 }
 
-                GL11.glColorMask(false, false, false, false);
-                var16 = var5.sortAndRender(var4, 1, (double)par1);
-
-                if (this.mc.gameSettings.anaglyph)
-                {
-                    if (anaglyphField == 0)
-                    {
-                        GL11.glColorMask(false, true, true, true);
-                    }
-                    else
-                    {
-                        GL11.glColorMask(true, false, false, true);
-                    }
-                }
-                else
+                for (int x=1; x<3; x++)
                 {
-                    GL11.glColorMask(true, true, true, true);
-                }
+                	GL11.glColorMask(false, false, false, false);
+                	var16 = var5.sortAndRender(var4, x, (double)par1);
 
-                if (var16 > 0)
-                {
-                    var5.renderAllRenderLists(1, (double)par1);
+                	if (this.mc.gameSettings.anaglyph)
+                	{
+                		if (anaglyphField == 0)
+                		{
+                			GL11.glColorMask(false, true, true, true);
+                		}
+                		else
+                		{
+                			GL11.glColorMask(true, false, false, true);
+                		}
+                	}
+                	else
+                	{
+                		GL11.glColorMask(true, true, true, true);
+                	}
+
+                	if (var16 > 0)
+                	{
+                		var5.renderAllRenderLists(x, (double)par1);
+                	}
                 }
 
                 GL11.glShadeModel(GL11.GL_FLAT);
@@ -1149,6 +1164,10 @@
             {
                 Profiler.endStartSection("water");
                 var5.sortAndRender(var4, 1, (double)par1);
+                GL11.glColorMask(false, false, false, false);
+                var16 = var5.sortAndRender(var4, 2, (double)par1);
+                GL11.glColorMask(true, true, true, true);
+                if (var16 > 0) var5.renderAllRenderLists(2, (double)par1);
             }
 
             GL11.glDepthMask(true);
@@ -1160,8 +1179,12 @@
                 var20 = (EntityPlayer)var4;
                 GL11.glDisable(GL11.GL_ALPHA_TEST);
                 Profiler.endStartSection("outline");
-                var5.drawBlockBreaking(var20, this.mc.objectMouseOver, 0, var20.inventory.getCurrentItem(), par1);
-                var5.drawSelectionBox(var20, this.mc.objectMouseOver, 0, var20.inventory.getCurrentItem(), par1);
+
+                if (!ForgeHooksClient.onBlockHighlight(var5, var20, mc.objectMouseOver, 0, var20.inventory.getCurrentItem(), par1))
+                {
+                    var5.drawBlockBreaking(var20, this.mc.objectMouseOver, 0, var20.inventory.getCurrentItem(), par1);
+                    var5.drawSelectionBox(var20, this.mc.objectMouseOver, 0, var20.inventory.getCurrentItem(), par1);
+                }
                 GL11.glEnable(GL11.GL_ALPHA_TEST);
             }
 
@@ -1185,6 +1208,9 @@
                 this.setupFog(1, par1);
                 GL11.glPopMatrix();
             }
+            
+            Profiler.endStartSection("fhooks");
+            ForgeHooksClient.onRenderWorldLast(var5, par1);
 
             Profiler.endStartSection("hand");
 
