--- ../src_base/minecraft/net/minecraft/src/RenderBlocks.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src_work/minecraft/net/minecraft/src/RenderBlocks.java	0000-00-00 00:00:00.000000000 -0000
@@ -456,9 +456,8 @@
     public boolean renderBlockBed(Block par1Block, int par2, int par3, int par4)
     {
         Tessellator var5 = Tessellator.instance;
-        int var6 = this.blockAccess.getBlockMetadata(par2, par3, par4);
-        int var7 = BlockBed.getDirection(var6);
-        boolean var8 = BlockBed.isBlockFootOfBed(var6);
+        int var7 = par1Block.getBedDirection(blockAccess, par2, par3, par4);
+        boolean var8 = par1Block.isBedFoot(blockAccess, par2, par3, par4);
         float var9 = 0.5F;
         float var10 = 1.0F;
         float var11 = 0.8F;
@@ -1386,7 +1385,7 @@
         double var30;
         double var32;
 
-        if (!this.blockAccess.isBlockNormalCube(par2, par3 - 1, par4) && !Block.fire.canBlockCatchFire(this.blockAccess, par2, par3 - 1, par4))
+        if (!this.blockAccess.isBlockNormalCube(par2, par3 - 1, par4) && !Block.fire.canBlockCatchFire(this.blockAccess, par2, par3 - 1, par4, 1))
         {
             float var36 = 0.2F;
             float var19 = 0.0625F;
@@ -1406,7 +1405,7 @@
                 var9 = var20;
             }
 
-            if (Block.fire.canBlockCatchFire(this.blockAccess, par2 - 1, par3, par4))
+            if (Block.fire.canBlockCatchFire(this.blockAccess, par2 - 1, par3, par4, 5))
             {
                 var5.addVertexWithUV((double)((float)par2 + var36), (double)((float)par3 + var17 + var19), (double)(par4 + 1), var11, var13);
                 var5.addVertexWithUV((double)(par2 + 0), (double)((float)(par3 + 0) + var19), (double)(par4 + 1), var11, var15);
@@ -1418,7 +1417,7 @@
                 var5.addVertexWithUV((double)((float)par2 + var36), (double)((float)par3 + var17 + var19), (double)(par4 + 1), var11, var13);
             }
 
-            if (Block.fire.canBlockCatchFire(this.blockAccess, par2 + 1, par3, par4))
+            if (Block.fire.canBlockCatchFire(this.blockAccess, par2 + 1, par3, par4, 4))
             {
                 var5.addVertexWithUV((double)((float)(par2 + 1) - var36), (double)((float)par3 + var17 + var19), (double)(par4 + 0), var9, var13);
                 var5.addVertexWithUV((double)(par2 + 1 - 0), (double)((float)(par3 + 0) + var19), (double)(par4 + 0), var9, var15);
@@ -1430,7 +1429,7 @@
                 var5.addVertexWithUV((double)((float)(par2 + 1) - var36), (double)((float)par3 + var17 + var19), (double)(par4 + 0), var9, var13);
             }
 
-            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3, par4 - 1))
+            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3, par4 - 1, 3))
             {
                 var5.addVertexWithUV((double)(par2 + 0), (double)((float)par3 + var17 + var19), (double)((float)par4 + var36), var11, var13);
                 var5.addVertexWithUV((double)(par2 + 0), (double)((float)(par3 + 0) + var19), (double)(par4 + 0), var11, var15);
@@ -1442,7 +1441,7 @@
                 var5.addVertexWithUV((double)(par2 + 0), (double)((float)par3 + var17 + var19), (double)((float)par4 + var36), var11, var13);
             }
 
-            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3, par4 + 1))
+            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3, par4 + 1, 2))
             {
                 var5.addVertexWithUV((double)(par2 + 1), (double)((float)par3 + var17 + var19), (double)((float)(par4 + 1) - var36), var9, var13);
                 var5.addVertexWithUV((double)(par2 + 1), (double)((float)(par3 + 0) + var19), (double)(par4 + 1 - 0), var9, var15);
@@ -1454,7 +1453,7 @@
                 var5.addVertexWithUV((double)(par2 + 1), (double)((float)par3 + var17 + var19), (double)((float)(par4 + 1) - var36), var9, var13);
             }
 
-            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3 + 1, par4))
+            if (Block.fire.canBlockCatchFire(this.blockAccess, par2, par3 + 1, par4, 0))
             {
                 var20 = (double)par2 + 0.5D + 0.5D;
                 var22 = (double)par2 + 0.5D - 0.5D;
@@ -1598 +1634 @@
			double var15 = (double)((float)var13 / 256.0F);
			double var17 = (double)(((float)var13 + 15.99F) / 256.0F);
			double var19 = (double)((float)var14 / 256.0F);
			double var21 = (double)(((float)var14 + 15.99F) / 256.0F);
+			boolean normalCubeIMinus = this.blockAccess.isBlockNormalCube(par2 - 1, par3, par4);
+			boolean normalCubeIPlus = this.blockAccess.isBlockNormalCube(par2 + 1, par3, par4);
+			boolean normalCubeKMinus = this.blockAccess.isBlockNormalCube(par2, par3, par4 - 1);
+			boolean normalCubeKPlus = this.blockAccess.isBlockNormalCube(par2, par3, par4 + 1);
+			boolean var23 = BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2 - 1, par3, par4, 1) || !normalCubeIMinus && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2 - 1, par3 - 1, par4, -1);
+			boolean var24 = BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2 + 1, par3, par4, 3) || !normalCubeIPlus && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2 + 1, par3 - 1, par4, -2);
+			boolean var25 = BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2, par3, par4 - 1, 2) || !normalCubeKMinus && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2, par3 - 1, par4 - 1, -3);
+			boolean var26 = BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2, par3, par4 + 1, 0) || !normalCubeKPlus && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2, par3 - 1, par4 + 1, -4);
-			boolean var23 = BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2 - 1, par3, par4, 1) || !this.blockAccess.isBlockNormalCube(par2 - 1, par3, par4) && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2 - 1, par3 - 1, par4, -1);
-			boolean var24 = BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2 + 1, par3, par4, 3) || !this.blockAccess.isBlockNormalCube(par2 + 1, par3, par4) && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2 + 1, par3 - 1, par4, -1);
-			boolean var25 = BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2, par3, par4 - 1, 2) || !this.blockAccess.isBlockNormalCube(par2, par3, par4 - 1) && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2, par3 - 1, par4 - 1, -1);
-			boolean var26 = BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2, par3, par4 + 1, 0) || !this.blockAccess.isBlockNormalCube(par2, par3, par4 + 1) && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2, par3 - 1, par4 + 1, -1);

			if (!this.blockAccess.isBlockNormalCube(par2, par3 + 1, par4))
			{
+				if (normalCubeIMinus && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2 - 1, par3 + 1, par4, -5))
-				if (this.blockAccess.isBlockNormalCube(par2 - 1, par3, par4) && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2 - 1, par3 + 1, par4, -1))
				{
					var23 = true;
				}
+				if (normalCubeIPlus && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2 - 1, par3 + 1, par4, -6))
-				if (this.blockAccess.isBlockNormalCube(par2 + 1, par3, par4) && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2 + 1, par3 + 1, par4, -1))
				{
					var24 = true;
				}
+				if (normalCubeKMinus && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2 - 1, par3 + 1, par4, -7))
-				if (this.blockAccess.isBlockNormalCube(par2, par3, par4 - 1) && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2, par3 + 1, par4 - 1, -1))
				{
					var25 = true;
				}
+				if (normalCubeKPlus && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2 - 1, par3 + 1, par4, -8))
-				if (this.blockAccess.isBlockNormalCube(par2, par3, par4 + 1) && BlockRedstoneWire.isPowerProviderOrWire(this.blockAccess, par2, par3 + 1, par4 + 1, -1))
				{
					var26 = true;
				}
			}

			float var27 = (float)(par2 + 0);
			float var28 = (float)(par2 + 1);
			float var29 = (float)(par4 + 0);
			float var30 = (float)(par4 + 1);
			byte var31 = 0;
@@ -3610,7 +3609,7 @@
             var27 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 2);
             this.renderEastFace(par1Block, (double)par2, (double)par3, (double)par4, var27);
 
-            if (cfgGrassFix && var27 == 3 && this.overrideBlockTexture < 0)
+            if (Tessellator.instance.defaultTexture && cfgGrassFix && var27 == 3 && this.overrideBlockTexture < 0)
             {
                 this.colorRedTopLeft *= par5;
                 this.colorRedBottomLeft *= par5;
@@ -3733,7 +3732,7 @@
             var27 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 3);
             this.renderWestFace(par1Block, (double)par2, (double)par3, (double)par4, par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 3));
 
-            if (cfgGrassFix && var27 == 3 && this.overrideBlockTexture < 0)
+            if (Tessellator.instance.defaultTexture && cfgGrassFix && var27 == 3 && this.overrideBlockTexture < 0)
             {
                 this.colorRedTopLeft *= par5;
                 this.colorRedBottomLeft *= par5;
@@ -3856,7 +3855,7 @@
             var27 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 4);
             this.renderNorthFace(par1Block, (double)par2, (double)par3, (double)par4, var27);
 
-            if (cfgGrassFix && var27 == 3 && this.overrideBlockTexture < 0)
+            if (Tessellator.instance.defaultTexture && cfgGrassFix && var27 == 3 && this.overrideBlockTexture < 0)
             {
                 this.colorRedTopLeft *= par5;
                 this.colorRedBottomLeft *= par5;
@@ -3979,7 +3978,7 @@
             var27 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 5);
             this.renderSouthFace(par1Block, (double)par2, (double)par3, (double)par4, var27);
 
-            if (cfgGrassFix && var27 == 3 && this.overrideBlockTexture < 0)
+            if (Tessellator.instance.defaultTexture && cfgGrassFix && var27 == 3 && this.overrideBlockTexture < 0)
             {
                 this.colorRedTopLeft *= par5;
                 this.colorRedBottomLeft *= par5;
@@ -4091,7 +4090,7 @@
             var28 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 2);
             this.renderEastFace(par1Block, (double)par2, (double)par3, (double)par4, var28);
 
-            if (cfgGrassFix && var28 == 3 && this.overrideBlockTexture < 0)
+            if (Tessellator.instance.defaultTexture && cfgGrassFix && var28 == 3 && this.overrideBlockTexture < 0)
             {
                 var8.setColorOpaque_F(var18 * par5, var21 * par6, var24 * par7);
                 this.renderEastFace(par1Block, (double)par2, (double)par3, (double)par4, 38);
@@ -4107,7 +4106,7 @@
             var28 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 3);
             this.renderWestFace(par1Block, (double)par2, (double)par3, (double)par4, var28);
 
-            if (cfgGrassFix && var28 == 3 && this.overrideBlockTexture < 0)
+            if (Tessellator.instance.defaultTexture && cfgGrassFix && var28 == 3 && this.overrideBlockTexture < 0)
             {
                 var8.setColorOpaque_F(var18 * par5, var21 * par6, var24 * par7);
                 this.renderWestFace(par1Block, (double)par2, (double)par3, (double)par4, 38);
@@ -4123,7 +4122,7 @@
             var28 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 4);
             this.renderNorthFace(par1Block, (double)par2, (double)par3, (double)par4, var28);
 
-            if (cfgGrassFix && var28 == 3 && this.overrideBlockTexture < 0)
+            if (Tessellator.instance.defaultTexture && cfgGrassFix && var28 == 3 && this.overrideBlockTexture < 0)
             {
                 var8.setColorOpaque_F(var19 * par5, var22 * par6, var25 * par7);
                 this.renderNorthFace(par1Block, (double)par2, (double)par3, (double)par4, 38);
@@ -4139,7 +4138,7 @@
             var28 = par1Block.getBlockTexture(this.blockAccess, par2, par3, par4, 5);
             this.renderSouthFace(par1Block, (double)par2, (double)par3, (double)par4, var28);
 
-            if (cfgGrassFix && var28 == 3 && this.overrideBlockTexture < 0)
+            if (Tessellator.instance.defaultTexture && cfgGrassFix && var28 == 3 && this.overrideBlockTexture < 0)
             {
                 var8.setColorOpaque_F(var19 * par5, var22 * par6, var25 * par7);
                 this.renderSouthFace(par1Block, (double)par2, (double)par3, (double)par4, 38);
