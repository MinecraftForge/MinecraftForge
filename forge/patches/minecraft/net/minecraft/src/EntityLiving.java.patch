--- ../src_base/minecraft/net/minecraft/src/EntityLiving.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src_work/minecraft/net/minecraft/src/EntityLiving.java	0000-00-00 00:00:00.000000000 -0000
@@ -6,6 +6,8 @@
 import java.util.List;
 import java.util.Random;
 
+import net.minecraft.src.forge.ForgeHooks;
+
 public abstract class EntityLiving extends Entity
 {
     public int heartsHalvesLife = 20;
@@ -59,7 +61,7 @@
      * in each step in the damage calculations, this is set to the 'carryover' that would result if someone was damaged
      * .25 hearts (for example), and added to the damage in the next step
      */
-    protected int carryoverDamage;
+    public int carryoverDamage;
 
     /** Number of ticks since this EntityLiving last produced its sound */
     private int livingSoundTime;
@@ -834,6 +836,11 @@
      */
     public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
     {
+        if (ForgeHooks.onEntityLivingAttacked(this, par1DamageSource, par2))
+        {
+            return false;
+        }
+        
         if (this.worldObj.isRemote)
         {
             return false;
@@ -1342,7 +1349,7 @@
         int var2 = MathHelper.floor_double(this.boundingBox.minY);
         int var3 = MathHelper.floor_double(this.posZ);
         int var4 = this.worldObj.getBlockId(var1, var2, var3);
-        return var4 == Block.ladder.blockID || var4 == Block.vine.blockID;
+        return Block.blocksList[var4] != null && Block.blocksList[var4].isLadder(worldObj, var1, var2, var3);
     }
 
     /**
