--- ../src_base/minecraft/net/minecraft/src/BlockCrops.java	0000-00-00 00:00:00.000000000 -0000
+++ ../src_work/minecraft/net/minecraft/src/BlockCrops.java	0000-00-00 00:00:00.000000000 -0000
@@ -1,6 +1,7 @@
 package net.minecraft.src;
 
 import java.util.Random;
+import java.util.ArrayList;
 
 public class BlockCrops extends BlockFlower
 {
@@ -129,31 +130,24 @@
         return 6;
     }
 
-    /**
-     * Drops the block items with a specified chance of dropping the specified items
-     */
-    public void dropBlockAsItemWithChance(World par1World, int par2, int par3, int par4, int par5, float par6, int par7)
+    @Override
+    public ArrayList<ItemStack> getBlockDropped(World world, int x, int y, int z, int metadata, int fortune)
     {
-        super.dropBlockAsItemWithChance(par1World, par2, par3, par4, par5, par6, 0);
-
-        if (!par1World.isRemote)
+        ArrayList<ItemStack> ret = new ArrayList<ItemStack>();
+        if (metadata == 7)
         {
-            int var8 = 3 + par7;
-
-            for (int var9 = 0; var9 < var8; ++var9)
+            ret.add(new ItemStack(Item.wheat));
+        }
+        
+        for (int n = 0; n < 3 + fortune; n++)
+        {
+            if (world.rand.nextInt(15) <= metadata)
             {
-                if (par1World.rand.nextInt(15) <= par5)
-                {
-                    float var10 = 0.7F;
-                    float var11 = par1World.rand.nextFloat() * var10 + (1.0F - var10) * 0.5F;
-                    float var12 = par1World.rand.nextFloat() * var10 + (1.0F - var10) * 0.5F;
-                    float var13 = par1World.rand.nextFloat() * var10 + (1.0F - var10) * 0.5F;
-                    EntityItem var14 = new EntityItem(par1World, (double)((float)par2 + var11), (double)((float)par3 + var12), (double)((float)par4 + var13), new ItemStack(Item.seeds));
-                    var14.delayBeforeCanPickup = 10;
-                    par1World.spawnEntityInWorld(var14);
-                }
+                ret.add(new ItemStack(Item.seeds));
             }
         }
+        
+        return ret;
     }
 
     /**
