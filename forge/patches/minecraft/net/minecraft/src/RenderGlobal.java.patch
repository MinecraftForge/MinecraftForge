--- ../src_base/minecraft/net/minecraft/src/RenderGlobal.java     0000-00-00 00:00:00.000000000 -0000
+++ ../src_work/minecraft/net/minecraft/src/RenderGlobal.java	0000-00-00 00:00:00.000000000 -0000
@@ -15,10 +15,10 @@
     public List tileEntities = new ArrayList();
 
     /** A reference to the World object. */
-    private World worldObj;
+    public World worldObj;
 
     /** The RenderEngine instance used by RenderGlobal */
-    private RenderEngine renderEngine;
+    public RenderEngine renderEngine;
     private List worldRenderersToUpdate = new ArrayList();
     private WorldRenderer[] sortedWorldRenderers;
     private WorldRenderer[] worldRenderers;
@@ -30,10 +30,10 @@
     private int glRenderListBase;
 
     /** A reference to the Minecraft object. */
-    private Minecraft mc;
+    public Minecraft mc;
 
     /** Global render blocks */
-    private RenderBlocks globalRenderBlocks;
+    public RenderBlocks globalRenderBlocks;
 
     /** OpenGL occlusion query base */
     private IntBuffer glOcclusionQueryBase;
@@ -149,7 +149,7 @@
         this.renderEngine = par2RenderEngine;
         byte var3 = 34;
         byte var4 = 32;
-        this.glRenderListBase = GLAllocation.generateDisplayLists(var3 * var3 * var4 * 3);
+        this.glRenderListBase = GLAllocation.generateDisplayLists(var3 * var3 * var4 * 4);
         this.occlusionEnabled = OpenGlCapsChecker.checkARBOcclusion();
 
         if (this.occlusionEnabled)
@@ -356,7 +356,7 @@
                         this.worldRenderers[(var6 * this.renderChunksTall + var5) * this.renderChunksWide + var4].markDirty();
                         this.sortedWorldRenderers[(var6 * this.renderChunksTall + var5) * this.renderChunksWide + var4] = this.worldRenderers[(var6 * this.renderChunksTall + var5) * this.renderChunksWide + var4];
                         this.worldRenderersToUpdate.add(this.worldRenderers[(var6 * this.renderChunksTall + var5) * this.renderChunksWide + var4]);
-                        var2 += 3;
+                        var2 += 4;
                     }
                 }
             }
@@ -1385,7 +1385,7 @@
         }
         else
         {
-            byte var4 = 2;
+            byte var4 = 3;
             RenderSorter var5 = new RenderSorter(par1EntityLiving);
             WorldRenderer[] var6 = new WorldRenderer[var4];
             ArrayList var7 = null;
@@ -1835,6 +1835,7 @@
             double var17 = this.mc.renderViewEntity.posY - par4;
             double var19 = this.mc.renderViewEntity.posZ - par6;
             EntityFX var21 = null;
+            Object effectObject = null;
 
             if (par1Str.equals("hugeexplosion"))
             {
@@ -1954,6 +1955,7 @@
                     else if (par1Str.equals("snowballpoof"))
                     {
                         var21 = new EntityBreakingFX(this.worldObj, par2, par4, par6, Item.snowball);
+                        effectObject = Item.snowball;
                     }
                     else if (par1Str.equals("dripWater"))
                     {
@@ -1970,6 +1972,7 @@
                     else if (par1Str.equals("slime"))
                     {
                         var21 = new EntityBreakingFX(this.worldObj, par2, par4, par6, Item.slimeBall);
+                        effectObject = Item.slimeBall;
                     }
                     else if (par1Str.equals("heart"))
                     {
@@ -1983,17 +1986,19 @@
                         {
                             var24 = Integer.parseInt(par1Str.substring(par1Str.indexOf("_") + 1));
                             var21 = new EntityBreakingFX(this.worldObj, par2, par4, par6, par8, par10, par12, Item.itemsList[var24]);
+                            effectObject = Item.itemsList[var24];
                         }
                         else if (par1Str.startsWith("tilecrack_"))
                         {
                             var24 = Integer.parseInt(par1Str.substring(par1Str.indexOf("_") + 1));
                             var21 = new EntityDiggingFX(this.worldObj, par2, par4, par6, par8, par10, par12, Block.blocksList[var24], 0, 0);
+                            effectObject = Block.blocksList[var24];
                         }
                     }
 
                     if (var21 != null)
                     {
-                        this.mc.effectRenderer.addEffect((EntityFX)var21);
+                        this.mc.effectRenderer.addEffect((EntityFX)var21, effectObject);
                     }
 
                     return (EntityFX)var21;
