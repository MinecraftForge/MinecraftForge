package net.minecraft.src;

import net.minecraft.src.hybrids.*;
import java.io.File;

public class mod_InfiHybrids extends BaseModMp
{
    public static int treeRootID;
    public static int woodIceAxeID;
    public static int stoneIceAxeID;
    public static int ironIceAxeID;
    public static int diamondIceAxeID;
    public static int goldIceAxeID;
    public static int redstoneIceAxeID;
    public static int obsidianIceAxeID;
    public static int sandstoneIceAxeID;
    public static int boneIceAxeID;
    public static int paperIceAxeID;
    public static int mossyIceAxeID;
    public static int netherrackIceAxeID;
    public static int glowstoneIceAxeID;
    public static int iceIceAxeID;
    public static int lavaIceAxeID;
    public static int slimeIceAxeID;
    public static int cactusIceAxeID;
    public static int flintIceAxeID;
    public static int brickIceAxeID;
    public static int blazeIceAxeID;
    public static int woodMattockID;
    public static int stoneMattockID;
    public static int ironMattockID;
    public static int diamondMattockID;
    public static int goldMattockID;
    public static int redstoneMattockID;
    public static int obsidianMattockID;
    public static int sandstoneMattockID;
    public static int boneMattockID;
    public static int paperMattockID;
    public static int mossyMattockID;
    public static int netherrackMattockID;
    public static int glowstoneMattockID;
    public static int iceMattockID;
    public static int lavaMattockID;
    public static int slimeMattockID;
    public static int cactusMattockID;
    public static int flintMattockID;
    public static int brickMattockID;
    public static int blazeMattockID;
    public static int woodHammerID;
    public static int stoneHammerID;
    public static int ironHammerID;
    public static int diamondHammerID;
    public static int goldHammerID;
    public static int redstoneHammerID;
    public static int obsidianHammerID;
    public static int sandstoneHammerID;
    public static int boneHammerID;
    public static int paperHammerID;
    public static int mossyHammerID;
    public static int netherrackHammerID;
    public static int glowstoneHammerID;
    public static int iceHammerID;
    public static int lavaHammerID;
    public static int slimeHammerID;
    public static int cactusHammerID;
    public static int flintHammerID;
    public static int brickHammerID;
    public static int blazeHammerID;
    public static int woodScytheID;
    public static int stoneScytheID;
    public static int ironScytheID;
    public static int diamondScytheID;
    public static int goldScytheID;
    public static int redstoneScytheID;
    public static int obsidianScytheID;
    public static int sandstoneScytheID;
    public static int boneScytheID;
    public static int paperScytheID;
    public static int mossyScytheID;
    public static int netherrackScytheID;
    public static int glowstoneScytheID;
    public static int iceScytheID;
    public static int lavaScytheID;
    public static int slimeScytheID;
    public static int cactusScytheID;
    public static int flintScytheID;
    public static int brickScytheID;
    public static int blazeScytheID;
    public static int wDur;
    public static float wMod;
    public static int wDam;
    public static int wLevel;
    public static float wSpeed;
    public static int stDur;
    public static float stMod;
    public static int stDam;
    public static int stLevel;
    public static float stSpeed;
    public static int iDur;
    public static float iMod;
    public static int iDam;
    public static int iLevel;
    public static float iSpeed;
    public static int dDur;
    public static float dMod;
    public static int dDam;
    public static int dLevel;
    public static float dSpeed;
    public static int gDur;
    public static float gMod;
    public static int gDam;
    public static int gLevel;
    public static float gSpeed;
    public static int rDur;
    public static float rMod;
    public static int rDam;
    public static int rLevel;
    public static float rSpeed;
    public static int oDur;
    public static float oMod;
    public static int oDam;
    public static int oLevel;
    public static float oSpeed;
    public static int saDur;
    public static float saMod;
    public static int saDam;
    public static int saLevel;
    public static float saSpeed;
    public static int bDur;
    public static float bMod;
    public static int bDam;
    public static int bLevel;
    public static float bSpeed;
    public static int pDur;
    public static float pMod;
    public static int pDam;
    public static int pLevel;
    public static float pSpeed;
    public static int mDur;
    public static float mMod;
    public static int mDam;
    public static int mLevel;
    public static float mSpeed;
    public static int nDur;
    public static float nMod;
    public static int nDam;
    public static int nLevel;
    public static float nSpeed;
    public static int glDur;
    public static float glMod;
    public static int glDam;
    public static int glLevel;
    public static float glSpeed;
    public static int iceDur;
    public static float iceMod;
    public static int iceDam;
    public static int iceLevel;
    public static float iceSpeed;
    public static int lDur;
    public static float lMod;
    public static int lDam;
    public static int lLevel;
    public static float lSpeed;
    public static int sDur;
    public static float sMod;
    public static int sDam;
    public static int sLevel;
    public static float sSpeed;
    public static int cDur;
    public static float cMod;
    public static int cDam;
    public static int cLevel;
    public static float cSpeed;
    public static int fDur;
    public static float fMod;
    public static int fDam;
    public static int fLevel;
    public static float fSpeed;
    public static int brDur;
    public static float brMod;
    public static int brDam;
    public static int brLevel;
    public static float brSpeed;
    public static int blDur;
    public static float blMod;
    public static int blDam;
    public static int blLevel;
    public static float blSpeed;
    public static int wType;
    public static int stType;
    public static int iType;
    public static int dType;
    public static int gType;
    public static int rType;
    public static int oType;
    public static int saType;
    public static int bType;
    public static int pType;
    public static int mType;
    public static int nType;
    public static int glType;
    public static int iceType;
    public static int lType;
    public static int sType;
    public static int cType;
    public static int fType;
    public static int brType;
    public static int blType;
    public static Item treeRoot;
    public static Item coalBits;
    public static Item wWoodIceAxe;
    public static Item stWoodIceAxe;
    public static Item saWoodIceAxe;
    public static Item bWoodIceAxe;
    public static Item pWoodIceAxe;
    public static Item nWoodIceAxe;
    public static Item sWoodIceAxe;
    public static Item cWoodIceAxe;
    public static Item fWoodIceAxe;
    public static Item brWoodIceAxe;
    public static Item wStoneIceAxe;
    public static Item stStoneIceAxe;
    public static Item saStoneIceAxe;
    public static Item bStoneIceAxe;
    public static Item pStoneIceAxe;
    public static Item mStoneIceAxe;
    public static Item nStoneIceAxe;
    public static Item iceStoneIceAxe;
    public static Item sStoneIceAxe;
    public static Item cStoneIceAxe;
    public static Item fStoneIceAxe;
    public static Item brStoneIceAxe;
    public static Item wIronIceAxe;
    public static Item stIronIceAxe;
    public static Item iIronIceAxe;
    public static Item dIronIceAxe;
    public static Item gIronIceAxe;
    public static Item rIronIceAxe;
    public static Item oIronIceAxe;
    public static Item bIronIceAxe;
    public static Item nIronIceAxe;
    public static Item glIronIceAxe;
    public static Item iceIronIceAxe;
    public static Item sIronIceAxe;
    public static Item blIronIceAxe;
    public static Item wDiamondIceAxe;
    public static Item stDiamondIceAxe;
    public static Item iDiamondIceAxe;
    public static Item dDiamondIceAxe;
    public static Item gDiamondIceAxe;
    public static Item rDiamondIceAxe;
    public static Item oDiamondIceAxe;
    public static Item bDiamondIceAxe;
    public static Item mDiamondIceAxe;
    public static Item nDiamondIceAxe;
    public static Item glDiamondIceAxe;
    public static Item blDiamondIceAxe;
    public static Item wGoldIceAxe;
    public static Item stGoldIceAxe;
    public static Item gGoldIceAxe;
    public static Item oGoldIceAxe;
    public static Item saGoldIceAxe;
    public static Item bGoldIceAxe;
    public static Item mGoldIceAxe;
    public static Item nGoldIceAxe;
    public static Item glGoldIceAxe;
    public static Item iceGoldIceAxe;
    public static Item sGoldIceAxe;
    public static Item cGoldIceAxe;
    public static Item fGoldIceAxe;
    public static Item wRedstoneIceAxe;
    public static Item stRedstoneIceAxe;
    public static Item iRedstoneIceAxe;
    public static Item dRedstoneIceAxe;
    public static Item rRedstoneIceAxe;
    public static Item oRedstoneIceAxe;
    public static Item bRedstoneIceAxe;
    public static Item mRedstoneIceAxe;
    public static Item glRedstoneIceAxe;
    public static Item sRedstoneIceAxe;
    public static Item blRedstoneIceAxe;
    public static Item wObsidianIceAxe;
    public static Item stObsidianIceAxe;
    public static Item iObsidianIceAxe;
    public static Item dObsidianIceAxe;
    public static Item gObsidianIceAxe;
    public static Item rObsidianIceAxe;
    public static Item oObsidianIceAxe;
    public static Item bObsidianIceAxe;
    public static Item nObsidianIceAxe;
    public static Item glObsidianIceAxe;
    public static Item sObsidianIceAxe;
    public static Item fObsidianIceAxe;
    public static Item blObsidianIceAxe;
    public static Item wSandstoneIceAxe;
    public static Item stSandstoneIceAxe;
    public static Item oSandstoneIceAxe;
    public static Item saSandstoneIceAxe;
    public static Item bSandstoneIceAxe;
    public static Item pSandstoneIceAxe;
    public static Item nSandstoneIceAxe;
    public static Item iceSandstoneIceAxe;
    public static Item sSandstoneIceAxe;
    public static Item cSandstoneIceAxe;
    public static Item fSandstoneIceAxe;
    public static Item brSandstoneIceAxe;
    public static Item wBoneIceAxe;
    public static Item stBoneIceAxe;
    public static Item iBoneIceAxe;
    public static Item dBoneIceAxe;
    public static Item rBoneIceAxe;
    public static Item oBoneIceAxe;
    public static Item bBoneIceAxe;
    public static Item mBoneIceAxe;
    public static Item nBoneIceAxe;
    public static Item glBoneIceAxe;
    public static Item sBoneIceAxe;
    public static Item cBoneIceAxe;
    public static Item fBoneIceAxe;
    public static Item brBoneIceAxe;
    public static Item blBoneIceAxe;
    public static Item wPaperIceAxe;
    public static Item saPaperIceAxe;
    public static Item bPaperIceAxe;
    public static Item pPaperIceAxe;
    public static Item sPaperIceAxe;
    public static Item cPaperIceAxe;
    public static Item brPaperIceAxe;
    public static Item stMossyIceAxe;
    public static Item dMossyIceAxe;
    public static Item rMossyIceAxe;
    public static Item bMossyIceAxe;
    public static Item mMossyIceAxe;
    public static Item glMossyIceAxe;
    public static Item wNetherrackIceAxe;
    public static Item stNetherrackIceAxe;
    public static Item iNetherrackIceAxe;
    public static Item rNetherrackIceAxe;
    public static Item oNetherrackIceAxe;
    public static Item saNetherrackIceAxe;
    public static Item bNetherrackIceAxe;
    public static Item mNetherrackIceAxe;
    public static Item nNetherrackIceAxe;
    public static Item glNetherrackIceAxe;
    public static Item iceNetherrackIceAxe;
    public static Item sNetherrackIceAxe;
    public static Item cNetherrackIceAxe;
    public static Item fNetherrackIceAxe;
    public static Item brNetherrackIceAxe;
    public static Item blNetherrackIceAxe;
    public static Item wGlowstoneIceAxe;
    public static Item stGlowstoneIceAxe;
    public static Item iGlowstoneIceAxe;
    public static Item dGlowstoneIceAxe;
    public static Item rGlowstoneIceAxe;
    public static Item oGlowstoneIceAxe;
    public static Item bGlowstoneIceAxe;
    public static Item mGlowstoneIceAxe;
    public static Item nGlowstoneIceAxe;
    public static Item glGlowstoneIceAxe;
    public static Item iceGlowstoneIceAxe;
    public static Item lGlowstoneIceAxe;
    public static Item sGlowstoneIceAxe;
    public static Item blGlowstoneIceAxe;
    public static Item wIceIceAxe;
    public static Item stIceIceAxe;
    public static Item iIceIceAxe;
    public static Item dIceIceAxe;
    public static Item gIceIceAxe;
    public static Item rIceIceAxe;
    public static Item oIceIceAxe;
    public static Item saIceIceAxe;
    public static Item bIceIceAxe;
    public static Item glIceIceAxe;
    public static Item iceIceIceAxe;
    public static Item sIceIceAxe;
    public static Item cIceIceAxe;
    public static Item fIceIceAxe;
    public static Item brIceIceAxe;
    public static Item dLavaIceAxe;
    public static Item rLavaIceAxe;
    public static Item bLavaIceAxe;
    public static Item nLavaIceAxe;
    public static Item glLavaIceAxe;
    public static Item lLavaIceAxe;
    public static Item blLavaIceAxe;
    public static Item wSlimeIceAxe;
    public static Item stSlimeIceAxe;
    public static Item iSlimeIceAxe;
    public static Item dSlimeIceAxe;
    public static Item gSlimeIceAxe;
    public static Item rSlimeIceAxe;
    public static Item oSlimeIceAxe;
    public static Item saSlimeIceAxe;
    public static Item bSlimeIceAxe;
    public static Item pSlimeIceAxe;
    public static Item mSlimeIceAxe;
    public static Item nSlimeIceAxe;
    public static Item glSlimeIceAxe;
    public static Item iceSlimeIceAxe;
    public static Item lSlimeIceAxe;
    public static Item sSlimeIceAxe;
    public static Item cSlimeIceAxe;
    public static Item fSlimeIceAxe;
    public static Item brSlimeIceAxe;
    public static Item blSlimeIceAxe;
    public static Item wCactusIceAxe;
    public static Item stCactusIceAxe;
    public static Item saCactusIceAxe;
    public static Item bCactusIceAxe;
    public static Item pCactusIceAxe;
    public static Item nCactusIceAxe;
    public static Item sCactusIceAxe;
    public static Item cCactusIceAxe;
    public static Item fCactusIceAxe;
    public static Item brCactusIceAxe;
    public static Item wFlintIceAxe;
    public static Item stFlintIceAxe;
    public static Item iFlintIceAxe;
    public static Item gFlintIceAxe;
    public static Item oFlintIceAxe;
    public static Item saFlintIceAxe;
    public static Item bFlintIceAxe;
    public static Item nFlintIceAxe;
    public static Item iceFlintIceAxe;
    public static Item sFlintIceAxe;
    public static Item cFlintIceAxe;
    public static Item fFlintIceAxe;
    public static Item brFlintIceAxe;
    public static Item blFlintIceAxe;
    public static Item wBrickIceAxe;
    public static Item stBrickIceAxe;
    public static Item saBrickIceAxe;
    public static Item bBrickIceAxe;
    public static Item pBrickIceAxe;
    public static Item mBrickIceAxe;
    public static Item nBrickIceAxe;
    public static Item iceBrickIceAxe;
    public static Item sBrickIceAxe;
    public static Item cBrickIceAxe;
    public static Item fBrickIceAxe;
    public static Item brBrickIceAxe;
    public static Item dBlazeIceAxe;
    public static Item rBlazeIceAxe;
    public static Item bBlazeIceAxe;
    public static Item nBlazeIceAxe;
    public static Item glBlazeIceAxe;
    public static Item lBlazeIceAxe;
    public static Item fBlazeIceAxe;
    public static Item blBlazeIceAxe;
    public static Item wWoodMattock;
    public static Item stWoodMattock;
    public static Item saWoodMattock;
    public static Item bWoodMattock;
    public static Item pWoodMattock;
    public static Item nWoodMattock;
    public static Item sWoodMattock;
    public static Item cWoodMattock;
    public static Item fWoodMattock;
    public static Item brWoodMattock;
    public static Item wStoneMattock;
    public static Item stStoneMattock;
    public static Item saStoneMattock;
    public static Item bStoneMattock;
    public static Item pStoneMattock;
    public static Item mStoneMattock;
    public static Item nStoneMattock;
    public static Item iceStoneMattock;
    public static Item sStoneMattock;
    public static Item cStoneMattock;
    public static Item fStoneMattock;
    public static Item brStoneMattock;
    public static Item wIronMattock;
    public static Item stIronMattock;
    public static Item iIronMattock;
    public static Item dIronMattock;
    public static Item gIronMattock;
    public static Item rIronMattock;
    public static Item oIronMattock;
    public static Item bIronMattock;
    public static Item nIronMattock;
    public static Item glIronMattock;
    public static Item iceIronMattock;
    public static Item sIronMattock;
    public static Item blIronMattock;
    public static Item wDiamondMattock;
    public static Item stDiamondMattock;
    public static Item iDiamondMattock;
    public static Item dDiamondMattock;
    public static Item gDiamondMattock;
    public static Item rDiamondMattock;
    public static Item oDiamondMattock;
    public static Item bDiamondMattock;
    public static Item mDiamondMattock;
    public static Item nDiamondMattock;
    public static Item glDiamondMattock;
    public static Item blDiamondMattock;
    public static Item wGoldMattock;
    public static Item stGoldMattock;
    public static Item gGoldMattock;
    public static Item oGoldMattock;
    public static Item saGoldMattock;
    public static Item bGoldMattock;
    public static Item mGoldMattock;
    public static Item nGoldMattock;
    public static Item glGoldMattock;
    public static Item iceGoldMattock;
    public static Item sGoldMattock;
    public static Item cGoldMattock;
    public static Item fGoldMattock;
    public static Item wRedstoneMattock;
    public static Item stRedstoneMattock;
    public static Item iRedstoneMattock;
    public static Item dRedstoneMattock;
    public static Item rRedstoneMattock;
    public static Item oRedstoneMattock;
    public static Item bRedstoneMattock;
    public static Item mRedstoneMattock;
    public static Item glRedstoneMattock;
    public static Item sRedstoneMattock;
    public static Item blRedstoneMattock;
    public static Item wObsidianMattock;
    public static Item stObsidianMattock;
    public static Item iObsidianMattock;
    public static Item dObsidianMattock;
    public static Item gObsidianMattock;
    public static Item rObsidianMattock;
    public static Item oObsidianMattock;
    public static Item bObsidianMattock;
    public static Item nObsidianMattock;
    public static Item glObsidianMattock;
    public static Item sObsidianMattock;
    public static Item fObsidianMattock;
    public static Item blObsidianMattock;
    public static Item wSandstoneMattock;
    public static Item stSandstoneMattock;
    public static Item oSandstoneMattock;
    public static Item saSandstoneMattock;
    public static Item bSandstoneMattock;
    public static Item pSandstoneMattock;
    public static Item nSandstoneMattock;
    public static Item iceSandstoneMattock;
    public static Item sSandstoneMattock;
    public static Item cSandstoneMattock;
    public static Item fSandstoneMattock;
    public static Item brSandstoneMattock;
    public static Item wBoneMattock;
    public static Item stBoneMattock;
    public static Item iBoneMattock;
    public static Item dBoneMattock;
    public static Item rBoneMattock;
    public static Item oBoneMattock;
    public static Item bBoneMattock;
    public static Item mBoneMattock;
    public static Item nBoneMattock;
    public static Item glBoneMattock;
    public static Item sBoneMattock;
    public static Item cBoneMattock;
    public static Item fBoneMattock;
    public static Item brBoneMattock;
    public static Item blBoneMattock;
    public static Item wPaperMattock;
    public static Item saPaperMattock;
    public static Item bPaperMattock;
    public static Item pPaperMattock;
    public static Item sPaperMattock;
    public static Item cPaperMattock;
    public static Item brPaperMattock;
    public static Item stMossyMattock;
    public static Item dMossyMattock;
    public static Item rMossyMattock;
    public static Item bMossyMattock;
    public static Item mMossyMattock;
    public static Item glMossyMattock;
    public static Item wNetherrackMattock;
    public static Item stNetherrackMattock;
    public static Item iNetherrackMattock;
    public static Item rNetherrackMattock;
    public static Item oNetherrackMattock;
    public static Item saNetherrackMattock;
    public static Item bNetherrackMattock;
    public static Item mNetherrackMattock;
    public static Item nNetherrackMattock;
    public static Item glNetherrackMattock;
    public static Item iceNetherrackMattock;
    public static Item sNetherrackMattock;
    public static Item cNetherrackMattock;
    public static Item fNetherrackMattock;
    public static Item brNetherrackMattock;
    public static Item blNetherrackMattock;
    public static Item wGlowstoneMattock;
    public static Item stGlowstoneMattock;
    public static Item iGlowstoneMattock;
    public static Item dGlowstoneMattock;
    public static Item rGlowstoneMattock;
    public static Item oGlowstoneMattock;
    public static Item bGlowstoneMattock;
    public static Item mGlowstoneMattock;
    public static Item nGlowstoneMattock;
    public static Item glGlowstoneMattock;
    public static Item iceGlowstoneMattock;
    public static Item lGlowstoneMattock;
    public static Item sGlowstoneMattock;
    public static Item blGlowstoneMattock;
    public static Item wIceMattock;
    public static Item stIceMattock;
    public static Item iIceMattock;
    public static Item dIceMattock;
    public static Item gIceMattock;
    public static Item rIceMattock;
    public static Item oIceMattock;
    public static Item saIceMattock;
    public static Item bIceMattock;
    public static Item glIceMattock;
    public static Item iceIceMattock;
    public static Item sIceMattock;
    public static Item cIceMattock;
    public static Item fIceMattock;
    public static Item brIceMattock;
    public static Item dLavaMattock;
    public static Item rLavaMattock;
    public static Item bLavaMattock;
    public static Item nLavaMattock;
    public static Item glLavaMattock;
    public static Item lLavaMattock;
    public static Item blLavaMattock;
    public static Item wSlimeMattock;
    public static Item stSlimeMattock;
    public static Item iSlimeMattock;
    public static Item dSlimeMattock;
    public static Item gSlimeMattock;
    public static Item rSlimeMattock;
    public static Item oSlimeMattock;
    public static Item saSlimeMattock;
    public static Item bSlimeMattock;
    public static Item pSlimeMattock;
    public static Item mSlimeMattock;
    public static Item nSlimeMattock;
    public static Item glSlimeMattock;
    public static Item iceSlimeMattock;
    public static Item lSlimeMattock;
    public static Item sSlimeMattock;
    public static Item cSlimeMattock;
    public static Item fSlimeMattock;
    public static Item brSlimeMattock;
    public static Item blSlimeMattock;
    public static Item wCactusMattock;
    public static Item stCactusMattock;
    public static Item saCactusMattock;
    public static Item bCactusMattock;
    public static Item pCactusMattock;
    public static Item nCactusMattock;
    public static Item sCactusMattock;
    public static Item cCactusMattock;
    public static Item fCactusMattock;
    public static Item brCactusMattock;
    public static Item wFlintMattock;
    public static Item stFlintMattock;
    public static Item iFlintMattock;
    public static Item gFlintMattock;
    public static Item oFlintMattock;
    public static Item saFlintMattock;
    public static Item bFlintMattock;
    public static Item nFlintMattock;
    public static Item iceFlintMattock;
    public static Item sFlintMattock;
    public static Item cFlintMattock;
    public static Item fFlintMattock;
    public static Item brFlintMattock;
    public static Item blFlintMattock;
    public static Item wBrickMattock;
    public static Item stBrickMattock;
    public static Item saBrickMattock;
    public static Item bBrickMattock;
    public static Item pBrickMattock;
    public static Item mBrickMattock;
    public static Item nBrickMattock;
    public static Item iceBrickMattock;
    public static Item sBrickMattock;
    public static Item cBrickMattock;
    public static Item fBrickMattock;
    public static Item brBrickMattock;
    public static Item dBlazeMattock;
    public static Item rBlazeMattock;
    public static Item bBlazeMattock;
    public static Item nBlazeMattock;
    public static Item glBlazeMattock;
    public static Item lBlazeMattock;
    public static Item fBlazeMattock;
    public static Item blBlazeMattock;
    public static Item wWoodHammer;
    public static Item stWoodHammer;
    public static Item saWoodHammer;
    public static Item bWoodHammer;
    public static Item pWoodHammer;
    public static Item nWoodHammer;
    public static Item sWoodHammer;
    public static Item cWoodHammer;
    public static Item fWoodHammer;
    public static Item brWoodHammer;
    public static Item wStoneHammer;
    public static Item stStoneHammer;
    public static Item saStoneHammer;
    public static Item bStoneHammer;
    public static Item pStoneHammer;
    public static Item mStoneHammer;
    public static Item nStoneHammer;
    public static Item iceStoneHammer;
    public static Item sStoneHammer;
    public static Item cStoneHammer;
    public static Item fStoneHammer;
    public static Item brStoneHammer;
    public static Item wIronHammer;
    public static Item stIronHammer;
    public static Item iIronHammer;
    public static Item dIronHammer;
    public static Item gIronHammer;
    public static Item rIronHammer;
    public static Item oIronHammer;
    public static Item bIronHammer;
    public static Item nIronHammer;
    public static Item glIronHammer;
    public static Item iceIronHammer;
    public static Item sIronHammer;
    public static Item blIronHammer;
    public static Item wDiamondHammer;
    public static Item stDiamondHammer;
    public static Item iDiamondHammer;
    public static Item dDiamondHammer;
    public static Item gDiamondHammer;
    public static Item rDiamondHammer;
    public static Item oDiamondHammer;
    public static Item bDiamondHammer;
    public static Item mDiamondHammer;
    public static Item nDiamondHammer;
    public static Item glDiamondHammer;
    public static Item blDiamondHammer;
    public static Item wGoldHammer;
    public static Item stGoldHammer;
    public static Item gGoldHammer;
    public static Item oGoldHammer;
    public static Item saGoldHammer;
    public static Item bGoldHammer;
    public static Item mGoldHammer;
    public static Item nGoldHammer;
    public static Item glGoldHammer;
    public static Item iceGoldHammer;
    public static Item sGoldHammer;
    public static Item cGoldHammer;
    public static Item fGoldHammer;
    public static Item wRedstoneHammer;
    public static Item stRedstoneHammer;
    public static Item iRedstoneHammer;
    public static Item dRedstoneHammer;
    public static Item rRedstoneHammer;
    public static Item oRedstoneHammer;
    public static Item bRedstoneHammer;
    public static Item mRedstoneHammer;
    public static Item glRedstoneHammer;
    public static Item sRedstoneHammer;
    public static Item blRedstoneHammer;
    public static Item wObsidianHammer;
    public static Item stObsidianHammer;
    public static Item iObsidianHammer;
    public static Item dObsidianHammer;
    public static Item gObsidianHammer;
    public static Item rObsidianHammer;
    public static Item oObsidianHammer;
    public static Item bObsidianHammer;
    public static Item nObsidianHammer;
    public static Item glObsidianHammer;
    public static Item sObsidianHammer;
    public static Item fObsidianHammer;
    public static Item blObsidianHammer;
    public static Item wSandstoneHammer;
    public static Item stSandstoneHammer;
    public static Item oSandstoneHammer;
    public static Item saSandstoneHammer;
    public static Item bSandstoneHammer;
    public static Item pSandstoneHammer;
    public static Item nSandstoneHammer;
    public static Item iceSandstoneHammer;
    public static Item sSandstoneHammer;
    public static Item cSandstoneHammer;
    public static Item fSandstoneHammer;
    public static Item brSandstoneHammer;
    public static Item wBoneHammer;
    public static Item stBoneHammer;
    public static Item iBoneHammer;
    public static Item dBoneHammer;
    public static Item rBoneHammer;
    public static Item oBoneHammer;
    public static Item bBoneHammer;
    public static Item mBoneHammer;
    public static Item nBoneHammer;
    public static Item glBoneHammer;
    public static Item sBoneHammer;
    public static Item cBoneHammer;
    public static Item fBoneHammer;
    public static Item brBoneHammer;
    public static Item blBoneHammer;
    public static Item wPaperHammer;
    public static Item saPaperHammer;
    public static Item bPaperHammer;
    public static Item pPaperHammer;
    public static Item sPaperHammer;
    public static Item cPaperHammer;
    public static Item brPaperHammer;
    public static Item stMossyHammer;
    public static Item dMossyHammer;
    public static Item rMossyHammer;
    public static Item bMossyHammer;
    public static Item mMossyHammer;
    public static Item glMossyHammer;
    public static Item wNetherrackHammer;
    public static Item stNetherrackHammer;
    public static Item iNetherrackHammer;
    public static Item rNetherrackHammer;
    public static Item oNetherrackHammer;
    public static Item saNetherrackHammer;
    public static Item bNetherrackHammer;
    public static Item mNetherrackHammer;
    public static Item nNetherrackHammer;
    public static Item glNetherrackHammer;
    public static Item iceNetherrackHammer;
    public static Item sNetherrackHammer;
    public static Item cNetherrackHammer;
    public static Item fNetherrackHammer;
    public static Item brNetherrackHammer;
    public static Item blNetherrackHammer;
    public static Item wGlowstoneHammer;
    public static Item stGlowstoneHammer;
    public static Item iGlowstoneHammer;
    public static Item dGlowstoneHammer;
    public static Item rGlowstoneHammer;
    public static Item oGlowstoneHammer;
    public static Item bGlowstoneHammer;
    public static Item mGlowstoneHammer;
    public static Item nGlowstoneHammer;
    public static Item glGlowstoneHammer;
    public static Item iceGlowstoneHammer;
    public static Item lGlowstoneHammer;
    public static Item sGlowstoneHammer;
    public static Item blGlowstoneHammer;
    public static Item wIceHammer;
    public static Item stIceHammer;
    public static Item iIceHammer;
    public static Item dIceHammer;
    public static Item gIceHammer;
    public static Item rIceHammer;
    public static Item oIceHammer;
    public static Item saIceHammer;
    public static Item bIceHammer;
    public static Item glIceHammer;
    public static Item iceIceHammer;
    public static Item sIceHammer;
    public static Item cIceHammer;
    public static Item fIceHammer;
    public static Item brIceHammer;
    public static Item dLavaHammer;
    public static Item rLavaHammer;
    public static Item bLavaHammer;
    public static Item nLavaHammer;
    public static Item glLavaHammer;
    public static Item lLavaHammer;
    public static Item blLavaHammer;
    public static Item wSlimeHammer;
    public static Item stSlimeHammer;
    public static Item iSlimeHammer;
    public static Item dSlimeHammer;
    public static Item gSlimeHammer;
    public static Item rSlimeHammer;
    public static Item oSlimeHammer;
    public static Item saSlimeHammer;
    public static Item bSlimeHammer;
    public static Item pSlimeHammer;
    public static Item mSlimeHammer;
    public static Item nSlimeHammer;
    public static Item glSlimeHammer;
    public static Item iceSlimeHammer;
    public static Item lSlimeHammer;
    public static Item sSlimeHammer;
    public static Item cSlimeHammer;
    public static Item fSlimeHammer;
    public static Item brSlimeHammer;
    public static Item blSlimeHammer;
    public static Item wCactusHammer;
    public static Item stCactusHammer;
    public static Item saCactusHammer;
    public static Item bCactusHammer;
    public static Item pCactusHammer;
    public static Item nCactusHammer;
    public static Item sCactusHammer;
    public static Item cCactusHammer;
    public static Item fCactusHammer;
    public static Item brCactusHammer;
    public static Item wFlintHammer;
    public static Item stFlintHammer;
    public static Item iFlintHammer;
    public static Item gFlintHammer;
    public static Item oFlintHammer;
    public static Item saFlintHammer;
    public static Item bFlintHammer;
    public static Item nFlintHammer;
    public static Item iceFlintHammer;
    public static Item sFlintHammer;
    public static Item cFlintHammer;
    public static Item fFlintHammer;
    public static Item brFlintHammer;
    public static Item blFlintHammer;
    public static Item wBrickHammer;
    public static Item stBrickHammer;
    public static Item saBrickHammer;
    public static Item bBrickHammer;
    public static Item pBrickHammer;
    public static Item mBrickHammer;
    public static Item nBrickHammer;
    public static Item iceBrickHammer;
    public static Item sBrickHammer;
    public static Item cBrickHammer;
    public static Item fBrickHammer;
    public static Item brBrickHammer;
    public static Item dBlazeHammer;
    public static Item rBlazeHammer;
    public static Item bBlazeHammer;
    public static Item nBlazeHammer;
    public static Item glBlazeHammer;
    public static Item lBlazeHammer;
    public static Item fBlazeHammer;
    public static Item blBlazeHammer;
    public static InfiProps props;

    public String getVersion()
    {
        return "v1.0.7 Freedom";
    }

    public void load()
    {
    	checkInitialized();
    }
    
    public void checkInitialized()
    {
    	try
        {
            Class infi = Class.forName("mod_InfiTools");
            mod_InfiTools.getInitialized();
        }
    	catch (Throwable throwable)
        {
            System.out.println("mod_InfiHybrids initalization failed! Reason:");
            System.out.println(throwable);
        }
    }

    public static InfiProps getProps(InfiProps infiprops)
    {
        woodIceAxeID = infiprops.readInt("woodIceAxeID");
        stoneIceAxeID = infiprops.readInt("stoneIceAxeID");
        ironIceAxeID = infiprops.readInt("ironIceAxeID");
        diamondIceAxeID = infiprops.readInt("diamondIceAxeID");
        goldIceAxeID = infiprops.readInt("goldIceAxeID");
        redstoneIceAxeID = infiprops.readInt("redstoneIceAxeID");
        obsidianIceAxeID = infiprops.readInt("obsidianIceAxeID");
        sandstoneIceAxeID = infiprops.readInt("sandstoneIceAxeID");
        boneIceAxeID = infiprops.readInt("boneIceAxeID");
        paperIceAxeID = infiprops.readInt("paperIceAxeID");
        mossyIceAxeID = infiprops.readInt("mossyIceAxeID");
        netherrackIceAxeID = infiprops.readInt("netherrackIceAxeID");
        glowstoneIceAxeID = infiprops.readInt("glowstoneIceAxeID");
        iceIceAxeID = infiprops.readInt("iceIceAxeID");
        lavaIceAxeID = infiprops.readInt("lavaIceAxeID");
        slimeIceAxeID = infiprops.readInt("slimeIceAxeID");
        cactusIceAxeID = infiprops.readInt("cactusIceAxeID");
        flintIceAxeID = infiprops.readInt("flintIceAxeID");
        brickIceAxeID = infiprops.readInt("brickIceAxeID");
        blazeIceAxeID = infiprops.readInt("blazeIceAxeID");
        woodMattockID = infiprops.readInt("woodMattockID");
        stoneMattockID = infiprops.readInt("stoneMattockID");
        ironMattockID = infiprops.readInt("ironMattockID");
        diamondMattockID = infiprops.readInt("diamondMattockID");
        goldMattockID = infiprops.readInt("goldMattockID");
        redstoneMattockID = infiprops.readInt("redstoneMattockID");
        obsidianMattockID = infiprops.readInt("obsidianMattockID");
        sandstoneMattockID = infiprops.readInt("sandstoneMattockID");
        boneMattockID = infiprops.readInt("boneMattockID");
        paperMattockID = infiprops.readInt("paperMattockID");
        mossyMattockID = infiprops.readInt("mossyMattockID");
        netherrackMattockID = infiprops.readInt("netherrackMattockID");
        glowstoneMattockID = infiprops.readInt("glowstoneMattockID");
        iceMattockID = infiprops.readInt("iceMattockID");
        lavaMattockID = infiprops.readInt("lavaMattockID");
        slimeMattockID = infiprops.readInt("slimeMattockID");
        cactusMattockID = infiprops.readInt("cactusMattockID");
        flintMattockID = infiprops.readInt("flintMattockID");
        brickMattockID = infiprops.readInt("brickMattockID");
        blazeMattockID = infiprops.readInt("blazeMattockID");
        woodHammerID = infiprops.readInt("woodHammerID");
        stoneHammerID = infiprops.readInt("stoneHammerID");
        ironHammerID = infiprops.readInt("ironHammerID");
        diamondHammerID = infiprops.readInt("diamondHammerID");
        goldHammerID = infiprops.readInt("goldHammerID");
        redstoneHammerID = infiprops.readInt("redstoneHammerID");
        obsidianHammerID = infiprops.readInt("obsidianHammerID");
        sandstoneHammerID = infiprops.readInt("sandstoneHammerID");
        boneHammerID = infiprops.readInt("boneHammerID");
        paperHammerID = infiprops.readInt("paperHammerID");
        mossyHammerID = infiprops.readInt("mossyHammerID");
        netherrackHammerID = infiprops.readInt("netherrackHammerID");
        glowstoneHammerID = infiprops.readInt("glowstoneHammerID");
        iceHammerID = infiprops.readInt("iceHammerID");
        lavaHammerID = infiprops.readInt("lavaHammerID");
        slimeHammerID = infiprops.readInt("slimeHammerID");
        cactusHammerID = infiprops.readInt("cactusHammerID");
        flintHammerID = infiprops.readInt("flintHammerID");
        brickHammerID = infiprops.readInt("brickHammerID");
        blazeHammerID = infiprops.readInt("blazeHammerID");
        woodScytheID = infiprops.readInt("woodScytheID");
        stoneScytheID = infiprops.readInt("stoneScytheID");
        ironScytheID = infiprops.readInt("ironScytheID");
        diamondScytheID = infiprops.readInt("diamondScytheID");
        goldScytheID = infiprops.readInt("goldScytheID");
        redstoneScytheID = infiprops.readInt("redstoneScytheID");
        obsidianScytheID = infiprops.readInt("obsidianScytheID");
        sandstoneScytheID = infiprops.readInt("sandstoneScytheID");
        boneScytheID = infiprops.readInt("boneScytheID");
        paperScytheID = infiprops.readInt("paperScytheID");
        mossyScytheID = infiprops.readInt("mossyScytheID");
        netherrackScytheID = infiprops.readInt("netherrackScytheID");
        glowstoneScytheID = infiprops.readInt("glowstoneScytheID");
        iceScytheID = infiprops.readInt("iceScytheID");
        lavaScytheID = infiprops.readInt("lavaScytheID");
        slimeScytheID = infiprops.readInt("slimeScytheID");
        cactusScytheID = infiprops.readInt("cactusScytheID");
        flintScytheID = infiprops.readInt("flintScytheID");
        brickScytheID = infiprops.readInt("brickScytheID");
        blazeScytheID = infiprops.readInt("blazeScytheID");
        return infiprops;
    }

    public static InfiProps InitProps(InfiProps infiprops)
    {
        infiprops.accessInt("woodIceAxeID", 15901);
        infiprops.accessInt("stoneIceAxeID", 15914);
        infiprops.accessInt("ironIceAxeID", 15929);
        infiprops.accessInt("diamondIceAxeID", 15945);
        infiprops.accessInt("goldIceAxeID", 15960);
        infiprops.accessInt("redstoneIceAxeID", 15976);
        infiprops.accessInt("obsidianIceAxeID", 15990);
        infiprops.accessInt("sandstoneIceAxeID", 16006);
        infiprops.accessInt("boneIceAxeID", 16020);
        infiprops.accessInt("paperIceAxeID", 16036);
        infiprops.accessInt("mossyIceAxeID", 16046);
        infiprops.accessInt("netherrackIceAxeID", 16055);
        infiprops.accessInt("glowstoneIceAxeID", 16073);
        infiprops.accessInt("iceIceAxeID", 16090);
        infiprops.accessInt("lavaIceAxeID", 16108);
        infiprops.accessInt("slimeIceAxeID", 16118);
        infiprops.accessInt("cactusIceAxeID", 16141);
        infiprops.accessInt("flintIceAxeID", 16154);
        infiprops.accessInt("brickIceAxeID", 16172);
        infiprops.accessInt("blazeIceAxeID", 16184);
        infiprops.accessInt("woodMattockID", 16201);
        infiprops.accessInt("stoneMattockID", 16214);
        infiprops.accessInt("ironMattockID", 16229);
        infiprops.accessInt("diamondMattockID", 16245);
        infiprops.accessInt("goldMattockID", 16260);
        infiprops.accessInt("redstoneMattockID", 16276);
        infiprops.accessInt("obsidianMattockID", 16290);
        infiprops.accessInt("sandstoneMattockID", 16306);
        infiprops.accessInt("boneMattockID", 16320);
        infiprops.accessInt("paperMattockID", 16336);
        infiprops.accessInt("mossyMattockID", 16346);
        infiprops.accessInt("netherrackMattockID", 16355);
        infiprops.accessInt("glowstoneMattockID", 16373);
        infiprops.accessInt("iceMattockID", 16390);
        infiprops.accessInt("lavaMattockID", 16408);
        infiprops.accessInt("slimeMattockID", 16418);
        infiprops.accessInt("cactusMattockID", 16441);
        infiprops.accessInt("flintMattockID", 16454);
        infiprops.accessInt("brickMattockID", 16472);
        infiprops.accessInt("blazeMattockID", 16484);
        infiprops.accessInt("woodHammerID", 16501);
        infiprops.accessInt("stoneHammerID", 16514);
        infiprops.accessInt("ironHammerID", 16529);
        infiprops.accessInt("diamondHammerID", 16545);
        infiprops.accessInt("goldHammerID", 16560);
        infiprops.accessInt("redstoneHammerID", 16576);
        infiprops.accessInt("obsidianHammerID", 16590);
        infiprops.accessInt("sandstoneHammerID", 16606);
        infiprops.accessInt("boneHammerID", 16620);
        infiprops.accessInt("paperHammerID", 16636);
        infiprops.accessInt("mossyHammerID", 16646);
        infiprops.accessInt("netherrackHammerID", 16655);
        infiprops.accessInt("glowstoneHammerID", 16673);
        infiprops.accessInt("iceHammerID", 16690);
        infiprops.accessInt("lavaHammerID", 16708);
        infiprops.accessInt("slimeHammerID", 16718);
        infiprops.accessInt("cactusHammerID", 16741);
        infiprops.accessInt("flintHammerID", 16754);
        infiprops.accessInt("brickHammerID", 16772);
        infiprops.accessInt("blazeHammerID", 16784);
        infiprops.accessInt("woodScytheID", 16801);
        infiprops.accessInt("stoneScytheID", 16814);
        infiprops.accessInt("ironScytheID", 16829);
        infiprops.accessInt("diamondScytheID", 16845);
        infiprops.accessInt("goldScytheID", 16860);
        infiprops.accessInt("redstoneScytheID", 16876);
        infiprops.accessInt("obsidianScytheID", 16890);
        infiprops.accessInt("sandstoneScytheID", 16906);
        infiprops.accessInt("boneScytheID", 16920);
        infiprops.accessInt("paperScytheID", 16936);
        infiprops.accessInt("mossyScytheID", 16946);
        infiprops.accessInt("netherrackScytheID", 16955);
        infiprops.accessInt("glowstoneScytheID", 16973);
        infiprops.accessInt("iceScytheID", 16990);
        infiprops.accessInt("lavaScytheID", 17008);
        infiprops.accessInt("slimeScytheID", 17018);
        infiprops.accessInt("cactusScytheID", 17041);
        infiprops.accessInt("flintScytheID", 17054);
        infiprops.accessInt("brickScytheID", 17072);
        infiprops.accessInt("blazeScytheID", 17084);
        return infiprops;
    }

    public mod_InfiHybrids()
    {
        //ModLoader.addName(treeRoot, "Tree Root");
        ModLoader.addRecipe(new ItemStack(Block.sapling, 1), new Object[]
                {
                    "l", "r", Character.valueOf('l'), Block.leaves, Character.valueOf('r'), treeRoot
                });
        InfiRecipeIceAxes.recipeStorm();
        InfiRecipeMattocks.recipeStorm();
        InfiRecipeHammers.recipeStorm();
    }

    public int addFuel(int i, int j)
    {
        if (i == treeRoot.shiftedIndex)
        {
            return 100;
        } else
        {
        	return 0;
        }
    }
    
    public static File getMinecraftDir()
    {
        return new File(".");
    }

    static
    {
        treeRootID = 27498;
        wDur = 59;
        wMod = 1.0F;
        wDam = 0;
        wLevel = 0;
        wSpeed = 2.0F;
        stDur = 131;
        stMod = 1.2F;
        stDam = 1;
        stLevel = 1;
        stSpeed = 4F;
        iDur = 250;
        iMod = 1.5F;
        iDam = 2;
        iLevel = 2;
        iSpeed = 6F;
        dDur = 1561;
        dMod = 2.0F;
        dDam = 3;
        dLevel = 3;
        dSpeed = 8F;
        gDur = 32;
        gMod = 0.5F;
        gDam = 0;
        gLevel = 0;
        gSpeed = 12F;
        rDur = 71;
        rMod = 1.0F;
        rDam = 3;
        rLevel = 3;
        rSpeed = 12F;
        oDur = 191;
        oMod = 1.8F;
        oDam = 2;
        oLevel = 3;
        oSpeed = 8F;
        saDur = 48;
        saMod = 0.9F;
        saDam = 2;
        saLevel = 0;
        saSpeed = 2.5F;
        bDur = 200;
        bMod = 1.2F;
        bDam = 2;
        bLevel = 1;
        bSpeed = 7F;
        pDur = 131;
        pMod = 1.0F;
        pDam = 0;
        pLevel = 1;
        pSpeed = 1.0F;
        mDur = 1000;
        mMod = 1.8F;
        mDam = 3;
        mLevel = 4;
        mSpeed = 10F;
        nDur = 131;
        nMod = 1.2F;
        nDam = 1;
        nLevel = 1;
        nSpeed = 4F;
        glDur = 800;
        glMod = 1.3F;
        glDam = 1;
        glLevel = 2;
        glSpeed = 6F;
        iceDur = 122;
        iceMod = 1.5F;
        iceDam = 1;
        iceLevel = 0;
        iceSpeed = 4F;
        lDur = 636;
        lMod = 2.4F;
        lDam = 1;
        lLevel = 3;
        lSpeed = 10F;
        sDur = 9001;
        sMod = 1.0F;
        sDam = 0;
        sLevel = 6;
        sSpeed = 1.0F;
        cDur = 150;
        cMod = 1.2F;
        cDam = 2;
        cLevel = 1;
        cSpeed = 5F;
        fDur = 75;
        fMod = 1.2F;
        fDam = 2;
        fLevel = 1;
        fSpeed = 5F;
        brDur = 82;
        brMod = 1.0F;
        brDam = 1;
        brLevel = 1;
        brSpeed = 4F;
        blDur = 1231;
        blMod = 1.58F;
        blDam = 5;
        blLevel = 4;
        blSpeed = 4F;
        wType = 1;
        stType = 2;
        iType = 3;
        dType = 4;
        gType = 5;
        rType = 6;
        oType = 7;
        saType = 8;
        bType = 9;
        pType = 10;
        mType = 11;
        nType = 12;
        glType = 13;
        iceType = 14;
        lType = 15;
        sType = 16;
        cType = 17;
        fType = 18;
        brType = 19;
        blType = 20;
        
        File me = new File( (new StringBuilder().append(getMinecraftDir().getPath())
        		.append('/').append("mDiyo").toString() ) );
        me.mkdir();
        props = new InfiProps((new File((new StringBuilder()).append(getMinecraftDir().getPath())
        		.append('/').append("mDiyo").append('/').append("InfiHybrids.cfg").toString())).getPath());
        props = InitProps(props);
        getProps(props);
        treeRoot = (new InfiTexture(treeRootID, "/infitools/infitems.png")).setIconCoord(6, 1).setItemName("treeRoot");
        wWoodIceAxe = (new InfiToolIceAxe(woodIceAxeID + 0, wLevel, (int)((float)wDur * wMod), wSpeed, wDam, wType, wType)).setItemName("wWoodIceAxe");
        stWoodIceAxe = (new InfiToolIceAxe(woodIceAxeID + 1, wLevel, (int)((float)wDur * stMod), wSpeed, wDam, wType, stType)).setItemName("stWoodIceAxe");
        saWoodIceAxe = (new InfiToolIceAxe(woodIceAxeID + 2, wLevel, (int)((float)wDur * saMod), wSpeed, wDam, wType, saType)).setItemName("saWoodIceAxe");
        bWoodIceAxe = (new InfiToolIceAxe(woodIceAxeID + 3, wLevel, (int)((float)wDur * bMod), wSpeed, wDam, wType, bType)).setItemName("bWoodIceAxe");
        pWoodIceAxe = (new InfiToolIceAxe(woodIceAxeID + 4, wLevel, (int)((float)wDur * pMod), wSpeed, wDam, wType, pType)).setItemName("pWoodIceAxe");
        nWoodIceAxe = (new InfiToolIceAxe(woodIceAxeID + 5, wLevel, (int)((float)wDur * nMod), wSpeed, wDam, wType, nType)).setItemName("nWoodIceAxe");
        sWoodIceAxe = (new InfiToolIceAxe(woodIceAxeID + 6, wLevel, (int)((float)wDur * sMod), wSpeed, wDam, wType, sType)).setItemName("sWoodIceAxe");
        cWoodIceAxe = (new InfiToolIceAxe(woodIceAxeID + 7, wLevel, (int)((float)wDur * cMod), wSpeed, wDam, wType, cType)).setItemName("cWoodIceAxe");
        fWoodIceAxe = (new InfiToolIceAxe(woodIceAxeID + 8, wLevel, (int)((float)wDur * fMod), wSpeed, wDam, wType, fType)).setItemName("fWoodIceAxe");
        brWoodIceAxe = (new InfiToolIceAxe(woodIceAxeID + 9, wLevel, (int)((float)wDur * brMod), wSpeed, wDam, wType, brType)).setItemName("brWoodIceAxe");
        wStoneIceAxe = (new InfiToolIceAxe(stoneIceAxeID + 0, stLevel, (int)((float)stDur * wMod), stSpeed, stDam, stType, wType)).setItemName("wStoneIceAxe");
        stStoneIceAxe = (new InfiToolIceAxe(stoneIceAxeID + 1, stLevel, (int)((float)stDur * stMod), stSpeed, stDam, stType, stType)).setItemName("stStoneIceAxe");
        saStoneIceAxe = (new InfiToolIceAxe(stoneIceAxeID + 2, stLevel, (int)((float)stDur * saMod), stSpeed, stDam, stType, saType)).setItemName("saStoneIceAxe");
        bStoneIceAxe = (new InfiToolIceAxe(stoneIceAxeID + 3, stLevel, (int)((float)stDur * bMod), stSpeed, stDam, stType, bType)).setItemName("bStoneIceAxe");
        pStoneIceAxe = (new InfiToolIceAxe(stoneIceAxeID + 4, stLevel, (int)((float)stDur * pMod), stSpeed, stDam, stType, pType)).setItemName("pStoneIceAxe");
        mStoneIceAxe = (new InfiToolIceAxe(stoneIceAxeID + 5, stLevel, (int)((float)stDur * mMod), stSpeed, stDam, stType, mType)).setItemName("mStoneIceAxe");
        nStoneIceAxe = (new InfiToolIceAxe(stoneIceAxeID + 6, stLevel, (int)((float)stDur * nMod), stSpeed, stDam, stType, nType)).setItemName("nStoneIceAxe");
        iceStoneIceAxe = (new InfiToolIceAxe(stoneIceAxeID + 7, stLevel, (int)((float)stDur * iceMod), stSpeed, stDam, stType, iceType)).setItemName("iceStoneIceAxe");
        sStoneIceAxe = (new InfiToolIceAxe(stoneIceAxeID + 8, stLevel, (int)((float)stDur * sMod), stSpeed, stDam, stType, sType)).setItemName("sStoneIceAxe");
        cStoneIceAxe = (new InfiToolIceAxe(stoneIceAxeID + 9, stLevel, (int)((float)stDur * cMod), stSpeed, stDam, stType, cType)).setItemName("cStoneIceAxe");
        fStoneIceAxe = (new InfiToolIceAxe(stoneIceAxeID + 10, stLevel, (int)((float)stDur * fMod), stSpeed, stDam, stType, fType)).setItemName("fStoneIceAxe");
        brStoneIceAxe = (new InfiToolIceAxe(stoneIceAxeID + 11, stLevel, (int)((float)stDur * brMod), stSpeed, stDam, stType, brType)).setItemName("brStoneIceAxe");
        wIronIceAxe = (new InfiToolIceAxe(ironIceAxeID + 0, iLevel, (int)((float)iDur * wMod), iSpeed, iDam, iType, wType)).setItemName("wIronIceAxe");
        stIronIceAxe = (new InfiToolIceAxe(ironIceAxeID + 1, iLevel, (int)((float)iDur * stMod), iSpeed, iDam, iType, stType)).setItemName("stIronIceAxe");
        iIronIceAxe = (new InfiToolIceAxe(ironIceAxeID + 2, iLevel, (int)((float)iDur * iMod), iSpeed, iDam, iType, iType)).setItemName("iIronIceAxe");
        dIronIceAxe = (new InfiToolIceAxe(ironIceAxeID + 3, iLevel, (int)((float)iDur * dMod), iSpeed, iDam, iType, dType)).setItemName("dIronIceAxe");
        gIronIceAxe = (new InfiToolIceAxe(ironIceAxeID + 4, iLevel, (int)((float)iDur * gMod), iSpeed, iDam, iType, gType)).setItemName("gIronIceAxe");
        rIronIceAxe = (new InfiToolIceAxe(ironIceAxeID + 5, iLevel, (int)((float)iDur * rMod), iSpeed, iDam, iType, rType)).setItemName("rIronIceAxe");
        oIronIceAxe = (new InfiToolIceAxe(ironIceAxeID + 6, iLevel, (int)((float)iDur * oMod), iSpeed, iDam, iType, oType)).setItemName("oIronIceAxe");
        bIronIceAxe = (new InfiToolIceAxe(ironIceAxeID + 7, iLevel, (int)((float)iDur * bMod), iSpeed, iDam, iType, bType)).setItemName("bIronIceAxe");
        nIronIceAxe = (new InfiToolIceAxe(ironIceAxeID + 8, iLevel, (int)((float)iDur * nMod), iSpeed, iDam, iType, nType)).setItemName("nIronIceAxe");
        glIronIceAxe = (new InfiToolIceAxe(ironIceAxeID + 9, iLevel, (int)((float)iDur * glMod), iSpeed, iDam, iType, glType)).setItemName("glIronIceAxe");
        iceIronIceAxe = (new InfiToolIceAxe(ironIceAxeID + 10, iLevel, (int)((float)iDur * iceMod), iSpeed, iDam, iType, iceType)).setItemName("iceIronIceAxe");
        sIronIceAxe = (new InfiToolIceAxe(ironIceAxeID + 11, iLevel, (int)((float)iDur * sMod), iSpeed, iDam, iType, sType)).setItemName("sIronIceAxe");
        blIronIceAxe = (new InfiToolIceAxe(ironIceAxeID + 12, iLevel, (int)((float)iDur * blMod), iSpeed, iDam, iType, blType)).setItemName("blIronIceAxe");
        wDiamondIceAxe = (new InfiToolIceAxe(diamondIceAxeID + 0, dLevel, (int)((float)dDur * wMod), dSpeed, dDam, dType, wType)).setItemName("wDiamondIceAxe");
        stDiamondIceAxe = (new InfiToolIceAxe(diamondIceAxeID + 1, dLevel, (int)((float)dDur * stMod), dSpeed, dDam, dType, stType)).setItemName("stDiamondIceAxe");
        iDiamondIceAxe = (new InfiToolIceAxe(diamondIceAxeID + 2, dLevel, (int)((float)dDur * iMod), dSpeed, dDam, dType, iType)).setItemName("iDiamondIceAxe");
        dDiamondIceAxe = (new InfiToolIceAxe(diamondIceAxeID + 3, dLevel, (int)((float)dDur * dMod), dSpeed, dDam, dType, dType)).setItemName("dDiamondIceAxe");
        gDiamondIceAxe = (new InfiToolIceAxe(diamondIceAxeID + 4, dLevel, (int)((float)dDur * gMod), dSpeed, dDam, dType, gType)).setItemName("gDiamondIceAxe");
        rDiamondIceAxe = (new InfiToolIceAxe(diamondIceAxeID + 5, dLevel, (int)((float)dDur * rMod), dSpeed, dDam, dType, rType)).setItemName("rDiamondIceAxe");
        oDiamondIceAxe = (new InfiToolIceAxe(diamondIceAxeID + 6, dLevel, (int)((float)dDur * oMod), dSpeed, dDam, dType, oType)).setItemName("oDiamondIceAxe");
        bDiamondIceAxe = (new InfiToolIceAxe(diamondIceAxeID + 7, dLevel, (int)((float)dDur * bMod), dSpeed, dDam, dType, bType)).setItemName("bDiamondIceAxe");
        mDiamondIceAxe = (new InfiToolIceAxe(diamondIceAxeID + 8, dLevel, (int)((float)dDur * mMod), dSpeed, dDam, dType, mType)).setItemName("mDiamondIceAxe");
        nDiamondIceAxe = (new InfiToolIceAxe(diamondIceAxeID + 9, dLevel, (int)((float)dDur * nMod), dSpeed, dDam, dType, nType)).setItemName("nDiamondIceAxe");
        glDiamondIceAxe = (new InfiToolIceAxe(diamondIceAxeID + 10, dLevel, (int)((float)dDur * glMod), dSpeed, dDam, dType, glType)).setItemName("glDiamondIceAxe");
        blDiamondIceAxe = (new InfiToolIceAxe(diamondIceAxeID + 11, dLevel, (int)((float)dDur * blMod), dSpeed, dDam, dType, blType)).setItemName("blDiamondIceAxe");
        wGoldIceAxe = (new InfiToolIceAxe(goldIceAxeID + 0, gLevel, (int)((float)gDur * wMod), gSpeed, gDam, gType, wType)).setItemName("wGoldIceAxe");
        stGoldIceAxe = (new InfiToolIceAxe(goldIceAxeID + 1, gLevel, (int)((float)gDur * stMod), gSpeed, gDam, gType, stType)).setItemName("stGoldIceAxe");
        gGoldIceAxe = (new InfiToolIceAxe(goldIceAxeID + 2, gLevel, (int)((float)gDur * gMod), gSpeed, gDam, gType, gType)).setItemName("gGoldIceAxe");
        oGoldIceAxe = (new InfiToolIceAxe(goldIceAxeID + 3, gLevel, (int)((float)gDur * oMod), gSpeed, gDam, gType, oType)).setItemName("oGoldIceAxe");
        saGoldIceAxe = (new InfiToolIceAxe(goldIceAxeID + 4, gLevel, (int)((float)gDur * saMod), gSpeed, gDam, gType, saType)).setItemName("saGoldIceAxe");
        bGoldIceAxe = (new InfiToolIceAxe(goldIceAxeID + 5, gLevel, (int)((float)gDur * bMod), gSpeed, gDam, gType, bType)).setItemName("bGoldIceAxe");
        mGoldIceAxe = (new InfiToolIceAxe(goldIceAxeID + 6, gLevel, (int)((float)gDur * mMod), gSpeed, gDam, gType, mType)).setItemName("mGoldIceAxe");
        nGoldIceAxe = (new InfiToolIceAxe(goldIceAxeID + 7, gLevel, (int)((float)gDur * nMod), gSpeed, gDam, gType, nType)).setItemName("nGoldIceAxe");
        glGoldIceAxe = (new InfiToolIceAxe(goldIceAxeID + 8, gLevel, (int)((float)gDur * glMod), gSpeed, gDam, gType, glType)).setItemName("glGoldIceAxe");
        iceGoldIceAxe = (new InfiToolIceAxe(goldIceAxeID + 9, gLevel, (int)((float)gDur * iceMod), gSpeed, gDam, gType, iceType)).setItemName("iceGoldIceAxe");
        sGoldIceAxe = (new InfiToolIceAxe(goldIceAxeID + 10, gLevel, (int)((float)gDur * sMod), gSpeed, gDam, gType, sType)).setItemName("sGoldIceAxe");
        fGoldIceAxe = (new InfiToolIceAxe(goldIceAxeID + 11, gLevel, (int)((float)gDur * fMod), gSpeed, gDam, gType, fType)).setItemName("fGoldIceAxe");
        wRedstoneIceAxe = (new InfiToolIceAxe(redstoneIceAxeID + 0, rLevel, (int)((float)rDur * wMod), rSpeed, rDam, rType, wType)).setItemName("wRedstoneIceAxe");
        stRedstoneIceAxe = (new InfiToolIceAxe(redstoneIceAxeID + 1, rLevel, (int)((float)rDur * stMod), rSpeed, rDam, rType, stType)).setItemName("stRedstoneIceAxe");
        iRedstoneIceAxe = (new InfiToolIceAxe(redstoneIceAxeID + 2, rLevel, (int)((float)rDur * iMod), rSpeed, rDam, rType, iType)).setItemName("iRedstoneIceAxe");
        dRedstoneIceAxe = (new InfiToolIceAxe(redstoneIceAxeID + 3, rLevel, (int)((float)rDur * dMod), rSpeed, rDam, rType, dType)).setItemName("dRedstoneIceAxe");
        rRedstoneIceAxe = (new InfiToolIceAxe(redstoneIceAxeID + 4, rLevel, (int)((float)rDur * rMod), rSpeed, rDam, rType, rType)).setItemName("rRedstoneIceAxe");
        oRedstoneIceAxe = (new InfiToolIceAxe(redstoneIceAxeID + 5, rLevel, (int)((float)rDur * oMod), rSpeed, rDam, rType, oType)).setItemName("oRedstoneIceAxe");
        bRedstoneIceAxe = (new InfiToolIceAxe(redstoneIceAxeID + 6, rLevel, (int)((float)rDur * bMod), rSpeed, rDam, rType, bType)).setItemName("bRedstoneIceAxe");
        mRedstoneIceAxe = (new InfiToolIceAxe(redstoneIceAxeID + 7, rLevel, (int)((float)rDur * mMod), rSpeed, rDam, rType, mType)).setItemName("mRedstoneIceAxe");
        glRedstoneIceAxe = (new InfiToolIceAxe(redstoneIceAxeID + 8, rLevel, (int)((float)rDur * glMod), rSpeed, rDam, rType, glType)).setItemName("glRedstoneIceAxe");
        sRedstoneIceAxe = (new InfiToolIceAxe(redstoneIceAxeID + 9, rLevel, (int)((float)rDur * sMod), rSpeed, rDam, rType, sType)).setItemName("sRedstoneIceAxe");
        blRedstoneIceAxe = (new InfiToolIceAxe(redstoneIceAxeID + 10, rLevel, (int)((float)rDur * blMod), rSpeed, rDam, rType, blType)).setItemName("blRedstoneIceAxe");
        wObsidianIceAxe = (new InfiToolIceAxe(obsidianIceAxeID + 0, oLevel, (int)((float)oDur * wMod), oSpeed, oDam, oType, wType)).setItemName("wObsidianIceAxe");
        stObsidianIceAxe = (new InfiToolIceAxe(obsidianIceAxeID + 1, oLevel, (int)((float)oDur * stMod), oSpeed, oDam, oType, stType)).setItemName("stObsidianIceAxe");
        iObsidianIceAxe = (new InfiToolIceAxe(obsidianIceAxeID + 2, oLevel, (int)((float)oDur * iMod), oSpeed, oDam, oType, iType)).setItemName("iObsidianIceAxe");
        dObsidianIceAxe = (new InfiToolIceAxe(obsidianIceAxeID + 3, oLevel, (int)((float)oDur * dMod), oSpeed, oDam, oType, dType)).setItemName("dObsidianIceAxe");
        gObsidianIceAxe = (new InfiToolIceAxe(obsidianIceAxeID + 4, oLevel, (int)((float)oDur * gMod), oSpeed, oDam, oType, gType)).setItemName("gObsidianIceAxe");
        rObsidianIceAxe = (new InfiToolIceAxe(obsidianIceAxeID + 5, oLevel, (int)((float)oDur * rMod), oSpeed, oDam, oType, rType)).setItemName("rObsidianIceAxe");
        oObsidianIceAxe = (new InfiToolIceAxe(obsidianIceAxeID + 6, oLevel, (int)((float)oDur * oMod), oSpeed, oDam, oType, oType)).setItemName("oObsidianIceAxe");
        bObsidianIceAxe = (new InfiToolIceAxe(obsidianIceAxeID + 7, oLevel, (int)((float)oDur * bMod), oSpeed, oDam, oType, bType)).setItemName("bObsidianIceAxe");
        nObsidianIceAxe = (new InfiToolIceAxe(obsidianIceAxeID + 8, oLevel, (int)((float)oDur * nMod), oSpeed, oDam, oType, nType)).setItemName("nObsidianIceAxe");
        glObsidianIceAxe = (new InfiToolIceAxe(obsidianIceAxeID + 9, oLevel, (int)((float)oDur * glMod), oSpeed, oDam, oType, glType)).setItemName("glObsidianIceAxe");
        sObsidianIceAxe = (new InfiToolIceAxe(obsidianIceAxeID + 10, oLevel, (int)((float)oDur * sMod), oSpeed, oDam, oType, sType)).setItemName("sObsidianIceAxe");
        fObsidianIceAxe = (new InfiToolIceAxe(obsidianIceAxeID + 11, oLevel, (int)((float)oDur * fMod), oSpeed, oDam, oType, fType)).setItemName("fObsidianIceAxe");
        blObsidianIceAxe = (new InfiToolIceAxe(obsidianIceAxeID + 12, oLevel, (int)((float)oDur * blMod), oSpeed, oDam, oType, blType)).setItemName("blObsidianIceAxe");
        wSandstoneIceAxe = (new InfiToolIceAxe(sandstoneIceAxeID + 0, saLevel, (int)((float)saDur * wMod), saSpeed, saDam, saType, wType)).setItemName("wSandstoneIceAxe");
        stSandstoneIceAxe = (new InfiToolIceAxe(sandstoneIceAxeID + 1, saLevel, (int)((float)saDur * stMod), saSpeed, saDam, saType, stType)).setItemName("stSandstoneIceAxe");
        saSandstoneIceAxe = (new InfiToolIceAxe(sandstoneIceAxeID + 2, saLevel, (int)((float)saDur * saMod), saSpeed, saDam, saType, saType)).setItemName("saSandstoneIceAxe");
        bSandstoneIceAxe = (new InfiToolIceAxe(sandstoneIceAxeID + 3, saLevel, (int)((float)saDur * bMod), saSpeed, saDam, saType, bType)).setItemName("bSandstoneIceAxe");
        pSandstoneIceAxe = (new InfiToolIceAxe(sandstoneIceAxeID + 4, saLevel, (int)((float)saDur * pMod), saSpeed, saDam, saType, pType)).setItemName("pSandstoneIceAxe");
        nSandstoneIceAxe = (new InfiToolIceAxe(sandstoneIceAxeID + 5, saLevel, (int)((float)saDur * nMod), saSpeed, saDam, saType, nType)).setItemName("nSandstoneIceAxe");
        iceSandstoneIceAxe = (new InfiToolIceAxe(sandstoneIceAxeID + 6, saLevel, (int)((float)saDur * iceMod), saSpeed, saDam, saType, iceType)).setItemName("iceSandstoneIceAxe");
        sSandstoneIceAxe = (new InfiToolIceAxe(sandstoneIceAxeID + 7, saLevel, (int)((float)saDur * sMod), saSpeed, saDam, saType, sType)).setItemName("sSandstoneIceAxe");
        cSandstoneIceAxe = (new InfiToolIceAxe(sandstoneIceAxeID + 8, saLevel, (int)((float)saDur * cMod), saSpeed, saDam, saType, cType)).setItemName("cSandstoneIceAxe");
        fSandstoneIceAxe = (new InfiToolIceAxe(sandstoneIceAxeID + 9, saLevel, (int)((float)saDur * fMod), saSpeed, saDam, saType, fType)).setItemName("fSandstoneIceAxe");
        brSandstoneIceAxe = (new InfiToolIceAxe(sandstoneIceAxeID + 10, saLevel, (int)((float)saDur * brMod), saSpeed, saDam, saType, brType)).setItemName("brSandstoneIceAxe");
        wBoneIceAxe = (new InfiToolIceAxe(boneIceAxeID + 0, bLevel, (int)((float)bDur * wMod), bSpeed, bDam, bType, wType)).setItemName("wBoneIceAxe");
        stBoneIceAxe = (new InfiToolIceAxe(boneIceAxeID + 1, bLevel, (int)((float)bDur * stMod), bSpeed, bDam, bType, stType)).setItemName("stBoneIceAxe");
        iBoneIceAxe = (new InfiToolIceAxe(boneIceAxeID + 2, bLevel, (int)((float)bDur * iMod), bSpeed, bDam, bType, iType)).setItemName("iBoneIceAxe");
        dBoneIceAxe = (new InfiToolIceAxe(boneIceAxeID + 3, bLevel, (int)((float)bDur * iMod), bSpeed, bDam, bType, dType)).setItemName("dBoneIceAxe");
        rBoneIceAxe = (new InfiToolIceAxe(boneIceAxeID + 4, bLevel, (int)((float)bDur * rMod), bSpeed, bDam, bType, rType)).setItemName("rBoneIceAxe");
        oBoneIceAxe = (new InfiToolIceAxe(boneIceAxeID + 5, bLevel, (int)((float)bDur * oMod), bSpeed, bDam, bType, oType)).setItemName("oBoneIceAxe");
        bBoneIceAxe = (new InfiToolIceAxe(boneIceAxeID + 6, bLevel, (int)((float)bDur * bMod), bSpeed, bDam, bType, bType)).setItemName("bBoneIceAxe");
        mBoneIceAxe = (new InfiToolIceAxe(boneIceAxeID + 7, bLevel, (int)((float)bDur * mMod), bSpeed, bDam, bType, mType)).setItemName("mBoneIceAxe");
        nBoneIceAxe = (new InfiToolIceAxe(boneIceAxeID + 8, bLevel, (int)((float)bDur * nMod), bSpeed, bDam, bType, nType)).setItemName("nBoneIceAxe");
        glBoneIceAxe = (new InfiToolIceAxe(boneIceAxeID + 9, bLevel, (int)((float)bDur * gMod), bSpeed, bDam, bType, glType)).setItemName("glBoneIceAxe");
        sBoneIceAxe = (new InfiToolIceAxe(boneIceAxeID + 10, bLevel, (int)((float)bDur * sMod), bSpeed, bDam, bType, sType)).setItemName("sBoneIceAxe");
        cBoneIceAxe = (new InfiToolIceAxe(boneIceAxeID + 11, bLevel, (int)((float)bDur * cMod), bSpeed, bDam, bType, cType)).setItemName("cBoneIceAxe");
        fBoneIceAxe = (new InfiToolIceAxe(boneIceAxeID + 12, bLevel, (int)((float)bDur * fMod), bSpeed, bDam, bType, fType)).setItemName("fBoneIceAxe");
        brBoneIceAxe = (new InfiToolIceAxe(boneIceAxeID + 13, bLevel, (int)((float)bDur * brMod), bSpeed, bDam, bType, brType)).setItemName("brBoneIceAxe");
        blBoneIceAxe = (new InfiToolIceAxe(boneIceAxeID + 14, bLevel, (int)((float)bDur * blMod), bSpeed, bDam, bType, blType)).setItemName("blBoneIceAxe");
        wPaperIceAxe = (new InfiToolIceAxe(paperIceAxeID + 0, pLevel, (int)((float)pDur * wMod), pSpeed, pDam, pType, wType)).setItemName("wPaperIceAxe");
        saPaperIceAxe = (new InfiToolIceAxe(paperIceAxeID + 1, pLevel, (int)((float)pDur * saMod), pSpeed, pDam, pType, saType)).setItemName("saPaperIceAxe");
        bPaperIceAxe = (new InfiToolIceAxe(paperIceAxeID + 2, pLevel, (int)((float)pDur * bMod), pSpeed, pDam, pType, bType)).setItemName("bPaperIceAxe");
        pPaperIceAxe = (new InfiToolIceAxe(paperIceAxeID + 3, pLevel, (int)((float)pDur * pMod), pSpeed, pDam, pType, pType)).setItemName("pPaperIceAxe");
        sPaperIceAxe = (new InfiToolIceAxe(paperIceAxeID + 4, pLevel, (int)((float)pDur * sMod), pSpeed, pDam, pType, sType)).setItemName("sPaperIceAxe");
        cPaperIceAxe = (new InfiToolIceAxe(paperIceAxeID + 5, pLevel, (int)((float)pDur * cMod), pSpeed, pDam, pType, cType)).setItemName("cPaperIceAxe");
        brPaperIceAxe = (new InfiToolIceAxe(paperIceAxeID + 6, pLevel, (int)((float)pDur * brMod), pSpeed, pDam, pType, brType)).setItemName("brPaperIceAxe");
        stMossyIceAxe = (new InfiToolIceAxe(mossyIceAxeID + 0, mLevel, (int)((float)mDur * stMod), mSpeed, mDam, mType, stType)).setItemName("stMossyIceAxe");
        dMossyIceAxe = (new InfiToolIceAxe(mossyIceAxeID + 1, mLevel, (int)((float)mDur * iMod), mSpeed, mDam, mType, dType)).setItemName("dMossyIceAxe");
        rMossyIceAxe = (new InfiToolIceAxe(mossyIceAxeID + 2, mLevel, (int)((float)mDur * rMod), mSpeed, mDam, mType, rType)).setItemName("rMossyIceAxe");
        bMossyIceAxe = (new InfiToolIceAxe(mossyIceAxeID + 3, mLevel, (int)((float)mDur * bMod), mSpeed, mDam, mType, bType)).setItemName("bMossyIceAxe");
        mMossyIceAxe = (new InfiToolIceAxe(mossyIceAxeID + 4, mLevel, (int)((float)mDur * mMod), mSpeed, mDam, mType, mType)).setItemName("mMossyIceAxe");
        glMossyIceAxe = (new InfiToolIceAxe(mossyIceAxeID + 5, mLevel, (int)((float)mDur * gMod), mSpeed, mDam, mType, glType)).setItemName("glMossyIceAxe");
        wNetherrackIceAxe = (new InfiToolIceAxe(netherrackIceAxeID + 0, nLevel, (int)((float)nDur * wMod), nSpeed, nDam, nType, wType)).setItemName("wNetherrackIceAxe");
        stNetherrackIceAxe = (new InfiToolIceAxe(netherrackIceAxeID + 1, nLevel, (int)((float)nDur * stMod), nSpeed, nDam, nType, stType)).setItemName("stNetherrackIceAxe");
        iNetherrackIceAxe = (new InfiToolIceAxe(netherrackIceAxeID + 2, nLevel, (int)((float)nDur * iMod), nSpeed, nDam, nType, iType)).setItemName("iNetherrackIceAxe");
        rNetherrackIceAxe = (new InfiToolIceAxe(netherrackIceAxeID + 3, nLevel, (int)((float)nDur * rMod), nSpeed, nDam, nType, rType)).setItemName("rNetherrackIceAxe");
        oNetherrackIceAxe = (new InfiToolIceAxe(netherrackIceAxeID + 4, nLevel, (int)((float)nDur * oMod), nSpeed, nDam, nType, oType)).setItemName("oNetherrackIceAxe");
        saNetherrackIceAxe = (new InfiToolIceAxe(netherrackIceAxeID + 5, nLevel, (int)((float)nDur * saMod), nSpeed, nDam, nType, saType)).setItemName("saNetherrackIceAxe");
        bNetherrackIceAxe = (new InfiToolIceAxe(netherrackIceAxeID + 6, nLevel, (int)((float)nDur * bMod), nSpeed, nDam, nType, bType)).setItemName("bNetherrackIceAxe");
        mNetherrackIceAxe = (new InfiToolIceAxe(netherrackIceAxeID + 7, nLevel, (int)((float)nDur * mMod), nSpeed, nDam, nType, mType)).setItemName("mNetherrackIceAxe");
        nNetherrackIceAxe = (new InfiToolIceAxe(netherrackIceAxeID + 8, nLevel, (int)((float)nDur * nMod), nSpeed, nDam, nType, nType)).setItemName("nNetherrackIceAxe");
        glNetherrackIceAxe = (new InfiToolIceAxe(netherrackIceAxeID + 9, nLevel, (int)((float)nDur * glMod), nSpeed, nDam, nType, glType)).setItemName("glNetherrackIceAxe");
        iceNetherrackIceAxe = (new InfiToolIceAxe(netherrackIceAxeID + 10, nLevel, (int)((float)nDur * iceMod), nSpeed, nDam, nType, iceType)).setItemName("iceNetherrackIceAxe");
        sNetherrackIceAxe = (new InfiToolIceAxe(netherrackIceAxeID + 11, nLevel, (int)((float)nDur * sMod), nSpeed, nDam, nType, sType)).setItemName("sNetherrackIceAxe");
        cNetherrackIceAxe = (new InfiToolIceAxe(netherrackIceAxeID + 12, nLevel, (int)((float)nDur * cMod), nSpeed, nDam, nType, cType)).setItemName("cNetherrackIceAxe");
        fNetherrackIceAxe = (new InfiToolIceAxe(netherrackIceAxeID + 13, nLevel, (int)((float)nDur * fMod), nSpeed, nDam, nType, fType)).setItemName("fNetherrackIceAxe");
        brNetherrackIceAxe = (new InfiToolIceAxe(netherrackIceAxeID + 14, nLevel, (int)((float)nDur * brMod), nSpeed, nDam, nType, brType)).setItemName("brNetherrackIceAxe");
        blNetherrackIceAxe = (new InfiToolIceAxe(netherrackIceAxeID + 15, nLevel, (int)((float)nDur * blMod), nSpeed, nDam, nType, blType)).setItemName("blNetherrackIceAxe");
        wGlowstoneIceAxe = (new InfiToolIceAxe(glowstoneIceAxeID + 0, glLevel, (int)((float)glDur * wMod), glSpeed, glDam, glType, wType)).setItemName("wGlowstoneIceAxe");
        stGlowstoneIceAxe = (new InfiToolIceAxe(glowstoneIceAxeID + 1, glLevel, (int)((float)glDur * stMod), glSpeed, glDam, glType, stType)).setItemName("stGlowstoneIceAxe");
        iGlowstoneIceAxe = (new InfiToolIceAxe(glowstoneIceAxeID + 2, glLevel, (int)((float)glDur * iMod), glSpeed, glDam, glType, iType)).setItemName("iGlowstoneIceAxe");
        dGlowstoneIceAxe = (new InfiToolIceAxe(glowstoneIceAxeID + 3, glLevel, (int)((float)glDur * iMod), glSpeed, glDam, glType, dType)).setItemName("dGlowstoneIceAxe");
        rGlowstoneIceAxe = (new InfiToolIceAxe(glowstoneIceAxeID + 4, glLevel, (int)((float)glDur * rMod), glSpeed, glDam, glType, rType)).setItemName("rGlowstoneIceAxe");
        oGlowstoneIceAxe = (new InfiToolIceAxe(glowstoneIceAxeID + 5, glLevel, (int)((float)glDur * oMod), glSpeed, glDam, glType, oType)).setItemName("oGlowstoneIceAxe");
        bGlowstoneIceAxe = (new InfiToolIceAxe(glowstoneIceAxeID + 6, glLevel, (int)((float)glDur * bMod), glSpeed, glDam, glType, bType)).setItemName("bGlowstoneIceAxe");
        mGlowstoneIceAxe = (new InfiToolIceAxe(glowstoneIceAxeID + 7, glLevel, (int)((float)glDur * mMod), glSpeed, glDam, glType, mType)).setItemName("mGlowstoneIceAxe");
        nGlowstoneIceAxe = (new InfiToolIceAxe(glowstoneIceAxeID + 8, glLevel, (int)((float)glDur * nMod), glSpeed, glDam, glType, nType)).setItemName("nGlowstoneIceAxe");
        glGlowstoneIceAxe = (new InfiToolIceAxe(glowstoneIceAxeID + 9, glLevel, (int)((float)glDur * gMod), glSpeed, glDam, glType, glType)).setItemName("glGlowstoneIceAxe");
        iceGlowstoneIceAxe = (new InfiToolIceAxe(glowstoneIceAxeID + 10, glLevel, (int)((float)glDur * iceMod), glSpeed, glDam, glType, iceType)).setItemName("iceGlowstoneIceAxe");
        lGlowstoneIceAxe = (new InfiToolIceAxe(glowstoneIceAxeID + 11, glLevel, (int)((float)glDur * gMod), glSpeed, glDam, glType, lType)).setItemName("lGlowstoneIceAxe");
        sGlowstoneIceAxe = (new InfiToolIceAxe(glowstoneIceAxeID + 12, glLevel, (int)((float)glDur * sMod), glSpeed, glDam, glType, sType)).setItemName("sGlowstoneIceAxe");
        blGlowstoneIceAxe = (new InfiToolIceAxe(glowstoneIceAxeID + 13, glLevel, (int)((float)glDur * blMod), glSpeed, glDam, glType, blType)).setItemName("blGlowstoneIceAxe");
        wIceIceAxe = (new InfiToolIceAxe(iceIceAxeID + 0, iceLevel, (int)((float)iceDur * wMod), iceSpeed, iceDam, iceType, wType)).setItemName("wIceIceAxe");
        stIceIceAxe = (new InfiToolIceAxe(iceIceAxeID + 1, iceLevel, (int)((float)iceDur * stMod), iceSpeed, iceDam, iceType, stType)).setItemName("stIceIceAxe");
        iIceIceAxe = (new InfiToolIceAxe(iceIceAxeID + 2, iceLevel, (int)((float)iceDur * iMod), iceSpeed, iceDam, iceType, iType)).setItemName("iIceIceAxe");
        dIceIceAxe = (new InfiToolIceAxe(iceIceAxeID + 3, iceLevel, (int)((float)iceDur * dMod), iceSpeed, iceDam, iceType, dType)).setItemName("dIceIceAxe");
        gIceIceAxe = (new InfiToolIceAxe(iceIceAxeID + 4, iceLevel, (int)((float)iceDur * gMod), iceSpeed, iceDam, iceType, gType)).setItemName("gIceIceAxe");
        rIceIceAxe = (new InfiToolIceAxe(iceIceAxeID + 5, iceLevel, (int)((float)iceDur * rMod), iceSpeed, iceDam, iceType, rType)).setItemName("rIceIceAxe");
        oIceIceAxe = (new InfiToolIceAxe(iceIceAxeID + 6, iceLevel, (int)((float)iceDur * oMod), iceSpeed, iceDam, iceType, oType)).setItemName("oIceIceAxe");
        saIceIceAxe = (new InfiToolIceAxe(iceIceAxeID + 7, iceLevel, (int)((float)iceDur * saMod), iceSpeed, iceDam, iceType, saType)).setItemName("saIceIceAxe");
        bIceIceAxe = (new InfiToolIceAxe(iceIceAxeID + 8, iceLevel, (int)((float)iceDur * bMod), iceSpeed, iceDam, iceType, bType)).setItemName("bIceIceAxe");
        glIceIceAxe = (new InfiToolIceAxe(iceIceAxeID + 9, iceLevel, (int)((float)iceDur * gMod), iceSpeed, iceDam, iceType, glType)).setItemName("glIceIceAxe");
        iceIceIceAxe = (new InfiToolIceAxe(iceIceAxeID + 10, iceLevel, (int)((float)iceDur * iMod), iceSpeed, iceDam, iceType, iceType)).setItemName("iceIceIceAxe");
        sIceIceAxe = (new InfiToolIceAxe(iceIceAxeID + 11, iceLevel, (int)((float)iceDur * sMod), iceSpeed, iceDam, iceType, sType)).setItemName("sIceIceAxe");
        cIceIceAxe = (new InfiToolIceAxe(iceIceAxeID + 12, iceLevel, (int)((float)iceDur * cMod), iceSpeed, iceDam, iceType, cType)).setItemName("cIceIceAxe");
        fIceIceAxe = (new InfiToolIceAxe(iceIceAxeID + 13, iceLevel, (int)((float)iceDur * fMod), iceSpeed, iceDam, iceType, fType)).setItemName("fIceIceAxe");
        brIceIceAxe = (new InfiToolIceAxe(iceIceAxeID + 14, iceLevel, (int)((float)iceDur * brMod), iceSpeed, iceDam, iceType, brType)).setItemName("brIceIceAxe");
        dLavaIceAxe = (new InfiToolIceAxe(lavaIceAxeID + 0, lLevel, (int)((float)lDur * iMod), lSpeed, lDam, lType, dType)).setItemName("dLavaIceAxe");
        rLavaIceAxe = (new InfiToolIceAxe(lavaIceAxeID + 1, lLevel, (int)((float)lDur * rMod), lSpeed, lDam, lType, rType)).setItemName("rLavaIceAxe");
        bLavaIceAxe = (new InfiToolIceAxe(lavaIceAxeID + 2, lLevel, (int)((float)lDur * bMod), lSpeed, lDam, lType, bType)).setItemName("bLavaIceAxe");
        nLavaIceAxe = (new InfiToolIceAxe(lavaIceAxeID + 3, lLevel, (int)((float)lDur * nMod), lSpeed, lDam, lType, nType)).setItemName("nLavaIceAxe");
        glLavaIceAxe = (new InfiToolIceAxe(lavaIceAxeID + 4, lLevel, (int)((float)lDur * gMod), lSpeed, lDam, lType, glType)).setItemName("glLavaIceAxe");
        lLavaIceAxe = (new InfiToolIceAxe(lavaIceAxeID + 5, lLevel, (int)((float)lDur * lMod), lSpeed, lDam, lType, lType)).setItemName("lLavaIceAxe");
        blLavaIceAxe = (new InfiToolIceAxe(lavaIceAxeID + 6, lLevel, (int)((float)lDur * blMod), lSpeed, lDam, lType, blType)).setItemName("blLavaIceAxe");
        wSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 0, sLevel, (int)((float)sDur * wMod), sSpeed, sDam, sType, wType)).setItemName("wSlimeIceAxe");
        stSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 1, sLevel, (int)((float)sDur * stMod), sSpeed, sDam, sType, stType)).setItemName("stSlimeIceAxe");
        iSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 2, sLevel, (int)((float)sDur * iMod), sSpeed, sDam, sType, iType)).setItemName("iSlimeIceAxe");
        dSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 3, sLevel, (int)((float)sDur * iMod), sSpeed, sDam, sType, dType)).setItemName("dSlimeIceAxe");
        gSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 4, sLevel, (int)((float)sDur * gMod), sSpeed, sDam, sType, gType)).setItemName("gSlimeIceAxe");
        rSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 5, sLevel, (int)((float)sDur * rMod), sSpeed, sDam, sType, rType)).setItemName("rSlimeIceAxe");
        oSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 6, sLevel, (int)((float)sDur * oMod), sSpeed, sDam, sType, oType)).setItemName("oSlimeIceAxe");
        saSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 7, sLevel, (int)((float)sDur * saMod), sSpeed, sDam, sType, saType)).setItemName("saSlimeIceAxe");
        bSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 8, sLevel, (int)((float)sDur * bMod), sSpeed, sDam, sType, bType)).setItemName("bSlimeIceAxe");
        pSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 9, sLevel, (int)((float)sDur * pMod), sSpeed, sDam, sType, pType)).setItemName("pSlimeIceAxe");
        mSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 10, sLevel, (int)((float)sDur * mMod), sSpeed, sDam, sType, mType)).setItemName("mSlimeIceAxe");
        nSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 11, sLevel, (int)((float)sDur * nMod), sSpeed, sDam, sType, nType)).setItemName("nSlimeIceAxe");
        glSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 12, sLevel, (int)((float)sDur * gMod), sSpeed, sDam, sType, glType)).setItemName("glSlimeIceAxe");
        iceSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 13, sLevel, (int)((float)sDur * iMod), sSpeed, sDam, sType, iceType)).setItemName("iceSlimeIceAxe");
        lSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 14, sLevel, (int)((float)sDur * lMod), sSpeed, sDam, sType, lType)).setItemName("lSlimeIceAxe");
        sSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 15, sLevel, (int)((float)sDur * sMod), sSpeed, sDam, sType, sType)).setItemName("sSlimeIceAxe");
        cSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 16, sLevel, (int)((float)sDur * cMod), sSpeed, sDam, sType, cType)).setItemName("cSlimeIceAxe");
        fSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 17, sLevel, (int)((float)sDur * fMod), sSpeed, sDam, sType, fType)).setItemName("fSlimeIceAxe");
        brSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 18, sLevel, (int)((float)sDur * brMod), sSpeed, sDam, sType, brType)).setItemName("brSlimeIceAxe");
        blSlimeIceAxe = (new InfiToolIceAxe(slimeIceAxeID + 19, sLevel, (int)((float)sDur * blMod), sSpeed, sDam, sType, blType)).setItemName("blSlimeIceAxe");
        wCactusIceAxe = (new InfiToolIceAxe(cactusIceAxeID + 0, cLevel, (int)((float)cDur * wMod), cSpeed, cDam, cType, wType)).setItemName("wCactusIceAxe");
        stCactusIceAxe = (new InfiToolIceAxe(cactusIceAxeID + 1, cLevel, (int)((float)cDur * stMod), cSpeed, cDam, cType, stType)).setItemName("stCactusIceAxe");
        saCactusIceAxe = (new InfiToolIceAxe(cactusIceAxeID + 2, cLevel, (int)((float)cDur * saMod), cSpeed, cDam, cType, saType)).setItemName("saCactusIceAxe");
        bCactusIceAxe = (new InfiToolIceAxe(cactusIceAxeID + 3, cLevel, (int)((float)cDur * bMod), cSpeed, cDam, cType, bType)).setItemName("bCactusIceAxe");
        pCactusIceAxe = (new InfiToolIceAxe(cactusIceAxeID + 4, cLevel, (int)((float)cDur * pMod), cSpeed, cDam, cType, pType)).setItemName("pCactusIceAxe");
        nCactusIceAxe = (new InfiToolIceAxe(cactusIceAxeID + 5, cLevel, (int)((float)cDur * nMod), cSpeed, cDam, cType, nType)).setItemName("nCactusIceAxe");
        sCactusIceAxe = (new InfiToolIceAxe(cactusIceAxeID + 6, cLevel, (int)((float)cDur * sMod), cSpeed, cDam, cType, sType)).setItemName("sCactusIceAxe");
        cCactusIceAxe = (new InfiToolIceAxe(cactusIceAxeID + 7, cLevel, (int)((float)cDur * cMod), cSpeed, cDam, cType, cType)).setItemName("cCactusIceAxe");
        fCactusIceAxe = (new InfiToolIceAxe(cactusIceAxeID + 8, cLevel, (int)((float)cDur * fMod), cSpeed, cDam, cType, fType)).setItemName("fCactusIceAxe");
        brCactusIceAxe = (new InfiToolIceAxe(cactusIceAxeID + 9, cLevel, (int)((float)cDur * brMod), cSpeed, cDam, cType, brType)).setItemName("brCactusIceAxe");
        wFlintIceAxe = (new InfiToolIceAxe(flintIceAxeID + 0, fLevel, (int)((float)fDur * wMod), fSpeed, fDam, fType, wType)).setItemName("wFlintIceAxe");
        stFlintIceAxe = (new InfiToolIceAxe(flintIceAxeID + 1, fLevel, (int)((float)fDur * stMod), fSpeed, fDam, fType, stType)).setItemName("stFlintIceAxe");
        iFlintIceAxe = (new InfiToolIceAxe(flintIceAxeID + 2, fLevel, (int)((float)fDur * iMod), fSpeed, fDam, fType, iType)).setItemName("iFlintIceAxe");
        gFlintIceAxe = (new InfiToolIceAxe(flintIceAxeID + 3, fLevel, (int)((float)fDur * gMod), fSpeed, fDam, fType, gType)).setItemName("gFlintIceAxe");
        oFlintIceAxe = (new InfiToolIceAxe(flintIceAxeID + 4, fLevel, (int)((float)fDur * oMod), fSpeed, fDam, fType, oType)).setItemName("oFlintIceAxe");
        saFlintIceAxe = (new InfiToolIceAxe(flintIceAxeID + 5, fLevel, (int)((float)fDur * saMod), fSpeed, fDam, fType, saType)).setItemName("saFlintIceAxe");
        bFlintIceAxe = (new InfiToolIceAxe(flintIceAxeID + 6, fLevel, (int)((float)fDur * bMod), fSpeed, fDam, fType, bType)).setItemName("bFlintIceAxe");
        nFlintIceAxe = (new InfiToolIceAxe(flintIceAxeID + 7, fLevel, (int)((float)fDur * nMod), fSpeed, fDam, fType, nType)).setItemName("nFlintIceAxe");
        iceFlintIceAxe = (new InfiToolIceAxe(flintIceAxeID + 8, fLevel, (int)((float)fDur * wMod), fSpeed, fDam, fType, iceType)).setItemName("iceFlintIceAxe");
        sFlintIceAxe = (new InfiToolIceAxe(flintIceAxeID + 9, fLevel, (int)((float)fDur * sMod), fSpeed, fDam, fType, sType)).setItemName("sFlintIceAxe");
        cFlintIceAxe = (new InfiToolIceAxe(flintIceAxeID + 10, fLevel, (int)((float)fDur * cMod), fSpeed, fDam, fType, cType)).setItemName("cFlintIceAxe");
        fFlintIceAxe = (new InfiToolIceAxe(flintIceAxeID + 11, fLevel, (int)((float)fDur * fMod), fSpeed, fDam, fType, fType)).setItemName("fFlintIceAxe");
        brFlintIceAxe = (new InfiToolIceAxe(flintIceAxeID + 12, fLevel, (int)((float)fDur * brMod), fSpeed, fDam, fType, brType)).setItemName("brFlintIceAxe");
        blFlintIceAxe = (new InfiToolIceAxe(flintIceAxeID + 13, fLevel, (int)((float)fDur * blMod), fSpeed, fDam, fType, blType)).setItemName("blFlintIceAxe");
        wBrickIceAxe = (new InfiToolIceAxe(brickIceAxeID + 0, brLevel, (int)((float)brDur * wMod), brSpeed, brDam, brType, wType)).setItemName("wBrickIceAxe");
        stBrickIceAxe = (new InfiToolIceAxe(brickIceAxeID + 1, brLevel, (int)((float)brDur * stMod), brSpeed, brDam, brType, stType)).setItemName("stBrickIceAxe");
        saBrickIceAxe = (new InfiToolIceAxe(brickIceAxeID + 2, brLevel, (int)((float)brDur * saMod), brSpeed, brDam, brType, saType)).setItemName("saBrickIceAxe");
        bBrickIceAxe = (new InfiToolIceAxe(brickIceAxeID + 3, brLevel, (int)((float)brDur * bMod), brSpeed, brDam, brType, bType)).setItemName("bBrickIceAxe");
        pBrickIceAxe = (new InfiToolIceAxe(brickIceAxeID + 4, brLevel, (int)((float)brDur * pMod), brSpeed, brDam, brType, pType)).setItemName("pBrickIceAxe");
        nBrickIceAxe = (new InfiToolIceAxe(brickIceAxeID + 5, brLevel, (int)((float)brDur * nMod), brSpeed, brDam, brType, nType)).setItemName("nBrickIceAxe");
        iceBrickIceAxe = (new InfiToolIceAxe(brickIceAxeID + 6, brLevel, (int)((float)brDur * iceMod), brSpeed, brDam, brType, iceType)).setItemName("iceBrickIceAxe");
        sBrickIceAxe = (new InfiToolIceAxe(brickIceAxeID + 7, brLevel, (int)((float)brDur * sMod), brSpeed, brDam, brType, sType)).setItemName("sBrickIceAxe");
        cBrickIceAxe = (new InfiToolIceAxe(brickIceAxeID + 8, brLevel, (int)((float)brDur * cMod), brSpeed, brDam, brType, cType)).setItemName("cBrickIceAxe");
        fBrickIceAxe = (new InfiToolIceAxe(brickIceAxeID + 9, brLevel, (int)((float)brDur * fMod), brSpeed, brDam, brType, fType)).setItemName("fBrickIceAxe");
        brBrickIceAxe = (new InfiToolIceAxe(brickIceAxeID + 10, brLevel, (int)((float)brDur * brMod), brSpeed, brDam, brType, brType)).setItemName("brBrickIceAxe");
        dBlazeIceAxe = (new InfiToolIceAxe(blazeIceAxeID + 0, blLevel, (int)((float)blDur * dMod), blSpeed, blDam, blType, dType)).setItemName("wBlazeIceAxe");
        rBlazeIceAxe = (new InfiToolIceAxe(blazeIceAxeID + 1, blLevel, (int)((float)blDur * rMod), blSpeed, blDam, blType, rType)).setItemName("rBlazeIceAxe");
        bBlazeIceAxe = (new InfiToolIceAxe(blazeIceAxeID + 2, blLevel, (int)((float)blDur * bMod), blSpeed, blDam, blType, bType)).setItemName("bBlazeIceAxe");
        nBlazeIceAxe = (new InfiToolIceAxe(blazeIceAxeID + 3, blLevel, (int)((float)blDur * nMod), blSpeed, blDam, blType, nType)).setItemName("nBlazeIceAxe");
        glBlazeIceAxe = (new InfiToolIceAxe(blazeIceAxeID + 4, blLevel, (int)((float)blDur * glMod), blSpeed, blDam, blType, glType)).setItemName("glBlazeIceAxe");
        lBlazeIceAxe = (new InfiToolIceAxe(blazeIceAxeID + 5, blLevel, (int)((float)blDur * lMod), blSpeed, blDam, blType, lType)).setItemName("lBlazeIceAxe");
        fBlazeIceAxe = (new InfiToolIceAxe(blazeIceAxeID + 6, blLevel, (int)((float)blDur * fMod), blSpeed, blDam, blType, fType)).setItemName("fBlazeIceAxe");
        blBlazeIceAxe = (new InfiToolIceAxe(blazeIceAxeID + 7, blLevel, (int)((float)blDur * bMod), blSpeed, blDam, blType, bType)).setItemName("blBlazeIceAxe");
        wWoodMattock = (new InfiToolMattock(woodMattockID + 0, wLevel, (int)((float)wDur * wMod), wSpeed, wDam, wType, wType)).setItemName("wWoodMattock");
        stWoodMattock = (new InfiToolMattock(woodMattockID + 1, wLevel, (int)((float)wDur * stMod), wSpeed, wDam, wType, stType)).setItemName("stWoodMattock");
        saWoodMattock = (new InfiToolMattock(woodMattockID + 2, wLevel, (int)((float)wDur * saMod), wSpeed, wDam, wType, saType)).setItemName("saWoodMattock");
        bWoodMattock = (new InfiToolMattock(woodMattockID + 3, wLevel, (int)((float)wDur * bMod), wSpeed, wDam, wType, bType)).setItemName("bWoodMattock");
        pWoodMattock = (new InfiToolMattock(woodMattockID + 4, wLevel, (int)((float)wDur * pMod), wSpeed, wDam, wType, pType)).setItemName("pWoodMattock");
        nWoodMattock = (new InfiToolMattock(woodMattockID + 5, wLevel, (int)((float)wDur * nMod), wSpeed, wDam, wType, nType)).setItemName("nWoodMattock");
        sWoodMattock = (new InfiToolMattock(woodMattockID + 6, wLevel, (int)((float)wDur * sMod), wSpeed, wDam, wType, sType)).setItemName("sWoodMattock");
        cWoodMattock = (new InfiToolMattock(woodMattockID + 7, wLevel, (int)((float)wDur * cMod), wSpeed, wDam, wType, cType)).setItemName("cWoodMattock");
        fWoodMattock = (new InfiToolMattock(woodMattockID + 8, wLevel, (int)((float)wDur * fMod), wSpeed, wDam, wType, fType)).setItemName("fWoodMattock");
        brWoodMattock = (new InfiToolMattock(woodMattockID + 9, wLevel, (int)((float)wDur * brMod), wSpeed, wDam, wType, brType)).setItemName("brWoodMattock");
        wStoneMattock = (new InfiToolMattock(stoneMattockID + 0, stLevel, (int)((float)stDur * wMod), stSpeed, stDam, stType, wType)).setItemName("wStoneMattock");
        stStoneMattock = (new InfiToolMattock(stoneMattockID + 1, stLevel, (int)((float)stDur * stMod), stSpeed, stDam, stType, stType)).setItemName("stStoneMattock");
        saStoneMattock = (new InfiToolMattock(stoneMattockID + 2, stLevel, (int)((float)stDur * saMod), stSpeed, stDam, stType, saType)).setItemName("saStoneMattock");
        bStoneMattock = (new InfiToolMattock(stoneMattockID + 3, stLevel, (int)((float)stDur * bMod), stSpeed, stDam, stType, bType)).setItemName("bStoneMattock");
        pStoneMattock = (new InfiToolMattock(stoneMattockID + 4, stLevel, (int)((float)stDur * pMod), stSpeed, stDam, stType, pType)).setItemName("pStoneMattock");
        mStoneMattock = (new InfiToolMattock(stoneMattockID + 5, stLevel, (int)((float)stDur * mMod), stSpeed, stDam, stType, mType)).setItemName("mStoneMattock");
        nStoneMattock = (new InfiToolMattock(stoneMattockID + 6, stLevel, (int)((float)stDur * nMod), stSpeed, stDam, stType, nType)).setItemName("nStoneMattock");
        iceStoneMattock = (new InfiToolMattock(stoneMattockID + 7, stLevel, (int)((float)stDur * iceMod), stSpeed, stDam, stType, iceType)).setItemName("iceStoneMattock");
        sStoneMattock = (new InfiToolMattock(stoneMattockID + 8, stLevel, (int)((float)stDur * sMod), stSpeed, stDam, stType, sType)).setItemName("sStoneMattock");
        cStoneMattock = (new InfiToolMattock(stoneMattockID + 9, stLevel, (int)((float)stDur * cMod), stSpeed, stDam, stType, cType)).setItemName("cStoneMattock");
        fStoneMattock = (new InfiToolMattock(stoneMattockID + 10, stLevel, (int)((float)stDur * fMod), stSpeed, stDam, stType, fType)).setItemName("fStoneMattock");
        brStoneMattock = (new InfiToolMattock(stoneMattockID + 11, stLevel, (int)((float)stDur * brMod), stSpeed, stDam, stType, brType)).setItemName("brStoneMattock");
        wIronMattock = (new InfiToolMattock(ironMattockID + 0, iLevel, (int)((float)iDur * wMod), iSpeed, iDam, iType, wType)).setItemName("wIronMattock");
        stIronMattock = (new InfiToolMattock(ironMattockID + 1, iLevel, (int)((float)iDur * stMod), iSpeed, iDam, iType, stType)).setItemName("stIronMattock");
        iIronMattock = (new InfiToolMattock(ironMattockID + 2, iLevel, (int)((float)iDur * iMod), iSpeed, iDam, iType, iType)).setItemName("iIronMattock");
        dIronMattock = (new InfiToolMattock(ironMattockID + 3, iLevel, (int)((float)iDur * dMod), iSpeed, iDam, iType, dType)).setItemName("dIronMattock");
        gIronMattock = (new InfiToolMattock(ironMattockID + 4, iLevel, (int)((float)iDur * gMod), iSpeed, iDam, iType, gType)).setItemName("gIronMattock");
        rIronMattock = (new InfiToolMattock(ironMattockID + 5, iLevel, (int)((float)iDur * rMod), iSpeed, iDam, iType, rType)).setItemName("rIronMattock");
        oIronMattock = (new InfiToolMattock(ironMattockID + 6, iLevel, (int)((float)iDur * oMod), iSpeed, iDam, iType, oType)).setItemName("oIronMattock");
        bIronMattock = (new InfiToolMattock(ironMattockID + 7, iLevel, (int)((float)iDur * bMod), iSpeed, iDam, iType, bType)).setItemName("bIronMattock");
        nIronMattock = (new InfiToolMattock(ironMattockID + 8, iLevel, (int)((float)iDur * nMod), iSpeed, iDam, iType, nType)).setItemName("nIronMattock");
        glIronMattock = (new InfiToolMattock(ironMattockID + 9, iLevel, (int)((float)iDur * glMod), iSpeed, iDam, iType, glType)).setItemName("glIronMattock");
        iceIronMattock = (new InfiToolMattock(ironMattockID + 10, iLevel, (int)((float)iDur * iceMod), iSpeed, iDam, iType, iceType)).setItemName("iceIronMattock");
        sIronMattock = (new InfiToolMattock(ironMattockID + 11, iLevel, (int)((float)iDur * sMod), iSpeed, iDam, iType, sType)).setItemName("sIronMattock");
        blIronMattock = (new InfiToolMattock(ironMattockID + 12, iLevel, (int)((float)iDur * blMod), iSpeed, iDam, iType, blType)).setItemName("blIronMattock");
        wDiamondMattock = (new InfiToolMattock(diamondMattockID + 0, dLevel, (int)((float)dDur * wMod), dSpeed, dDam, dType, wType)).setItemName("wDiamondMattock");
        stDiamondMattock = (new InfiToolMattock(diamondMattockID + 1, dLevel, (int)((float)dDur * stMod), dSpeed, dDam, dType, stType)).setItemName("stDiamondMattock");
        iDiamondMattock = (new InfiToolMattock(diamondMattockID + 2, dLevel, (int)((float)dDur * iMod), dSpeed, dDam, dType, iType)).setItemName("iDiamondMattock");
        dDiamondMattock = (new InfiToolMattock(diamondMattockID + 3, dLevel, (int)((float)dDur * dMod), dSpeed, dDam, dType, dType)).setItemName("dDiamondMattock");
        gDiamondMattock = (new InfiToolMattock(diamondMattockID + 4, dLevel, (int)((float)dDur * gMod), dSpeed, dDam, dType, gType)).setItemName("gDiamondMattock");
        rDiamondMattock = (new InfiToolMattock(diamondMattockID + 5, dLevel, (int)((float)dDur * rMod), dSpeed, dDam, dType, rType)).setItemName("rDiamondMattock");
        oDiamondMattock = (new InfiToolMattock(diamondMattockID + 6, dLevel, (int)((float)dDur * oMod), dSpeed, dDam, dType, oType)).setItemName("oDiamondMattock");
        bDiamondMattock = (new InfiToolMattock(diamondMattockID + 7, dLevel, (int)((float)dDur * bMod), dSpeed, dDam, dType, bType)).setItemName("bDiamondMattock");
        mDiamondMattock = (new InfiToolMattock(diamondMattockID + 8, dLevel, (int)((float)dDur * mMod), dSpeed, dDam, dType, mType)).setItemName("mDiamondMattock");
        nDiamondMattock = (new InfiToolMattock(diamondMattockID + 9, dLevel, (int)((float)dDur * nMod), dSpeed, dDam, dType, nType)).setItemName("nDiamondMattock");
        glDiamondMattock = (new InfiToolMattock(diamondMattockID + 10, dLevel, (int)((float)dDur * glMod), dSpeed, dDam, dType, glType)).setItemName("glDiamondMattock");
        blDiamondMattock = (new InfiToolMattock(diamondMattockID + 11, dLevel, (int)((float)dDur * blMod), dSpeed, dDam, dType, blType)).setItemName("blDiamondMattock");
        wGoldMattock = (new InfiToolMattock(goldMattockID + 0, gLevel, (int)((float)gDur * wMod), gSpeed, gDam, gType, wType)).setItemName("wGoldMattock");
        stGoldMattock = (new InfiToolMattock(goldMattockID + 1, gLevel, (int)((float)gDur * stMod), gSpeed, gDam, gType, stType)).setItemName("stGoldMattock");
        gGoldMattock = (new InfiToolMattock(goldMattockID + 2, gLevel, (int)((float)gDur * gMod), gSpeed, gDam, gType, gType)).setItemName("gGoldMattock");
        oGoldMattock = (new InfiToolMattock(goldMattockID + 3, gLevel, (int)((float)gDur * oMod), gSpeed, gDam, gType, oType)).setItemName("oGoldMattock");
        saGoldMattock = (new InfiToolMattock(goldMattockID + 4, gLevel, (int)((float)gDur * saMod), gSpeed, gDam, gType, saType)).setItemName("saGoldMattock");
        bGoldMattock = (new InfiToolMattock(goldMattockID + 5, gLevel, (int)((float)gDur * bMod), gSpeed, gDam, gType, bType)).setItemName("bGoldMattock");
        mGoldMattock = (new InfiToolMattock(goldMattockID + 6, gLevel, (int)((float)gDur * mMod), gSpeed, gDam, gType, mType)).setItemName("mGoldMattock");
        nGoldMattock = (new InfiToolMattock(goldMattockID + 7, gLevel, (int)((float)gDur * nMod), gSpeed, gDam, gType, nType)).setItemName("nGoldMattock");
        glGoldMattock = (new InfiToolMattock(goldMattockID + 8, gLevel, (int)((float)gDur * glMod), gSpeed, gDam, gType, glType)).setItemName("glGoldMattock");
        iceGoldMattock = (new InfiToolMattock(goldMattockID + 9, gLevel, (int)((float)gDur * iceMod), gSpeed, gDam, gType, iceType)).setItemName("iceGoldMattock");
        sGoldMattock = (new InfiToolMattock(goldMattockID + 10, gLevel, (int)((float)gDur * sMod), gSpeed, gDam, gType, sType)).setItemName("sGoldMattock");
        fGoldMattock = (new InfiToolMattock(goldMattockID + 11, gLevel, (int)((float)gDur * fMod), gSpeed, gDam, gType, fType)).setItemName("fGoldMattock");
        wRedstoneMattock = (new InfiToolMattock(redstoneMattockID + 0, rLevel, (int)((float)rDur * wMod), rSpeed, rDam, rType, wType)).setItemName("wRedstoneMattock");
        stRedstoneMattock = (new InfiToolMattock(redstoneMattockID + 1, rLevel, (int)((float)rDur * stMod), rSpeed, rDam, rType, stType)).setItemName("stRedstoneMattock");
        iRedstoneMattock = (new InfiToolMattock(redstoneMattockID + 2, rLevel, (int)((float)rDur * iMod), rSpeed, rDam, rType, iType)).setItemName("iRedstoneMattock");
        dRedstoneMattock = (new InfiToolMattock(redstoneMattockID + 3, rLevel, (int)((float)rDur * dMod), rSpeed, rDam, rType, dType)).setItemName("dRedstoneMattock");
        rRedstoneMattock = (new InfiToolMattock(redstoneMattockID + 4, rLevel, (int)((float)rDur * rMod), rSpeed, rDam, rType, rType)).setItemName("rRedstoneMattock");
        oRedstoneMattock = (new InfiToolMattock(redstoneMattockID + 5, rLevel, (int)((float)rDur * oMod), rSpeed, rDam, rType, oType)).setItemName("oRedstoneMattock");
        bRedstoneMattock = (new InfiToolMattock(redstoneMattockID + 6, rLevel, (int)((float)rDur * bMod), rSpeed, rDam, rType, bType)).setItemName("bRedstoneMattock");
        mRedstoneMattock = (new InfiToolMattock(redstoneMattockID + 7, rLevel, (int)((float)rDur * mMod), rSpeed, rDam, rType, mType)).setItemName("mRedstoneMattock");
        glRedstoneMattock = (new InfiToolMattock(redstoneMattockID + 8, rLevel, (int)((float)rDur * glMod), rSpeed, rDam, rType, glType)).setItemName("glRedstoneMattock");
        sRedstoneMattock = (new InfiToolMattock(redstoneMattockID + 9, rLevel, (int)((float)rDur * sMod), rSpeed, rDam, rType, sType)).setItemName("sRedstoneMattock");
        blRedstoneMattock = (new InfiToolMattock(redstoneMattockID + 10, rLevel, (int)((float)rDur * blMod), rSpeed, rDam, rType, blType)).setItemName("blRedstoneMattock");
        wObsidianMattock = (new InfiToolMattock(obsidianMattockID + 0, oLevel, (int)((float)oDur * wMod), oSpeed, oDam, oType, wType)).setItemName("wObsidianMattock");
        stObsidianMattock = (new InfiToolMattock(obsidianMattockID + 1, oLevel, (int)((float)oDur * stMod), oSpeed, oDam, oType, stType)).setItemName("stObsidianMattock");
        iObsidianMattock = (new InfiToolMattock(obsidianMattockID + 2, oLevel, (int)((float)oDur * iMod), oSpeed, oDam, oType, iType)).setItemName("iObsidianMattock");
        dObsidianMattock = (new InfiToolMattock(obsidianMattockID + 3, oLevel, (int)((float)oDur * dMod), oSpeed, oDam, oType, dType)).setItemName("dObsidianMattock");
        gObsidianMattock = (new InfiToolMattock(obsidianMattockID + 4, oLevel, (int)((float)oDur * gMod), oSpeed, oDam, oType, gType)).setItemName("gObsidianMattock");
        rObsidianMattock = (new InfiToolMattock(obsidianMattockID + 5, oLevel, (int)((float)oDur * rMod), oSpeed, oDam, oType, rType)).setItemName("rObsidianMattock");
        oObsidianMattock = (new InfiToolMattock(obsidianMattockID + 6, oLevel, (int)((float)oDur * oMod), oSpeed, oDam, oType, oType)).setItemName("oObsidianMattock");
        bObsidianMattock = (new InfiToolMattock(obsidianMattockID + 7, oLevel, (int)((float)oDur * bMod), oSpeed, oDam, oType, bType)).setItemName("bObsidianMattock");
        nObsidianMattock = (new InfiToolMattock(obsidianMattockID + 8, oLevel, (int)((float)oDur * nMod), oSpeed, oDam, oType, nType)).setItemName("nObsidianMattock");
        glObsidianMattock = (new InfiToolMattock(obsidianMattockID + 9, oLevel, (int)((float)oDur * glMod), oSpeed, oDam, oType, glType)).setItemName("glObsidianMattock");
        sObsidianMattock = (new InfiToolMattock(obsidianMattockID + 10, oLevel, (int)((float)oDur * sMod), oSpeed, oDam, oType, sType)).setItemName("sObsidianMattock");
        fObsidianMattock = (new InfiToolMattock(obsidianMattockID + 11, oLevel, (int)((float)oDur * fMod), oSpeed, oDam, oType, fType)).setItemName("fObsidianMattock");
        blObsidianMattock = (new InfiToolMattock(obsidianMattockID + 12, oLevel, (int)((float)oDur * blMod), oSpeed, oDam, oType, blType)).setItemName("blObsidianMattock");
        wSandstoneMattock = (new InfiToolMattock(sandstoneMattockID + 0, saLevel, (int)((float)saDur * wMod), saSpeed, saDam, saType, wType)).setItemName("wSandstoneMattock");
        stSandstoneMattock = (new InfiToolMattock(sandstoneMattockID + 1, saLevel, (int)((float)saDur * stMod), saSpeed, saDam, saType, stType)).setItemName("stSandstoneMattock");
        saSandstoneMattock = (new InfiToolMattock(sandstoneMattockID + 2, saLevel, (int)((float)saDur * saMod), saSpeed, saDam, saType, saType)).setItemName("saSandstoneMattock");
        bSandstoneMattock = (new InfiToolMattock(sandstoneMattockID + 3, saLevel, (int)((float)saDur * bMod), saSpeed, saDam, saType, bType)).setItemName("bSandstoneMattock");
        pSandstoneMattock = (new InfiToolMattock(sandstoneMattockID + 4, saLevel, (int)((float)saDur * pMod), saSpeed, saDam, saType, pType)).setItemName("pSandstoneMattock");
        nSandstoneMattock = (new InfiToolMattock(sandstoneMattockID + 5, saLevel, (int)((float)saDur * nMod), saSpeed, saDam, saType, nType)).setItemName("nSandstoneMattock");
        iceSandstoneMattock = (new InfiToolMattock(sandstoneMattockID + 6, saLevel, (int)((float)saDur * iceMod), saSpeed, saDam, saType, iceType)).setItemName("iceSandstoneMattock");
        sSandstoneMattock = (new InfiToolMattock(sandstoneMattockID + 7, saLevel, (int)((float)saDur * sMod), saSpeed, saDam, saType, sType)).setItemName("sSandstoneMattock");
        cSandstoneMattock = (new InfiToolMattock(sandstoneMattockID + 8, saLevel, (int)((float)saDur * cMod), saSpeed, saDam, saType, cType)).setItemName("cSandstoneMattock");
        fSandstoneMattock = (new InfiToolMattock(sandstoneMattockID + 9, saLevel, (int)((float)saDur * fMod), saSpeed, saDam, saType, fType)).setItemName("fSandstoneMattock");
        brSandstoneMattock = (new InfiToolMattock(sandstoneMattockID + 10, saLevel, (int)((float)saDur * brMod), saSpeed, saDam, saType, brType)).setItemName("brSandstoneMattock");
        wBoneMattock = (new InfiToolMattock(boneMattockID + 0, bLevel, (int)((float)bDur * wMod), bSpeed, bDam, bType, wType)).setItemName("wBoneMattock");
        stBoneMattock = (new InfiToolMattock(boneMattockID + 1, bLevel, (int)((float)bDur * stMod), bSpeed, bDam, bType, stType)).setItemName("stBoneMattock");
        iBoneMattock = (new InfiToolMattock(boneMattockID + 2, bLevel, (int)((float)bDur * iMod), bSpeed, bDam, bType, iType)).setItemName("iBoneMattock");
        dBoneMattock = (new InfiToolMattock(boneMattockID + 3, bLevel, (int)((float)bDur * iMod), bSpeed, bDam, bType, dType)).setItemName("dBoneMattock");
        rBoneMattock = (new InfiToolMattock(boneMattockID + 4, bLevel, (int)((float)bDur * rMod), bSpeed, bDam, bType, rType)).setItemName("rBoneMattock");
        oBoneMattock = (new InfiToolMattock(boneMattockID + 5, bLevel, (int)((float)bDur * oMod), bSpeed, bDam, bType, oType)).setItemName("oBoneMattock");
        bBoneMattock = (new InfiToolMattock(boneMattockID + 6, bLevel, (int)((float)bDur * bMod), bSpeed, bDam, bType, bType)).setItemName("bBoneMattock");
        mBoneMattock = (new InfiToolMattock(boneMattockID + 7, bLevel, (int)((float)bDur * mMod), bSpeed, bDam, bType, mType)).setItemName("mBoneMattock");
        nBoneMattock = (new InfiToolMattock(boneMattockID + 8, bLevel, (int)((float)bDur * nMod), bSpeed, bDam, bType, nType)).setItemName("nBoneMattock");
        glBoneMattock = (new InfiToolMattock(boneMattockID + 9, bLevel, (int)((float)bDur * gMod), bSpeed, bDam, bType, glType)).setItemName("glBoneMattock");
        sBoneMattock = (new InfiToolMattock(boneMattockID + 10, bLevel, (int)((float)bDur * sMod), bSpeed, bDam, bType, sType)).setItemName("sBoneMattock");
        cBoneMattock = (new InfiToolMattock(boneMattockID + 11, bLevel, (int)((float)bDur * cMod), bSpeed, bDam, bType, cType)).setItemName("cBoneMattock");
        fBoneMattock = (new InfiToolMattock(boneMattockID + 12, bLevel, (int)((float)bDur * fMod), bSpeed, bDam, bType, fType)).setItemName("fBoneMattock");
        brBoneMattock = (new InfiToolMattock(boneMattockID + 13, bLevel, (int)((float)bDur * brMod), bSpeed, bDam, bType, brType)).setItemName("brBoneMattock");
        blBoneMattock = (new InfiToolMattock(boneMattockID + 14, bLevel, (int)((float)bDur * blMod), bSpeed, bDam, bType, blType)).setItemName("blBoneMattock");
        wPaperMattock = (new InfiToolMattock(paperMattockID + 0, pLevel, (int)((float)pDur * wMod), pSpeed, pDam, pType, wType)).setItemName("wPaperMattock");
        saPaperMattock = (new InfiToolMattock(paperMattockID + 1, pLevel, (int)((float)pDur * saMod), pSpeed, pDam, pType, saType)).setItemName("saPaperMattock");
        bPaperMattock = (new InfiToolMattock(paperMattockID + 2, pLevel, (int)((float)pDur * bMod), pSpeed, pDam, pType, bType)).setItemName("bPaperMattock");
        pPaperMattock = (new InfiToolMattock(paperMattockID + 3, pLevel, (int)((float)pDur * pMod), pSpeed, pDam, pType, pType)).setItemName("pPaperMattock");
        sPaperMattock = (new InfiToolMattock(paperMattockID + 4, pLevel, (int)((float)pDur * sMod), pSpeed, pDam, pType, sType)).setItemName("sPaperMattock");
        cPaperMattock = (new InfiToolMattock(paperMattockID + 5, pLevel, (int)((float)pDur * cMod), pSpeed, pDam, pType, cType)).setItemName("cPaperMattock");
        brPaperMattock = (new InfiToolMattock(paperMattockID + 6, pLevel, (int)((float)pDur * brMod), pSpeed, pDam, pType, brType)).setItemName("brPaperMattock");
        stMossyMattock = (new InfiToolMattock(mossyMattockID + 0, mLevel, (int)((float)mDur * stMod), mSpeed, mDam, mType, stType)).setItemName("stMossyMattock");
        dMossyMattock = (new InfiToolMattock(mossyMattockID + 1, mLevel, (int)((float)mDur * iMod), mSpeed, mDam, mType, dType)).setItemName("dMossyMattock");
        rMossyMattock = (new InfiToolMattock(mossyMattockID + 2, mLevel, (int)((float)mDur * rMod), mSpeed, mDam, mType, rType)).setItemName("rMossyMattock");
        bMossyMattock = (new InfiToolMattock(mossyMattockID + 3, mLevel, (int)((float)mDur * bMod), mSpeed, mDam, mType, bType)).setItemName("bMossyMattock");
        mMossyMattock = (new InfiToolMattock(mossyMattockID + 4, mLevel, (int)((float)mDur * mMod), mSpeed, mDam, mType, mType)).setItemName("mMossyMattock");
        glMossyMattock = (new InfiToolMattock(mossyMattockID + 5, mLevel, (int)((float)mDur * gMod), mSpeed, mDam, mType, glType)).setItemName("glMossyMattock");
        wNetherrackMattock = (new InfiToolMattock(netherrackMattockID + 0, nLevel, (int)((float)nDur * wMod), nSpeed, nDam, nType, wType)).setItemName("wNetherrackMattock");
        stNetherrackMattock = (new InfiToolMattock(netherrackMattockID + 1, nLevel, (int)((float)nDur * stMod), nSpeed, nDam, nType, stType)).setItemName("stNetherrackMattock");
        iNetherrackMattock = (new InfiToolMattock(netherrackMattockID + 2, nLevel, (int)((float)nDur * iMod), nSpeed, nDam, nType, iType)).setItemName("iNetherrackMattock");
        rNetherrackMattock = (new InfiToolMattock(netherrackMattockID + 3, nLevel, (int)((float)nDur * rMod), nSpeed, nDam, nType, rType)).setItemName("rNetherrackMattock");
        oNetherrackMattock = (new InfiToolMattock(netherrackMattockID + 4, nLevel, (int)((float)nDur * oMod), nSpeed, nDam, nType, oType)).setItemName("oNetherrackMattock");
        saNetherrackMattock = (new InfiToolMattock(netherrackMattockID + 5, nLevel, (int)((float)nDur * saMod), nSpeed, nDam, nType, saType)).setItemName("saNetherrackMattock");
        bNetherrackMattock = (new InfiToolMattock(netherrackMattockID + 6, nLevel, (int)((float)nDur * bMod), nSpeed, nDam, nType, bType)).setItemName("bNetherrackMattock");
        mNetherrackMattock = (new InfiToolMattock(netherrackMattockID + 7, nLevel, (int)((float)nDur * mMod), nSpeed, nDam, nType, mType)).setItemName("mNetherrackMattock");
        nNetherrackMattock = (new InfiToolMattock(netherrackMattockID + 8, nLevel, (int)((float)nDur * nMod), nSpeed, nDam, nType, nType)).setItemName("nNetherrackMattock");
        glNetherrackMattock = (new InfiToolMattock(netherrackMattockID + 9, nLevel, (int)((float)nDur * glMod), nSpeed, nDam, nType, glType)).setItemName("glNetherrackMattock");
        iceNetherrackMattock = (new InfiToolMattock(netherrackMattockID + 10, nLevel, (int)((float)nDur * iceMod), nSpeed, nDam, nType, iceType)).setItemName("iceNetherrackMattock");
        sNetherrackMattock = (new InfiToolMattock(netherrackMattockID + 11, nLevel, (int)((float)nDur * sMod), nSpeed, nDam, nType, sType)).setItemName("sNetherrackMattock");
        cNetherrackMattock = (new InfiToolMattock(netherrackMattockID + 12, nLevel, (int)((float)nDur * cMod), nSpeed, nDam, nType, cType)).setItemName("cNetherrackMattock");
        fNetherrackMattock = (new InfiToolMattock(netherrackMattockID + 13, nLevel, (int)((float)nDur * fMod), nSpeed, nDam, nType, fType)).setItemName("fNetherrackMattock");
        brNetherrackMattock = (new InfiToolMattock(netherrackMattockID + 14, nLevel, (int)((float)nDur * brMod), nSpeed, nDam, nType, brType)).setItemName("brNetherrackMattock");
        blNetherrackMattock = (new InfiToolMattock(netherrackMattockID + 15, nLevel, (int)((float)nDur * blMod), nSpeed, nDam, nType, blType)).setItemName("blNetherrackMattock");
        wGlowstoneMattock = (new InfiToolMattock(glowstoneMattockID + 0, glLevel, (int)((float)glDur * wMod), glSpeed, glDam, glType, wType)).setItemName("wGlowstoneMattock");
        stGlowstoneMattock = (new InfiToolMattock(glowstoneMattockID + 1, glLevel, (int)((float)glDur * stMod), glSpeed, glDam, glType, stType)).setItemName("stGlowstoneMattock");
        iGlowstoneMattock = (new InfiToolMattock(glowstoneMattockID + 2, glLevel, (int)((float)glDur * iMod), glSpeed, glDam, glType, iType)).setItemName("iGlowstoneMattock");
        dGlowstoneMattock = (new InfiToolMattock(glowstoneMattockID + 3, glLevel, (int)((float)glDur * iMod), glSpeed, glDam, glType, dType)).setItemName("dGlowstoneMattock");
        rGlowstoneMattock = (new InfiToolMattock(glowstoneMattockID + 4, glLevel, (int)((float)glDur * rMod), glSpeed, glDam, glType, rType)).setItemName("rGlowstoneMattock");
        oGlowstoneMattock = (new InfiToolMattock(glowstoneMattockID + 5, glLevel, (int)((float)glDur * oMod), glSpeed, glDam, glType, oType)).setItemName("oGlowstoneMattock");
        bGlowstoneMattock = (new InfiToolMattock(glowstoneMattockID + 6, glLevel, (int)((float)glDur * bMod), glSpeed, glDam, glType, bType)).setItemName("bGlowstoneMattock");
        mGlowstoneMattock = (new InfiToolMattock(glowstoneMattockID + 7, glLevel, (int)((float)glDur * mMod), glSpeed, glDam, glType, mType)).setItemName("mGlowstoneMattock");
        nGlowstoneMattock = (new InfiToolMattock(glowstoneMattockID + 8, glLevel, (int)((float)glDur * nMod), glSpeed, glDam, glType, nType)).setItemName("nGlowstoneMattock");
        glGlowstoneMattock = (new InfiToolMattock(glowstoneMattockID + 9, glLevel, (int)((float)glDur * gMod), glSpeed, glDam, glType, glType)).setItemName("glGlowstoneMattock");
        iceGlowstoneMattock = (new InfiToolMattock(glowstoneMattockID + 10, glLevel, (int)((float)glDur * iceMod), glSpeed, glDam, glType, iceType)).setItemName("iceGlowstoneMattock");
        lGlowstoneMattock = (new InfiToolMattock(glowstoneMattockID + 11, glLevel, (int)((float)glDur * gMod), glSpeed, glDam, glType, lType)).setItemName("lGlowstoneMattock");
        sGlowstoneMattock = (new InfiToolMattock(glowstoneMattockID + 12, glLevel, (int)((float)glDur * sMod), glSpeed, glDam, glType, sType)).setItemName("sGlowstoneMattock");
        blGlowstoneMattock = (new InfiToolMattock(glowstoneMattockID + 13, glLevel, (int)((float)glDur * blMod), glSpeed, glDam, glType, blType)).setItemName("blGlowstoneMattock");
        wIceMattock = (new InfiToolMattock(iceMattockID + 0, iceLevel, (int)((float)iceDur * wMod), iceSpeed, iceDam, iceType, wType)).setItemName("wIceMattock");
        stIceMattock = (new InfiToolMattock(iceMattockID + 1, iceLevel, (int)((float)iceDur * stMod), iceSpeed, iceDam, iceType, stType)).setItemName("stIceMattock");
        iIceMattock = (new InfiToolMattock(iceMattockID + 2, iceLevel, (int)((float)iceDur * iMod), iceSpeed, iceDam, iceType, iType)).setItemName("iIceMattock");
        dIceMattock = (new InfiToolMattock(iceMattockID + 3, iceLevel, (int)((float)iceDur * dMod), iceSpeed, iceDam, iceType, dType)).setItemName("dIceMattock");
        gIceMattock = (new InfiToolMattock(iceMattockID + 4, iceLevel, (int)((float)iceDur * gMod), iceSpeed, iceDam, iceType, gType)).setItemName("gIceMattock");
        rIceMattock = (new InfiToolMattock(iceMattockID + 5, iceLevel, (int)((float)iceDur * rMod), iceSpeed, iceDam, iceType, rType)).setItemName("rIceMattock");
        oIceMattock = (new InfiToolMattock(iceMattockID + 6, iceLevel, (int)((float)iceDur * oMod), iceSpeed, iceDam, iceType, oType)).setItemName("oIceMattock");
        saIceMattock = (new InfiToolMattock(iceMattockID + 7, iceLevel, (int)((float)iceDur * saMod), iceSpeed, iceDam, iceType, saType)).setItemName("saIceMattock");
        bIceMattock = (new InfiToolMattock(iceMattockID + 8, iceLevel, (int)((float)iceDur * bMod), iceSpeed, iceDam, iceType, bType)).setItemName("bIceMattock");
        glIceMattock = (new InfiToolMattock(iceMattockID + 9, iceLevel, (int)((float)iceDur * gMod), iceSpeed, iceDam, iceType, glType)).setItemName("glIceMattock");
        iceIceMattock = (new InfiToolMattock(iceMattockID + 10, iceLevel, (int)((float)iceDur * iMod), iceSpeed, iceDam, iceType, iceType)).setItemName("iceIceMattock");
        sIceMattock = (new InfiToolMattock(iceMattockID + 11, iceLevel, (int)((float)iceDur * sMod), iceSpeed, iceDam, iceType, sType)).setItemName("sIceMattock");
        cIceMattock = (new InfiToolMattock(iceMattockID + 12, iceLevel, (int)((float)iceDur * cMod), iceSpeed, iceDam, iceType, cType)).setItemName("cIceMattock");
        fIceMattock = (new InfiToolMattock(iceMattockID + 13, iceLevel, (int)((float)iceDur * fMod), iceSpeed, iceDam, iceType, fType)).setItemName("fIceMattock");
        brIceMattock = (new InfiToolMattock(iceMattockID + 14, iceLevel, (int)((float)iceDur * brMod), iceSpeed, iceDam, iceType, brType)).setItemName("brIceMattock");
        dLavaMattock = (new InfiToolMattock(lavaMattockID + 0, lLevel, (int)((float)lDur * iMod), lSpeed, lDam, lType, dType)).setItemName("dLavaMattock");
        rLavaMattock = (new InfiToolMattock(lavaMattockID + 1, lLevel, (int)((float)lDur * rMod), lSpeed, lDam, lType, rType)).setItemName("rLavaMattock");
        bLavaMattock = (new InfiToolMattock(lavaMattockID + 2, lLevel, (int)((float)lDur * bMod), lSpeed, lDam, lType, bType)).setItemName("bLavaMattock");
        nLavaMattock = (new InfiToolMattock(lavaMattockID + 3, lLevel, (int)((float)lDur * nMod), lSpeed, lDam, lType, nType)).setItemName("nLavaMattock");
        glLavaMattock = (new InfiToolMattock(lavaMattockID + 4, lLevel, (int)((float)lDur * gMod), lSpeed, lDam, lType, glType)).setItemName("glLavaMattock");
        lLavaMattock = (new InfiToolMattock(lavaMattockID + 5, lLevel, (int)((float)lDur * lMod), lSpeed, lDam, lType, lType)).setItemName("lLavaMattock");
        blLavaMattock = (new InfiToolMattock(lavaMattockID + 6, lLevel, (int)((float)lDur * blMod), lSpeed, lDam, lType, blType)).setItemName("blLavaMattock");
        wSlimeMattock = (new InfiToolMattock(slimeMattockID + 0, sLevel, (int)((float)sDur * wMod), sSpeed, sDam, sType, wType)).setItemName("wSlimeMattock");
        stSlimeMattock = (new InfiToolMattock(slimeMattockID + 1, sLevel, (int)((float)sDur * stMod), sSpeed, sDam, sType, stType)).setItemName("stSlimeMattock");
        iSlimeMattock = (new InfiToolMattock(slimeMattockID + 2, sLevel, (int)((float)sDur * iMod), sSpeed, sDam, sType, iType)).setItemName("iSlimeMattock");
        dSlimeMattock = (new InfiToolMattock(slimeMattockID + 3, sLevel, (int)((float)sDur * iMod), sSpeed, sDam, sType, dType)).setItemName("dSlimeMattock");
        gSlimeMattock = (new InfiToolMattock(slimeMattockID + 4, sLevel, (int)((float)sDur * gMod), sSpeed, sDam, sType, gType)).setItemName("gSlimeMattock");
        rSlimeMattock = (new InfiToolMattock(slimeMattockID + 5, sLevel, (int)((float)sDur * rMod), sSpeed, sDam, sType, rType)).setItemName("rSlimeMattock");
        oSlimeMattock = (new InfiToolMattock(slimeMattockID + 6, sLevel, (int)((float)sDur * oMod), sSpeed, sDam, sType, oType)).setItemName("oSlimeMattock");
        saSlimeMattock = (new InfiToolMattock(slimeMattockID + 7, sLevel, (int)((float)sDur * saMod), sSpeed, sDam, sType, saType)).setItemName("saSlimeMattock");
        bSlimeMattock = (new InfiToolMattock(slimeMattockID + 8, sLevel, (int)((float)sDur * bMod), sSpeed, sDam, sType, bType)).setItemName("bSlimeMattock");
        pSlimeMattock = (new InfiToolMattock(slimeMattockID + 9, sLevel, (int)((float)sDur * pMod), sSpeed, sDam, sType, pType)).setItemName("pSlimeMattock");
        mSlimeMattock = (new InfiToolMattock(slimeMattockID + 10, sLevel, (int)((float)sDur * mMod), sSpeed, sDam, sType, mType)).setItemName("mSlimeMattock");
        nSlimeMattock = (new InfiToolMattock(slimeMattockID + 11, sLevel, (int)((float)sDur * nMod), sSpeed, sDam, sType, nType)).setItemName("nSlimeMattock");
        glSlimeMattock = (new InfiToolMattock(slimeMattockID + 12, sLevel, (int)((float)sDur * gMod), sSpeed, sDam, sType, glType)).setItemName("glSlimeMattock");
        iceSlimeMattock = (new InfiToolMattock(slimeMattockID + 13, sLevel, (int)((float)sDur * iMod), sSpeed, sDam, sType, iceType)).setItemName("iceSlimeMattock");
        lSlimeMattock = (new InfiToolMattock(slimeMattockID + 14, sLevel, (int)((float)sDur * lMod), sSpeed, sDam, sType, lType)).setItemName("lSlimeMattock");
        sSlimeMattock = (new InfiToolMattock(slimeMattockID + 15, sLevel, (int)((float)sDur * sMod), sSpeed, sDam, sType, sType)).setItemName("sSlimeMattock");
        cSlimeMattock = (new InfiToolMattock(slimeMattockID + 16, sLevel, (int)((float)sDur * cMod), sSpeed, sDam, sType, cType)).setItemName("cSlimeMattock");
        fSlimeMattock = (new InfiToolMattock(slimeMattockID + 17, sLevel, (int)((float)sDur * fMod), sSpeed, sDam, sType, fType)).setItemName("fSlimeMattock");
        brSlimeMattock = (new InfiToolMattock(slimeMattockID + 18, sLevel, (int)((float)sDur * brMod), sSpeed, sDam, sType, brType)).setItemName("brSlimeMattock");
        blSlimeMattock = (new InfiToolMattock(slimeMattockID + 19, sLevel, (int)((float)sDur * blMod), sSpeed, sDam, sType, blType)).setItemName("blSlimeMattock");
        wCactusMattock = (new InfiToolMattock(cactusMattockID + 0, cLevel, (int)((float)cDur * wMod), cSpeed, cDam, cType, wType)).setItemName("wCactusMattock");
        stCactusMattock = (new InfiToolMattock(cactusMattockID + 1, cLevel, (int)((float)cDur * stMod), cSpeed, cDam, cType, stType)).setItemName("stCactusMattock");
        saCactusMattock = (new InfiToolMattock(cactusMattockID + 2, cLevel, (int)((float)cDur * saMod), cSpeed, cDam, cType, saType)).setItemName("saCactusMattock");
        bCactusMattock = (new InfiToolMattock(cactusMattockID + 3, cLevel, (int)((float)cDur * bMod), cSpeed, cDam, cType, bType)).setItemName("bCactusMattock");
        pCactusMattock = (new InfiToolMattock(cactusMattockID + 4, cLevel, (int)((float)cDur * pMod), cSpeed, cDam, cType, pType)).setItemName("pCactusMattock");
        nCactusMattock = (new InfiToolMattock(cactusMattockID + 5, cLevel, (int)((float)cDur * nMod), cSpeed, cDam, cType, nType)).setItemName("nCactusMattock");
        sCactusMattock = (new InfiToolMattock(cactusMattockID + 6, cLevel, (int)((float)cDur * sMod), cSpeed, cDam, cType, sType)).setItemName("sCactusMattock");
        cCactusMattock = (new InfiToolMattock(cactusMattockID + 7, cLevel, (int)((float)cDur * cMod), cSpeed, cDam, cType, cType)).setItemName("cCactusMattock");
        fCactusMattock = (new InfiToolMattock(cactusMattockID + 8, cLevel, (int)((float)cDur * fMod), cSpeed, cDam, cType, fType)).setItemName("fCactusMattock");
        brCactusMattock = (new InfiToolMattock(cactusMattockID + 9, cLevel, (int)((float)cDur * brMod), cSpeed, cDam, cType, brType)).setItemName("brCactusMattock");
        wFlintMattock = (new InfiToolMattock(flintMattockID + 0, fLevel, (int)((float)fDur * wMod), fSpeed, fDam, fType, wType)).setItemName("wFlintMattock");
        stFlintMattock = (new InfiToolMattock(flintMattockID + 1, fLevel, (int)((float)fDur * stMod), fSpeed, fDam, fType, stType)).setItemName("stFlintMattock");
        iFlintMattock = (new InfiToolMattock(flintMattockID + 2, fLevel, (int)((float)fDur * iMod), fSpeed, fDam, fType, iType)).setItemName("iFlintMattock");
        gFlintMattock = (new InfiToolMattock(flintMattockID + 3, fLevel, (int)((float)fDur * gMod), fSpeed, fDam, fType, gType)).setItemName("gFlintMattock");
        oFlintMattock = (new InfiToolMattock(flintMattockID + 4, fLevel, (int)((float)fDur * oMod), fSpeed, fDam, fType, oType)).setItemName("oFlintMattock");
        saFlintMattock = (new InfiToolMattock(flintMattockID + 5, fLevel, (int)((float)fDur * saMod), fSpeed, fDam, fType, saType)).setItemName("saFlintMattock");
        bFlintMattock = (new InfiToolMattock(flintMattockID + 6, fLevel, (int)((float)fDur * bMod), fSpeed, fDam, fType, bType)).setItemName("bFlintMattock");
        nFlintMattock = (new InfiToolMattock(flintMattockID + 7, fLevel, (int)((float)fDur * nMod), fSpeed, fDam, fType, nType)).setItemName("nFlintMattock");
        iceFlintMattock = (new InfiToolMattock(flintMattockID + 8, fLevel, (int)((float)fDur * wMod), fSpeed, fDam, fType, iceType)).setItemName("iceFlintMattock");
        sFlintMattock = (new InfiToolMattock(flintMattockID + 9, fLevel, (int)((float)fDur * sMod), fSpeed, fDam, fType, sType)).setItemName("sFlintMattock");
        cFlintMattock = (new InfiToolMattock(flintMattockID + 10, fLevel, (int)((float)fDur * cMod), fSpeed, fDam, fType, cType)).setItemName("cFlintMattock");
        fFlintMattock = (new InfiToolMattock(flintMattockID + 11, fLevel, (int)((float)fDur * fMod), fSpeed, fDam, fType, fType)).setItemName("fFlintMattock");
        brFlintMattock = (new InfiToolMattock(flintMattockID + 12, fLevel, (int)((float)fDur * brMod), fSpeed, fDam, fType, brType)).setItemName("brFlintMattock");
        blFlintMattock = (new InfiToolMattock(flintMattockID + 13, fLevel, (int)((float)fDur * blMod), fSpeed, fDam, fType, blType)).setItemName("blFlintMattock");
        wBrickMattock = (new InfiToolMattock(brickMattockID + 0, brLevel, (int)((float)brDur * wMod), brSpeed, brDam, brType, wType)).setItemName("wBrickMattock");
        stBrickMattock = (new InfiToolMattock(brickMattockID + 1, brLevel, (int)((float)brDur * stMod), brSpeed, brDam, brType, stType)).setItemName("stBrickMattock");
        saBrickMattock = (new InfiToolMattock(brickMattockID + 2, brLevel, (int)((float)brDur * saMod), brSpeed, brDam, brType, saType)).setItemName("saBrickMattock");
        bBrickMattock = (new InfiToolMattock(brickMattockID + 3, brLevel, (int)((float)brDur * bMod), brSpeed, brDam, brType, bType)).setItemName("bBrickMattock");
        pBrickMattock = (new InfiToolMattock(brickMattockID + 4, brLevel, (int)((float)brDur * pMod), brSpeed, brDam, brType, pType)).setItemName("pBrickMattock");
        nBrickMattock = (new InfiToolMattock(brickMattockID + 5, brLevel, (int)((float)brDur * nMod), brSpeed, brDam, brType, nType)).setItemName("nBrickMattock");
        iceBrickMattock = (new InfiToolMattock(brickMattockID + 6, brLevel, (int)((float)brDur * iceMod), brSpeed, brDam, brType, iceType)).setItemName("iceBrickMattock");
        sBrickMattock = (new InfiToolMattock(brickMattockID + 7, brLevel, (int)((float)brDur * sMod), brSpeed, brDam, brType, sType)).setItemName("sBrickMattock");
        cBrickMattock = (new InfiToolMattock(brickMattockID + 8, brLevel, (int)((float)brDur * cMod), brSpeed, brDam, brType, cType)).setItemName("cBrickMattock");
        fBrickMattock = (new InfiToolMattock(brickMattockID + 9, brLevel, (int)((float)brDur * fMod), brSpeed, brDam, brType, fType)).setItemName("fBrickMattock");
        brBrickMattock = (new InfiToolMattock(brickMattockID + 10, brLevel, (int)((float)brDur * brMod), brSpeed, brDam, brType, brType)).setItemName("brBrickMattock");
        dBlazeMattock = (new InfiToolMattock(blazeMattockID + 0, blLevel, (int)((float)blDur * dMod), blSpeed, blDam, blType, dType)).setItemName("wBlazeMattock");
        rBlazeMattock = (new InfiToolMattock(blazeMattockID + 1, blLevel, (int)((float)blDur * rMod), blSpeed, blDam, blType, rType)).setItemName("rBlazeMattock");
        bBlazeMattock = (new InfiToolMattock(blazeMattockID + 2, blLevel, (int)((float)blDur * bMod), blSpeed, blDam, blType, bType)).setItemName("bBlazeMattock");
        nBlazeMattock = (new InfiToolMattock(blazeMattockID + 3, blLevel, (int)((float)blDur * nMod), blSpeed, blDam, blType, nType)).setItemName("nBlazeMattock");
        glBlazeMattock = (new InfiToolMattock(blazeMattockID + 4, blLevel, (int)((float)blDur * glMod), blSpeed, blDam, blType, glType)).setItemName("glBlazeMattock");
        lBlazeMattock = (new InfiToolMattock(blazeMattockID + 5, blLevel, (int)((float)blDur * lMod), blSpeed, blDam, blType, lType)).setItemName("lBlazeMattock");
        fBlazeMattock = (new InfiToolMattock(blazeMattockID + 6, blLevel, (int)((float)blDur * fMod), blSpeed, blDam, blType, fType)).setItemName("fBlazeMattock");
        blBlazeMattock = (new InfiToolMattock(blazeMattockID + 7, blLevel, (int)((float)blDur * bMod), blSpeed, blDam, blType, bType)).setItemName("blBlazeMattock");
        wWoodHammer = (new InfiToolHammer(woodHammerID + 0, wLevel, (int)((float)wDur * wMod), wSpeed, wDam, wType, wType)).setItemName("wWoodHammer");
        stWoodHammer = (new InfiToolHammer(woodHammerID + 1, wLevel, (int)((float)wDur * stMod), wSpeed, wDam, wType, stType)).setItemName("stWoodHammer");
        saWoodHammer = (new InfiToolHammer(woodHammerID + 2, wLevel, (int)((float)wDur * saMod), wSpeed, wDam, wType, saType)).setItemName("saWoodHammer");
        bWoodHammer = (new InfiToolHammer(woodHammerID + 3, wLevel, (int)((float)wDur * bMod), wSpeed, wDam, wType, bType)).setItemName("bWoodHammer");
        pWoodHammer = (new InfiToolHammer(woodHammerID + 4, wLevel, (int)((float)wDur * pMod), wSpeed, wDam, wType, pType)).setItemName("pWoodHammer");
        nWoodHammer = (new InfiToolHammer(woodHammerID + 5, wLevel, (int)((float)wDur * nMod), wSpeed, wDam, wType, nType)).setItemName("nWoodHammer");
        sWoodHammer = (new InfiToolHammer(woodHammerID + 6, wLevel, (int)((float)wDur * sMod), wSpeed, wDam, wType, sType)).setItemName("sWoodHammer");
        cWoodHammer = (new InfiToolHammer(woodHammerID + 7, wLevel, (int)((float)wDur * cMod), wSpeed, wDam, wType, cType)).setItemName("cWoodHammer");
        fWoodHammer = (new InfiToolHammer(woodHammerID + 8, wLevel, (int)((float)wDur * fMod), wSpeed, wDam, wType, fType)).setItemName("fWoodHammer");
        brWoodHammer = (new InfiToolHammer(woodHammerID + 9, wLevel, (int)((float)wDur * brMod), wSpeed, wDam, wType, brType)).setItemName("brWoodHammer");
        wStoneHammer = (new InfiToolHammer(stoneHammerID + 0, stLevel, (int)((float)stDur * wMod), stSpeed, stDam, stType, wType)).setItemName("wStoneHammer");
        stStoneHammer = (new InfiToolHammer(stoneHammerID + 1, stLevel, (int)((float)stDur * stMod), stSpeed, stDam, stType, stType)).setItemName("stStoneHammer");
        saStoneHammer = (new InfiToolHammer(stoneHammerID + 2, stLevel, (int)((float)stDur * saMod), stSpeed, stDam, stType, saType)).setItemName("saStoneHammer");
        bStoneHammer = (new InfiToolHammer(stoneHammerID + 3, stLevel, (int)((float)stDur * bMod), stSpeed, stDam, stType, bType)).setItemName("bStoneHammer");
        pStoneHammer = (new InfiToolHammer(stoneHammerID + 4, stLevel, (int)((float)stDur * pMod), stSpeed, stDam, stType, pType)).setItemName("pStoneHammer");
        mStoneHammer = (new InfiToolHammer(stoneHammerID + 5, stLevel, (int)((float)stDur * mMod), stSpeed, stDam, stType, mType)).setItemName("mStoneHammer");
        nStoneHammer = (new InfiToolHammer(stoneHammerID + 6, stLevel, (int)((float)stDur * nMod), stSpeed, stDam, stType, nType)).setItemName("nStoneHammer");
        iceStoneHammer = (new InfiToolHammer(stoneHammerID + 7, stLevel, (int)((float)stDur * iceMod), stSpeed, stDam, stType, iceType)).setItemName("iceStoneHammer");
        sStoneHammer = (new InfiToolHammer(stoneHammerID + 8, stLevel, (int)((float)stDur * sMod), stSpeed, stDam, stType, sType)).setItemName("sStoneHammer");
        cStoneHammer = (new InfiToolHammer(stoneHammerID + 9, stLevel, (int)((float)stDur * cMod), stSpeed, stDam, stType, cType)).setItemName("cStoneHammer");
        fStoneHammer = (new InfiToolHammer(stoneHammerID + 10, stLevel, (int)((float)stDur * fMod), stSpeed, stDam, stType, fType)).setItemName("fStoneHammer");
        brStoneHammer = (new InfiToolHammer(stoneHammerID + 11, stLevel, (int)((float)stDur * brMod), stSpeed, stDam, stType, brType)).setItemName("brStoneHammer");
        wIronHammer = (new InfiToolHammer(ironHammerID + 0, iLevel, (int)((float)iDur * wMod), iSpeed, iDam, iType, wType)).setItemName("wIronHammer");
        stIronHammer = (new InfiToolHammer(ironHammerID + 1, iLevel, (int)((float)iDur * stMod), iSpeed, iDam, iType, stType)).setItemName("stIronHammer");
        iIronHammer = (new InfiToolHammer(ironHammerID + 2, iLevel, (int)((float)iDur * iMod), iSpeed, iDam, iType, iType)).setItemName("iIronHammer");
        dIronHammer = (new InfiToolHammer(ironHammerID + 3, iLevel, (int)((float)iDur * dMod), iSpeed, iDam, iType, dType)).setItemName("dIronHammer");
        gIronHammer = (new InfiToolHammer(ironHammerID + 4, iLevel, (int)((float)iDur * gMod), iSpeed, iDam, iType, gType)).setItemName("gIronHammer");
        rIronHammer = (new InfiToolHammer(ironHammerID + 5, iLevel, (int)((float)iDur * rMod), iSpeed, iDam, iType, rType)).setItemName("rIronHammer");
        oIronHammer = (new InfiToolHammer(ironHammerID + 6, iLevel, (int)((float)iDur * oMod), iSpeed, iDam, iType, oType)).setItemName("oIronHammer");
        bIronHammer = (new InfiToolHammer(ironHammerID + 7, iLevel, (int)((float)iDur * bMod), iSpeed, iDam, iType, bType)).setItemName("bIronHammer");
        nIronHammer = (new InfiToolHammer(ironHammerID + 8, iLevel, (int)((float)iDur * nMod), iSpeed, iDam, iType, nType)).setItemName("nIronHammer");
        glIronHammer = (new InfiToolHammer(ironHammerID + 9, iLevel, (int)((float)iDur * glMod), iSpeed, iDam, iType, glType)).setItemName("glIronHammer");
        iceIronHammer = (new InfiToolHammer(ironHammerID + 10, iLevel, (int)((float)iDur * iceMod), iSpeed, iDam, iType, iceType)).setItemName("iceIronHammer");
        sIronHammer = (new InfiToolHammer(ironHammerID + 11, iLevel, (int)((float)iDur * sMod), iSpeed, iDam, iType, sType)).setItemName("sIronHammer");
        blIronHammer = (new InfiToolHammer(ironHammerID + 12, iLevel, (int)((float)iDur * blMod), iSpeed, iDam, iType, blType)).setItemName("blIronHammer");
        wDiamondHammer = (new InfiToolHammer(diamondHammerID + 0, dLevel, (int)((float)dDur * wMod), dSpeed, dDam, dType, wType)).setItemName("wDiamondHammer");
        stDiamondHammer = (new InfiToolHammer(diamondHammerID + 1, dLevel, (int)((float)dDur * stMod), dSpeed, dDam, dType, stType)).setItemName("stDiamondHammer");
        iDiamondHammer = (new InfiToolHammer(diamondHammerID + 2, dLevel, (int)((float)dDur * iMod), dSpeed, dDam, dType, iType)).setItemName("iDiamondHammer");
        dDiamondHammer = (new InfiToolHammer(diamondHammerID + 3, dLevel, (int)((float)dDur * dMod), dSpeed, dDam, dType, dType)).setItemName("dDiamondHammer");
        gDiamondHammer = (new InfiToolHammer(diamondHammerID + 4, dLevel, (int)((float)dDur * gMod), dSpeed, dDam, dType, gType)).setItemName("gDiamondHammer");
        rDiamondHammer = (new InfiToolHammer(diamondHammerID + 5, dLevel, (int)((float)dDur * rMod), dSpeed, dDam, dType, rType)).setItemName("rDiamondHammer");
        oDiamondHammer = (new InfiToolHammer(diamondHammerID + 6, dLevel, (int)((float)dDur * oMod), dSpeed, dDam, dType, oType)).setItemName("oDiamondHammer");
        bDiamondHammer = (new InfiToolHammer(diamondHammerID + 7, dLevel, (int)((float)dDur * bMod), dSpeed, dDam, dType, bType)).setItemName("bDiamondHammer");
        mDiamondHammer = (new InfiToolHammer(diamondHammerID + 8, dLevel, (int)((float)dDur * mMod), dSpeed, dDam, dType, mType)).setItemName("mDiamondHammer");
        nDiamondHammer = (new InfiToolHammer(diamondHammerID + 9, dLevel, (int)((float)dDur * nMod), dSpeed, dDam, dType, nType)).setItemName("nDiamondHammer");
        glDiamondHammer = (new InfiToolHammer(diamondHammerID + 10, dLevel, (int)((float)dDur * glMod), dSpeed, dDam, dType, glType)).setItemName("glDiamondHammer");
        blDiamondHammer = (new InfiToolHammer(diamondHammerID + 11, dLevel, (int)((float)dDur * blMod), dSpeed, dDam, dType, blType)).setItemName("blDiamondHammer");
        wGoldHammer = (new InfiToolHammer(goldHammerID + 0, gLevel, (int)((float)gDur * wMod), gSpeed, gDam, gType, wType)).setItemName("wGoldHammer");
        stGoldHammer = (new InfiToolHammer(goldHammerID + 1, gLevel, (int)((float)gDur * stMod), gSpeed, gDam, gType, stType)).setItemName("stGoldHammer");
        gGoldHammer = (new InfiToolHammer(goldHammerID + 2, gLevel, (int)((float)gDur * gMod), gSpeed, gDam, gType, gType)).setItemName("gGoldHammer");
        oGoldHammer = (new InfiToolHammer(goldHammerID + 3, gLevel, (int)((float)gDur * oMod), gSpeed, gDam, gType, oType)).setItemName("oGoldHammer");
        saGoldHammer = (new InfiToolHammer(goldHammerID + 4, gLevel, (int)((float)gDur * saMod), gSpeed, gDam, gType, saType)).setItemName("saGoldHammer");
        bGoldHammer = (new InfiToolHammer(goldHammerID + 5, gLevel, (int)((float)gDur * bMod), gSpeed, gDam, gType, bType)).setItemName("bGoldHammer");
        mGoldHammer = (new InfiToolHammer(goldHammerID + 6, gLevel, (int)((float)gDur * mMod), gSpeed, gDam, gType, mType)).setItemName("mGoldHammer");
        nGoldHammer = (new InfiToolHammer(goldHammerID + 7, gLevel, (int)((float)gDur * nMod), gSpeed, gDam, gType, nType)).setItemName("nGoldHammer");
        glGoldHammer = (new InfiToolHammer(goldHammerID + 8, gLevel, (int)((float)gDur * glMod), gSpeed, gDam, gType, glType)).setItemName("glGoldHammer");
        iceGoldHammer = (new InfiToolHammer(goldHammerID + 9, gLevel, (int)((float)gDur * iceMod), gSpeed, gDam, gType, iceType)).setItemName("iceGoldHammer");
        sGoldHammer = (new InfiToolHammer(goldHammerID + 10, gLevel, (int)((float)gDur * sMod), gSpeed, gDam, gType, sType)).setItemName("sGoldHammer");
        fGoldHammer = (new InfiToolHammer(goldHammerID + 11, gLevel, (int)((float)gDur * fMod), gSpeed, gDam, gType, fType)).setItemName("fGoldHammer");
        wRedstoneHammer = (new InfiToolHammer(redstoneHammerID + 0, rLevel, (int)((float)rDur * wMod), rSpeed, rDam, rType, wType)).setItemName("wRedstoneHammer");
        stRedstoneHammer = (new InfiToolHammer(redstoneHammerID + 1, rLevel, (int)((float)rDur * stMod), rSpeed, rDam, rType, stType)).setItemName("stRedstoneHammer");
        iRedstoneHammer = (new InfiToolHammer(redstoneHammerID + 2, rLevel, (int)((float)rDur * iMod), rSpeed, rDam, rType, iType)).setItemName("iRedstoneHammer");
        dRedstoneHammer = (new InfiToolHammer(redstoneHammerID + 3, rLevel, (int)((float)rDur * dMod), rSpeed, rDam, rType, dType)).setItemName("dRedstoneHammer");
        rRedstoneHammer = (new InfiToolHammer(redstoneHammerID + 4, rLevel, (int)((float)rDur * rMod), rSpeed, rDam, rType, rType)).setItemName("rRedstoneHammer");
        oRedstoneHammer = (new InfiToolHammer(redstoneHammerID + 5, rLevel, (int)((float)rDur * oMod), rSpeed, rDam, rType, oType)).setItemName("oRedstoneHammer");
        bRedstoneHammer = (new InfiToolHammer(redstoneHammerID + 6, rLevel, (int)((float)rDur * bMod), rSpeed, rDam, rType, bType)).setItemName("bRedstoneHammer");
        mRedstoneHammer = (new InfiToolHammer(redstoneHammerID + 7, rLevel, (int)((float)rDur * mMod), rSpeed, rDam, rType, mType)).setItemName("mRedstoneHammer");
        glRedstoneHammer = (new InfiToolHammer(redstoneHammerID + 8, rLevel, (int)((float)rDur * glMod), rSpeed, rDam, rType, glType)).setItemName("glRedstoneHammer");
        sRedstoneHammer = (new InfiToolHammer(redstoneHammerID + 9, rLevel, (int)((float)rDur * sMod), rSpeed, rDam, rType, sType)).setItemName("sRedstoneHammer");
        blRedstoneHammer = (new InfiToolHammer(redstoneHammerID + 10, rLevel, (int)((float)rDur * blMod), rSpeed, rDam, rType, blType)).setItemName("blRedstoneHammer");
        wObsidianHammer = (new InfiToolHammer(obsidianHammerID + 0, oLevel, (int)((float)oDur * wMod), oSpeed, oDam, oType, wType)).setItemName("wObsidianHammer");
        stObsidianHammer = (new InfiToolHammer(obsidianHammerID + 1, oLevel, (int)((float)oDur * stMod), oSpeed, oDam, oType, stType)).setItemName("stObsidianHammer");
        iObsidianHammer = (new InfiToolHammer(obsidianHammerID + 2, oLevel, (int)((float)oDur * iMod), oSpeed, oDam, oType, iType)).setItemName("iObsidianHammer");
        dObsidianHammer = (new InfiToolHammer(obsidianHammerID + 3, oLevel, (int)((float)oDur * dMod), oSpeed, oDam, oType, dType)).setItemName("dObsidianHammer");
        gObsidianHammer = (new InfiToolHammer(obsidianHammerID + 4, oLevel, (int)((float)oDur * gMod), oSpeed, oDam, oType, gType)).setItemName("gObsidianHammer");
        rObsidianHammer = (new InfiToolHammer(obsidianHammerID + 5, oLevel, (int)((float)oDur * rMod), oSpeed, oDam, oType, rType)).setItemName("rObsidianHammer");
        oObsidianHammer = (new InfiToolHammer(obsidianHammerID + 6, oLevel, (int)((float)oDur * oMod), oSpeed, oDam, oType, oType)).setItemName("oObsidianHammer");
        bObsidianHammer = (new InfiToolHammer(obsidianHammerID + 7, oLevel, (int)((float)oDur * bMod), oSpeed, oDam, oType, bType)).setItemName("bObsidianHammer");
        nObsidianHammer = (new InfiToolHammer(obsidianHammerID + 8, oLevel, (int)((float)oDur * nMod), oSpeed, oDam, oType, nType)).setItemName("nObsidianHammer");
        glObsidianHammer = (new InfiToolHammer(obsidianHammerID + 9, oLevel, (int)((float)oDur * glMod), oSpeed, oDam, oType, glType)).setItemName("glObsidianHammer");
        sObsidianHammer = (new InfiToolHammer(obsidianHammerID + 10, oLevel, (int)((float)oDur * sMod), oSpeed, oDam, oType, sType)).setItemName("sObsidianHammer");
        fObsidianHammer = (new InfiToolHammer(obsidianHammerID + 11, oLevel, (int)((float)oDur * fMod), oSpeed, oDam, oType, fType)).setItemName("fObsidianHammer");
        blObsidianHammer = (new InfiToolHammer(obsidianHammerID + 12, oLevel, (int)((float)oDur * blMod), oSpeed, oDam, oType, blType)).setItemName("blObsidianHammer");
        wSandstoneHammer = (new InfiToolHammer(sandstoneHammerID + 0, saLevel, (int)((float)saDur * wMod), saSpeed, saDam, saType, wType)).setItemName("wSandstoneHammer");
        stSandstoneHammer = (new InfiToolHammer(sandstoneHammerID + 1, saLevel, (int)((float)saDur * stMod), saSpeed, saDam, saType, stType)).setItemName("stSandstoneHammer");
        saSandstoneHammer = (new InfiToolHammer(sandstoneHammerID + 2, saLevel, (int)((float)saDur * saMod), saSpeed, saDam, saType, saType)).setItemName("saSandstoneHammer");
        bSandstoneHammer = (new InfiToolHammer(sandstoneHammerID + 3, saLevel, (int)((float)saDur * bMod), saSpeed, saDam, saType, bType)).setItemName("bSandstoneHammer");
        pSandstoneHammer = (new InfiToolHammer(sandstoneHammerID + 4, saLevel, (int)((float)saDur * pMod), saSpeed, saDam, saType, pType)).setItemName("pSandstoneHammer");
        nSandstoneHammer = (new InfiToolHammer(sandstoneHammerID + 5, saLevel, (int)((float)saDur * nMod), saSpeed, saDam, saType, nType)).setItemName("nSandstoneHammer");
        iceSandstoneHammer = (new InfiToolHammer(sandstoneHammerID + 6, saLevel, (int)((float)saDur * iceMod), saSpeed, saDam, saType, iceType)).setItemName("iceSandstoneHammer");
        sSandstoneHammer = (new InfiToolHammer(sandstoneHammerID + 7, saLevel, (int)((float)saDur * sMod), saSpeed, saDam, saType, sType)).setItemName("sSandstoneHammer");
        cSandstoneHammer = (new InfiToolHammer(sandstoneHammerID + 8, saLevel, (int)((float)saDur * cMod), saSpeed, saDam, saType, cType)).setItemName("cSandstoneHammer");
        fSandstoneHammer = (new InfiToolHammer(sandstoneHammerID + 9, saLevel, (int)((float)saDur * fMod), saSpeed, saDam, saType, fType)).setItemName("fSandstoneHammer");
        brSandstoneHammer = (new InfiToolHammer(sandstoneHammerID + 10, saLevel, (int)((float)saDur * brMod), saSpeed, saDam, saType, brType)).setItemName("brSandstoneHammer");
        wBoneHammer = (new InfiToolHammer(boneHammerID + 0, bLevel, (int)((float)bDur * wMod), bSpeed, bDam, bType, wType)).setItemName("wBoneHammer");
        stBoneHammer = (new InfiToolHammer(boneHammerID + 1, bLevel, (int)((float)bDur * stMod), bSpeed, bDam, bType, stType)).setItemName("stBoneHammer");
        iBoneHammer = (new InfiToolHammer(boneHammerID + 2, bLevel, (int)((float)bDur * iMod), bSpeed, bDam, bType, iType)).setItemName("iBoneHammer");
        dBoneHammer = (new InfiToolHammer(boneHammerID + 3, bLevel, (int)((float)bDur * iMod), bSpeed, bDam, bType, dType)).setItemName("dBoneHammer");
        rBoneHammer = (new InfiToolHammer(boneHammerID + 4, bLevel, (int)((float)bDur * rMod), bSpeed, bDam, bType, rType)).setItemName("rBoneHammer");
        oBoneHammer = (new InfiToolHammer(boneHammerID + 5, bLevel, (int)((float)bDur * oMod), bSpeed, bDam, bType, oType)).setItemName("oBoneHammer");
        bBoneHammer = (new InfiToolHammer(boneHammerID + 6, bLevel, (int)((float)bDur * bMod), bSpeed, bDam, bType, bType)).setItemName("bBoneHammer");
        mBoneHammer = (new InfiToolHammer(boneHammerID + 7, bLevel, (int)((float)bDur * mMod), bSpeed, bDam, bType, mType)).setItemName("mBoneHammer");
        nBoneHammer = (new InfiToolHammer(boneHammerID + 8, bLevel, (int)((float)bDur * nMod), bSpeed, bDam, bType, nType)).setItemName("nBoneHammer");
        glBoneHammer = (new InfiToolHammer(boneHammerID + 9, bLevel, (int)((float)bDur * gMod), bSpeed, bDam, bType, glType)).setItemName("glBoneHammer");
        sBoneHammer = (new InfiToolHammer(boneHammerID + 10, bLevel, (int)((float)bDur * sMod), bSpeed, bDam, bType, sType)).setItemName("sBoneHammer");
        cBoneHammer = (new InfiToolHammer(boneHammerID + 11, bLevel, (int)((float)bDur * cMod), bSpeed, bDam, bType, cType)).setItemName("cBoneHammer");
        fBoneHammer = (new InfiToolHammer(boneHammerID + 12, bLevel, (int)((float)bDur * fMod), bSpeed, bDam, bType, fType)).setItemName("fBoneHammer");
        brBoneHammer = (new InfiToolHammer(boneHammerID + 13, bLevel, (int)((float)bDur * brMod), bSpeed, bDam, bType, brType)).setItemName("brBoneHammer");
        blBoneHammer = (new InfiToolHammer(boneHammerID + 14, bLevel, (int)((float)bDur * blMod), bSpeed, bDam, bType, blType)).setItemName("blBoneHammer");
        wPaperHammer = (new InfiToolHammer(paperHammerID + 0, pLevel, (int)((float)pDur * wMod), pSpeed, pDam, pType, wType)).setItemName("wPaperHammer");
        saPaperHammer = (new InfiToolHammer(paperHammerID + 1, pLevel, (int)((float)pDur * saMod), pSpeed, pDam, pType, saType)).setItemName("saPaperHammer");
        bPaperHammer = (new InfiToolHammer(paperHammerID + 2, pLevel, (int)((float)pDur * bMod), pSpeed, pDam, pType, bType)).setItemName("bPaperHammer");
        pPaperHammer = (new InfiToolHammer(paperHammerID + 3, pLevel, (int)((float)pDur * pMod), pSpeed, pDam, pType, pType)).setItemName("pPaperHammer");
        sPaperHammer = (new InfiToolHammer(paperHammerID + 4, pLevel, (int)((float)pDur * sMod), pSpeed, pDam, pType, sType)).setItemName("sPaperHammer");
        cPaperHammer = (new InfiToolHammer(paperHammerID + 5, pLevel, (int)((float)pDur * cMod), pSpeed, pDam, pType, cType)).setItemName("cPaperHammer");
        brPaperHammer = (new InfiToolHammer(paperHammerID + 6, pLevel, (int)((float)pDur * brMod), pSpeed, pDam, pType, brType)).setItemName("brPaperHammer");
        stMossyHammer = (new InfiToolHammer(mossyHammerID + 0, mLevel, (int)((float)mDur * stMod), mSpeed, mDam, mType, stType)).setItemName("stMossyHammer");
        dMossyHammer = (new InfiToolHammer(mossyHammerID + 1, mLevel, (int)((float)mDur * iMod), mSpeed, mDam, mType, dType)).setItemName("dMossyHammer");
        rMossyHammer = (new InfiToolHammer(mossyHammerID + 2, mLevel, (int)((float)mDur * rMod), mSpeed, mDam, mType, rType)).setItemName("rMossyHammer");
        bMossyHammer = (new InfiToolHammer(mossyHammerID + 3, mLevel, (int)((float)mDur * bMod), mSpeed, mDam, mType, bType)).setItemName("bMossyHammer");
        mMossyHammer = (new InfiToolHammer(mossyHammerID + 4, mLevel, (int)((float)mDur * mMod), mSpeed, mDam, mType, mType)).setItemName("mMossyHammer");
        glMossyHammer = (new InfiToolHammer(mossyHammerID + 5, mLevel, (int)((float)mDur * gMod), mSpeed, mDam, mType, glType)).setItemName("glMossyHammer");
        wNetherrackHammer = (new InfiToolHammer(netherrackHammerID + 0, nLevel, (int)((float)nDur * wMod), nSpeed, nDam, nType, wType)).setItemName("wNetherrackHammer");
        stNetherrackHammer = (new InfiToolHammer(netherrackHammerID + 1, nLevel, (int)((float)nDur * stMod), nSpeed, nDam, nType, stType)).setItemName("stNetherrackHammer");
        iNetherrackHammer = (new InfiToolHammer(netherrackHammerID + 2, nLevel, (int)((float)nDur * iMod), nSpeed, nDam, nType, iType)).setItemName("iNetherrackHammer");
        rNetherrackHammer = (new InfiToolHammer(netherrackHammerID + 3, nLevel, (int)((float)nDur * rMod), nSpeed, nDam, nType, rType)).setItemName("rNetherrackHammer");
        oNetherrackHammer = (new InfiToolHammer(netherrackHammerID + 4, nLevel, (int)((float)nDur * oMod), nSpeed, nDam, nType, oType)).setItemName("oNetherrackHammer");
        saNetherrackHammer = (new InfiToolHammer(netherrackHammerID + 5, nLevel, (int)((float)nDur * saMod), nSpeed, nDam, nType, saType)).setItemName("saNetherrackHammer");
        bNetherrackHammer = (new InfiToolHammer(netherrackHammerID + 6, nLevel, (int)((float)nDur * bMod), nSpeed, nDam, nType, bType)).setItemName("bNetherrackHammer");
        mNetherrackHammer = (new InfiToolHammer(netherrackHammerID + 7, nLevel, (int)((float)nDur * mMod), nSpeed, nDam, nType, mType)).setItemName("mNetherrackHammer");
        nNetherrackHammer = (new InfiToolHammer(netherrackHammerID + 8, nLevel, (int)((float)nDur * nMod), nSpeed, nDam, nType, nType)).setItemName("nNetherrackHammer");
        glNetherrackHammer = (new InfiToolHammer(netherrackHammerID + 9, nLevel, (int)((float)nDur * glMod), nSpeed, nDam, nType, glType)).setItemName("glNetherrackHammer");
        iceNetherrackHammer = (new InfiToolHammer(netherrackHammerID + 10, nLevel, (int)((float)nDur * iceMod), nSpeed, nDam, nType, iceType)).setItemName("iceNetherrackHammer");
        sNetherrackHammer = (new InfiToolHammer(netherrackHammerID + 11, nLevel, (int)((float)nDur * sMod), nSpeed, nDam, nType, sType)).setItemName("sNetherrackHammer");
        cNetherrackHammer = (new InfiToolHammer(netherrackHammerID + 12, nLevel, (int)((float)nDur * cMod), nSpeed, nDam, nType, cType)).setItemName("cNetherrackHammer");
        fNetherrackHammer = (new InfiToolHammer(netherrackHammerID + 13, nLevel, (int)((float)nDur * fMod), nSpeed, nDam, nType, fType)).setItemName("fNetherrackHammer");
        brNetherrackHammer = (new InfiToolHammer(netherrackHammerID + 14, nLevel, (int)((float)nDur * brMod), nSpeed, nDam, nType, brType)).setItemName("brNetherrackHammer");
        blNetherrackHammer = (new InfiToolHammer(netherrackHammerID + 15, nLevel, (int)((float)nDur * blMod), nSpeed, nDam, nType, blType)).setItemName("blNetherrackHammer");
        wGlowstoneHammer = (new InfiToolHammer(glowstoneHammerID + 0, glLevel, (int)((float)glDur * wMod), glSpeed, glDam, glType, wType)).setItemName("wGlowstoneHammer");
        stGlowstoneHammer = (new InfiToolHammer(glowstoneHammerID + 1, glLevel, (int)((float)glDur * stMod), glSpeed, glDam, glType, stType)).setItemName("stGlowstoneHammer");
        iGlowstoneHammer = (new InfiToolHammer(glowstoneHammerID + 2, glLevel, (int)((float)glDur * iMod), glSpeed, glDam, glType, iType)).setItemName("iGlowstoneHammer");
        dGlowstoneHammer = (new InfiToolHammer(glowstoneHammerID + 3, glLevel, (int)((float)glDur * iMod), glSpeed, glDam, glType, dType)).setItemName("dGlowstoneHammer");
        rGlowstoneHammer = (new InfiToolHammer(glowstoneHammerID + 4, glLevel, (int)((float)glDur * rMod), glSpeed, glDam, glType, rType)).setItemName("rGlowstoneHammer");
        oGlowstoneHammer = (new InfiToolHammer(glowstoneHammerID + 5, glLevel, (int)((float)glDur * oMod), glSpeed, glDam, glType, oType)).setItemName("oGlowstoneHammer");
        bGlowstoneHammer = (new InfiToolHammer(glowstoneHammerID + 6, glLevel, (int)((float)glDur * bMod), glSpeed, glDam, glType, bType)).setItemName("bGlowstoneHammer");
        mGlowstoneHammer = (new InfiToolHammer(glowstoneHammerID + 7, glLevel, (int)((float)glDur * mMod), glSpeed, glDam, glType, mType)).setItemName("mGlowstoneHammer");
        nGlowstoneHammer = (new InfiToolHammer(glowstoneHammerID + 8, glLevel, (int)((float)glDur * nMod), glSpeed, glDam, glType, nType)).setItemName("nGlowstoneHammer");
        glGlowstoneHammer = (new InfiToolHammer(glowstoneHammerID + 9, glLevel, (int)((float)glDur * gMod), glSpeed, glDam, glType, glType)).setItemName("glGlowstoneHammer");
        iceGlowstoneHammer = (new InfiToolHammer(glowstoneHammerID + 10, glLevel, (int)((float)glDur * iceMod), glSpeed, glDam, glType, iceType)).setItemName("iceGlowstoneHammer");
        lGlowstoneHammer = (new InfiToolHammer(glowstoneHammerID + 11, glLevel, (int)((float)glDur * gMod), glSpeed, glDam, glType, lType)).setItemName("lGlowstoneHammer");
        sGlowstoneHammer = (new InfiToolHammer(glowstoneHammerID + 12, glLevel, (int)((float)glDur * sMod), glSpeed, glDam, glType, sType)).setItemName("sGlowstoneHammer");
        blGlowstoneHammer = (new InfiToolHammer(glowstoneHammerID + 13, glLevel, (int)((float)glDur * blMod), glSpeed, glDam, glType, blType)).setItemName("blGlowstoneHammer");
        wIceHammer = (new InfiToolHammer(iceHammerID + 0, iceLevel, (int)((float)iceDur * wMod), iceSpeed, iceDam, iceType, wType)).setItemName("wIceHammer");
        stIceHammer = (new InfiToolHammer(iceHammerID + 1, iceLevel, (int)((float)iceDur * stMod), iceSpeed, iceDam, iceType, stType)).setItemName("stIceHammer");
        iIceHammer = (new InfiToolHammer(iceHammerID + 2, iceLevel, (int)((float)iceDur * iMod), iceSpeed, iceDam, iceType, iType)).setItemName("iIceHammer");
        dIceHammer = (new InfiToolHammer(iceHammerID + 3, iceLevel, (int)((float)iceDur * dMod), iceSpeed, iceDam, iceType, dType)).setItemName("dIceHammer");
        gIceHammer = (new InfiToolHammer(iceHammerID + 4, iceLevel, (int)((float)iceDur * gMod), iceSpeed, iceDam, iceType, gType)).setItemName("gIceHammer");
        rIceHammer = (new InfiToolHammer(iceHammerID + 5, iceLevel, (int)((float)iceDur * rMod), iceSpeed, iceDam, iceType, rType)).setItemName("rIceHammer");
        oIceHammer = (new InfiToolHammer(iceHammerID + 6, iceLevel, (int)((float)iceDur * oMod), iceSpeed, iceDam, iceType, oType)).setItemName("oIceHammer");
        saIceHammer = (new InfiToolHammer(iceHammerID + 7, iceLevel, (int)((float)iceDur * saMod), iceSpeed, iceDam, iceType, saType)).setItemName("saIceHammer");
        bIceHammer = (new InfiToolHammer(iceHammerID + 8, iceLevel, (int)((float)iceDur * bMod), iceSpeed, iceDam, iceType, bType)).setItemName("bIceHammer");
        glIceHammer = (new InfiToolHammer(iceHammerID + 9, iceLevel, (int)((float)iceDur * gMod), iceSpeed, iceDam, iceType, glType)).setItemName("glIceHammer");
        iceIceHammer = (new InfiToolHammer(iceHammerID + 10, iceLevel, (int)((float)iceDur * iMod), iceSpeed, iceDam, iceType, iceType)).setItemName("iceIceHammer");
        sIceHammer = (new InfiToolHammer(iceHammerID + 11, iceLevel, (int)((float)iceDur * sMod), iceSpeed, iceDam, iceType, sType)).setItemName("sIceHammer");
        cIceHammer = (new InfiToolHammer(iceHammerID + 12, iceLevel, (int)((float)iceDur * cMod), iceSpeed, iceDam, iceType, cType)).setItemName("cIceHammer");
        fIceHammer = (new InfiToolHammer(iceHammerID + 13, iceLevel, (int)((float)iceDur * fMod), iceSpeed, iceDam, iceType, fType)).setItemName("fIceHammer");
        brIceHammer = (new InfiToolHammer(iceHammerID + 14, iceLevel, (int)((float)iceDur * brMod), iceSpeed, iceDam, iceType, brType)).setItemName("brIceHammer");
        dLavaHammer = (new InfiToolHammer(lavaHammerID + 0, lLevel, (int)((float)lDur * iMod), lSpeed, lDam, lType, dType)).setItemName("dLavaHammer");
        rLavaHammer = (new InfiToolHammer(lavaHammerID + 1, lLevel, (int)((float)lDur * rMod), lSpeed, lDam, lType, rType)).setItemName("rLavaHammer");
        bLavaHammer = (new InfiToolHammer(lavaHammerID + 2, lLevel, (int)((float)lDur * bMod), lSpeed, lDam, lType, bType)).setItemName("bLavaHammer");
        nLavaHammer = (new InfiToolHammer(lavaHammerID + 3, lLevel, (int)((float)lDur * nMod), lSpeed, lDam, lType, nType)).setItemName("nLavaHammer");
        glLavaHammer = (new InfiToolHammer(lavaHammerID + 4, lLevel, (int)((float)lDur * gMod), lSpeed, lDam, lType, glType)).setItemName("glLavaHammer");
        lLavaHammer = (new InfiToolHammer(lavaHammerID + 5, lLevel, (int)((float)lDur * lMod), lSpeed, lDam, lType, lType)).setItemName("lLavaHammer");
        blLavaHammer = (new InfiToolHammer(lavaHammerID + 6, lLevel, (int)((float)lDur * blMod), lSpeed, lDam, lType, blType)).setItemName("blLavaHammer");
        wSlimeHammer = (new InfiToolHammer(slimeHammerID + 0, sLevel, (int)((float)sDur * wMod), sSpeed, sDam, sType, wType)).setItemName("wSlimeHammer");
        stSlimeHammer = (new InfiToolHammer(slimeHammerID + 1, sLevel, (int)((float)sDur * stMod), sSpeed, sDam, sType, stType)).setItemName("stSlimeHammer");
        iSlimeHammer = (new InfiToolHammer(slimeHammerID + 2, sLevel, (int)((float)sDur * iMod), sSpeed, sDam, sType, iType)).setItemName("iSlimeHammer");
        dSlimeHammer = (new InfiToolHammer(slimeHammerID + 3, sLevel, (int)((float)sDur * iMod), sSpeed, sDam, sType, dType)).setItemName("dSlimeHammer");
        gSlimeHammer = (new InfiToolHammer(slimeHammerID + 4, sLevel, (int)((float)sDur * gMod), sSpeed, sDam, sType, gType)).setItemName("gSlimeHammer");
        rSlimeHammer = (new InfiToolHammer(slimeHammerID + 5, sLevel, (int)((float)sDur * rMod), sSpeed, sDam, sType, rType)).setItemName("rSlimeHammer");
        oSlimeHammer = (new InfiToolHammer(slimeHammerID + 6, sLevel, (int)((float)sDur * oMod), sSpeed, sDam, sType, oType)).setItemName("oSlimeHammer");
        saSlimeHammer = (new InfiToolHammer(slimeHammerID + 7, sLevel, (int)((float)sDur * saMod), sSpeed, sDam, sType, saType)).setItemName("saSlimeHammer");
        bSlimeHammer = (new InfiToolHammer(slimeHammerID + 8, sLevel, (int)((float)sDur * bMod), sSpeed, sDam, sType, bType)).setItemName("bSlimeHammer");
        pSlimeHammer = (new InfiToolHammer(slimeHammerID + 9, sLevel, (int)((float)sDur * pMod), sSpeed, sDam, sType, pType)).setItemName("pSlimeHammer");
        mSlimeHammer = (new InfiToolHammer(slimeHammerID + 10, sLevel, (int)((float)sDur * mMod), sSpeed, sDam, sType, mType)).setItemName("mSlimeHammer");
        nSlimeHammer = (new InfiToolHammer(slimeHammerID + 11, sLevel, (int)((float)sDur * nMod), sSpeed, sDam, sType, nType)).setItemName("nSlimeHammer");
        glSlimeHammer = (new InfiToolHammer(slimeHammerID + 12, sLevel, (int)((float)sDur * gMod), sSpeed, sDam, sType, glType)).setItemName("glSlimeHammer");
        iceSlimeHammer = (new InfiToolHammer(slimeHammerID + 13, sLevel, (int)((float)sDur * iMod), sSpeed, sDam, sType, iceType)).setItemName("iceSlimeHammer");
        lSlimeHammer = (new InfiToolHammer(slimeHammerID + 14, sLevel, (int)((float)sDur * lMod), sSpeed, sDam, sType, lType)).setItemName("lSlimeHammer");
        sSlimeHammer = (new InfiToolHammer(slimeHammerID + 15, sLevel, (int)((float)sDur * sMod), sSpeed, sDam, sType, sType)).setItemName("sSlimeHammer");
        cSlimeHammer = (new InfiToolHammer(slimeHammerID + 16, sLevel, (int)((float)sDur * cMod), sSpeed, sDam, sType, cType)).setItemName("cSlimeHammer");
        fSlimeHammer = (new InfiToolHammer(slimeHammerID + 17, sLevel, (int)((float)sDur * fMod), sSpeed, sDam, sType, fType)).setItemName("fSlimeHammer");
        brSlimeHammer = (new InfiToolHammer(slimeHammerID + 18, sLevel, (int)((float)sDur * brMod), sSpeed, sDam, sType, brType)).setItemName("brSlimeHammer");
        blSlimeHammer = (new InfiToolHammer(slimeHammerID + 19, sLevel, (int)((float)sDur * blMod), sSpeed, sDam, sType, blType)).setItemName("blSlimeHammer");
        wCactusHammer = (new InfiToolHammer(cactusHammerID + 0, cLevel, (int)((float)cDur * wMod), cSpeed, cDam, cType, wType)).setItemName("wCactusHammer");
        stCactusHammer = (new InfiToolHammer(cactusHammerID + 1, cLevel, (int)((float)cDur * stMod), cSpeed, cDam, cType, stType)).setItemName("stCactusHammer");
        saCactusHammer = (new InfiToolHammer(cactusHammerID + 2, cLevel, (int)((float)cDur * saMod), cSpeed, cDam, cType, saType)).setItemName("saCactusHammer");
        bCactusHammer = (new InfiToolHammer(cactusHammerID + 3, cLevel, (int)((float)cDur * bMod), cSpeed, cDam, cType, bType)).setItemName("bCactusHammer");
        pCactusHammer = (new InfiToolHammer(cactusHammerID + 4, cLevel, (int)((float)cDur * pMod), cSpeed, cDam, cType, pType)).setItemName("pCactusHammer");
        nCactusHammer = (new InfiToolHammer(cactusHammerID + 5, cLevel, (int)((float)cDur * nMod), cSpeed, cDam, cType, nType)).setItemName("nCactusHammer");
        sCactusHammer = (new InfiToolHammer(cactusHammerID + 6, cLevel, (int)((float)cDur * sMod), cSpeed, cDam, cType, sType)).setItemName("sCactusHammer");
        cCactusHammer = (new InfiToolHammer(cactusHammerID + 7, cLevel, (int)((float)cDur * cMod), cSpeed, cDam, cType, cType)).setItemName("cCactusHammer");
        fCactusHammer = (new InfiToolHammer(cactusHammerID + 8, cLevel, (int)((float)cDur * fMod), cSpeed, cDam, cType, fType)).setItemName("fCactusHammer");
        brCactusHammer = (new InfiToolHammer(cactusHammerID + 9, cLevel, (int)((float)cDur * brMod), cSpeed, cDam, cType, brType)).setItemName("brCactusHammer");
        wFlintHammer = (new InfiToolHammer(flintHammerID + 0, fLevel, (int)((float)fDur * wMod), fSpeed, fDam, fType, wType)).setItemName("wFlintHammer");
        stFlintHammer = (new InfiToolHammer(flintHammerID + 1, fLevel, (int)((float)fDur * stMod), fSpeed, fDam, fType, stType)).setItemName("stFlintHammer");
        iFlintHammer = (new InfiToolHammer(flintHammerID + 2, fLevel, (int)((float)fDur * iMod), fSpeed, fDam, fType, iType)).setItemName("iFlintHammer");
        gFlintHammer = (new InfiToolHammer(flintHammerID + 3, fLevel, (int)((float)fDur * gMod), fSpeed, fDam, fType, gType)).setItemName("gFlintHammer");
        oFlintHammer = (new InfiToolHammer(flintHammerID + 4, fLevel, (int)((float)fDur * oMod), fSpeed, fDam, fType, oType)).setItemName("oFlintHammer");
        saFlintHammer = (new InfiToolHammer(flintHammerID + 5, fLevel, (int)((float)fDur * saMod), fSpeed, fDam, fType, saType)).setItemName("saFlintHammer");
        bFlintHammer = (new InfiToolHammer(flintHammerID + 6, fLevel, (int)((float)fDur * bMod), fSpeed, fDam, fType, bType)).setItemName("bFlintHammer");
        nFlintHammer = (new InfiToolHammer(flintHammerID + 7, fLevel, (int)((float)fDur * nMod), fSpeed, fDam, fType, nType)).setItemName("nFlintHammer");
        iceFlintHammer = (new InfiToolHammer(flintHammerID + 8, fLevel, (int)((float)fDur * wMod), fSpeed, fDam, fType, iceType)).setItemName("iceFlintHammer");
        sFlintHammer = (new InfiToolHammer(flintHammerID + 9, fLevel, (int)((float)fDur * sMod), fSpeed, fDam, fType, sType)).setItemName("sFlintHammer");
        cFlintHammer = (new InfiToolHammer(flintHammerID + 10, fLevel, (int)((float)fDur * cMod), fSpeed, fDam, fType, cType)).setItemName("cFlintHammer");
        fFlintHammer = (new InfiToolHammer(flintHammerID + 11, fLevel, (int)((float)fDur * fMod), fSpeed, fDam, fType, fType)).setItemName("fFlintHammer");
        brFlintHammer = (new InfiToolHammer(flintHammerID + 12, fLevel, (int)((float)fDur * brMod), fSpeed, fDam, fType, brType)).setItemName("brFlintHammer");
        blFlintHammer = (new InfiToolHammer(flintHammerID + 13, fLevel, (int)((float)fDur * blMod), fSpeed, fDam, fType, blType)).setItemName("blFlintHammer");
        wBrickHammer = (new InfiToolHammer(brickHammerID + 0, brLevel, (int)((float)brDur * wMod), brSpeed, brDam, brType, wType)).setItemName("wBrickHammer");
        stBrickHammer = (new InfiToolHammer(brickHammerID + 1, brLevel, (int)((float)brDur * stMod), brSpeed, brDam, brType, stType)).setItemName("stBrickHammer");
        saBrickHammer = (new InfiToolHammer(brickHammerID + 2, brLevel, (int)((float)brDur * saMod), brSpeed, brDam, brType, saType)).setItemName("saBrickHammer");
        bBrickHammer = (new InfiToolHammer(brickHammerID + 3, brLevel, (int)((float)brDur * bMod), brSpeed, brDam, brType, bType)).setItemName("bBrickHammer");
        pBrickHammer = (new InfiToolHammer(brickHammerID + 4, brLevel, (int)((float)brDur * pMod), brSpeed, brDam, brType, pType)).setItemName("pBrickHammer");
        nBrickHammer = (new InfiToolHammer(brickHammerID + 5, brLevel, (int)((float)brDur * nMod), brSpeed, brDam, brType, nType)).setItemName("nBrickHammer");
        iceBrickHammer = (new InfiToolHammer(brickHammerID + 6, brLevel, (int)((float)brDur * iceMod), brSpeed, brDam, brType, iceType)).setItemName("iceBrickHammer");
        sBrickHammer = (new InfiToolHammer(brickHammerID + 7, brLevel, (int)((float)brDur * sMod), brSpeed, brDam, brType, sType)).setItemName("sBrickHammer");
        cBrickHammer = (new InfiToolHammer(brickHammerID + 8, brLevel, (int)((float)brDur * cMod), brSpeed, brDam, brType, cType)).setItemName("cBrickHammer");
        fBrickHammer = (new InfiToolHammer(brickHammerID + 9, brLevel, (int)((float)brDur * fMod), brSpeed, brDam, brType, fType)).setItemName("fBrickHammer");
        brBrickHammer = (new InfiToolHammer(brickHammerID + 10, brLevel, (int)((float)brDur * brMod), brSpeed, brDam, brType, brType)).setItemName("brBrickHammer");
        dBlazeHammer = (new InfiToolHammer(blazeHammerID + 0, blLevel, (int)((float)blDur * dMod), blSpeed, blDam, blType, dType)).setItemName("wBlazeHammer");
        rBlazeHammer = (new InfiToolHammer(blazeHammerID + 1, blLevel, (int)((float)blDur * rMod), blSpeed, blDam, blType, rType)).setItemName("rBlazeHammer");
        bBlazeHammer = (new InfiToolHammer(blazeHammerID + 2, blLevel, (int)((float)blDur * bMod), blSpeed, blDam, blType, bType)).setItemName("bBlazeHammer");
        nBlazeHammer = (new InfiToolHammer(blazeHammerID + 3, blLevel, (int)((float)blDur * nMod), blSpeed, blDam, blType, nType)).setItemName("nBlazeHammer");
        glBlazeHammer = (new InfiToolHammer(blazeHammerID + 4, blLevel, (int)((float)blDur * glMod), blSpeed, blDam, blType, glType)).setItemName("glBlazeHammer");
        lBlazeHammer = (new InfiToolHammer(blazeHammerID + 5, blLevel, (int)((float)blDur * lMod), blSpeed, blDam, blType, lType)).setItemName("lBlazeHammer");
        fBlazeHammer = (new InfiToolHammer(blazeHammerID + 6, blLevel, (int)((float)blDur * fMod), blSpeed, blDam, blType, fType)).setItemName("fBlazeHammer");
        blBlazeHammer = (new InfiToolHammer(blazeHammerID + 7, blLevel, (int)((float)blDur * bMod), blSpeed, blDam, blType, bType)).setItemName("blBlazeHammer");
    }
}
