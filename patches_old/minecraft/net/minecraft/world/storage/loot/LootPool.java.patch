--- a/net/minecraft/world/storage/loot/LootPool.java
+++ b/net/minecraft/world/storage/loot/LootPool.java
@@ -20,14 +20,16 @@
 import org.apache.commons.lang3.ArrayUtils;
 
 public class LootPool {
-   private final ILootGenerator[] field_186453_a;
-   private final ILootCondition[] field_186454_b;
+   private final String name;
+   private final List<ILootGenerator> field_186453_a;
+   private final List<ILootCondition> field_186454_b;
    private RandomValueRange field_186455_c;
    private RandomValueRange field_186456_d;
 
-   public LootPool(ILootGenerator[] p_i46643_1_, ILootCondition[] p_i46643_2_, RandomValueRange p_i46643_3_, RandomValueRange p_i46643_4_) {
-      this.field_186453_a = p_i46643_1_;
-      this.field_186454_b = p_i46643_2_;
+   public LootPool(ILootGenerator[] p_i46643_1_, ILootCondition[] p_i46643_2_, RandomValueRange p_i46643_3_, RandomValueRange p_i46643_4_, String name) {
+      this.name = name;
+      this.field_186453_a = Lists.newArrayList(p_i46643_1_);
+      this.field_186454_b = Lists.newArrayList(p_i46643_2_);
       this.field_186455_c = p_i46643_3_;
       this.field_186456_d = p_i46643_4_;
    }
@@ -61,7 +63,7 @@
    }
 
    public void func_186449_b(Collection<ItemStack> p_186449_1_, Random p_186449_2_, LootContext p_186449_3_) {
-      if (LootConditionManager.func_186638_a(this.field_186454_b, p_186449_2_, p_186449_3_)) {
+      if (LootConditionManager.testAllConditions(this.field_186454_b, p_186449_2_, p_186449_3_)) {
          int i = this.field_186455_c.func_186511_a(p_186449_2_) + MathHelper.func_76141_d(this.field_186456_d.func_186507_b(p_186449_2_) * p_186449_3_.func_186491_f());
 
          for(int j = 0; j < i; ++j) {
@@ -71,6 +73,43 @@
       }
    }
 
+
+
+   //======================== FORGE START =============================================
+   private boolean isFrozen = false;
+   public void freeze() { this.isFrozen = true; }
+   public boolean isFrozen(){ return this.isFrozen; }
+   private void checkFrozen() {
+      if (this.isFrozen())
+         throw new RuntimeException("Attempted to modify LootPool after being frozen!");
+   }
+   public String getName(){ return this.name; }
+   public RandomValueRange getRolls()      { return this.field_186455_c; }
+   public RandomValueRange getBonusRolls() { return this.field_186456_d; }
+   public void setRolls     (RandomValueRange v){ checkFrozen(); this.field_186455_c = v; }
+   public void setBonusRolls(RandomValueRange v){ checkFrozen(); this.field_186456_d = v; }
+   public ILootGenerator getEntry(String name) {
+      return field_186453_a.stream().filter(e -> name.equals(e.getEntryName())).findFirst().orElse(null);
+   }
+   public ILootGenerator removeEntry(String name) {
+      checkFrozen();
+      for (ILootGenerator entry : this.field_186453_a) {
+         if (name.equals(entry.getEntryName())) {
+            this.field_186453_a.remove(entry);
+            return entry;
+         }
+      }
+      return null;
+   }
+   public void addEntry(ILootGenerator entry) {
+      checkFrozen();
+      if (field_186453_a.stream().anyMatch(e -> e == entry || e.getEntryName().equals(entry.getEntryName())))
+         throw new RuntimeException("Attempted to add a duplicate entry to pool: " + entry.getEntryName());
+      this.field_186453_a.add(entry);
+   }
+   //TODO: Allow modifications of conditions? If so need a way to uniquely identify them.
+   //======================== FORGE END ===============================================
+
    public static class Serializer implements JsonDeserializer<LootPool>, JsonSerializer<LootPool> {
       public LootPool deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_) throws JsonParseException {
          JsonObject jsonobject = JSONUtils.func_151210_l(p_deserialize_1_, "loot pool");
@@ -78,18 +117,20 @@
          ILootCondition[] alootcondition = JSONUtils.func_188177_a(jsonobject, "conditions", new ILootCondition[0], p_deserialize_3_, ILootCondition[].class);
          RandomValueRange randomvaluerange = JSONUtils.func_188174_a(jsonobject, "rolls", p_deserialize_3_, RandomValueRange.class);
          RandomValueRange randomvaluerange1 = JSONUtils.func_188177_a(jsonobject, "bonus_rolls", new RandomValueRange(0.0F, 0.0F), p_deserialize_3_, RandomValueRange.class);
-         return new LootPool(alootentry, alootcondition, randomvaluerange, randomvaluerange1);
+         return new LootPool(alootentry, alootcondition, randomvaluerange, randomvaluerange1, net.minecraftforge.common.ForgeHooks.readPoolName(jsonobject));
       }
 
       public JsonElement serialize(LootPool p_serialize_1_, Type p_serialize_2_, JsonSerializationContext p_serialize_3_) {
          JsonObject jsonobject = new JsonObject();
+         if (p_serialize_1_.name != null && !p_serialize_1_.name.startsWith("custom#"))
+            jsonobject.add("name", p_serialize_3_.serialize(p_serialize_1_.name));
          jsonobject.add("entries", p_serialize_3_.serialize(p_serialize_1_.field_186453_a));
          jsonobject.add("rolls", p_serialize_3_.serialize(p_serialize_1_.field_186455_c));
          if (p_serialize_1_.field_186456_d.func_186509_a() != 0.0F && p_serialize_1_.field_186456_d.func_186512_b() != 0.0F) {
             jsonobject.add("bonus_rolls", p_serialize_3_.serialize(p_serialize_1_.field_186456_d));
          }
 
-         if (!ArrayUtils.isEmpty((Object[])p_serialize_1_.field_186454_b)) {
+         if (!p_serialize_1_.field_186454_b.isEmpty()) {
             jsonobject.add("conditions", p_serialize_3_.serialize(p_serialize_1_.field_186454_b));
          }
 
