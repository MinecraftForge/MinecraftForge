--- a/net/minecraft/world/storage/loot/LootTable.java
+++ b/net/minecraft/world/storage/loot/LootTable.java
@@ -23,10 +23,10 @@
 public class LootTable {
    private static final Logger field_186465_b = LogManager.getLogger();
    public static final LootTable field_186464_a = new LootTable(new LootPool[0]);
-   private final LootPool[] field_186466_c;
+   private final List<LootPool> field_186466_c;
 
    public LootTable(LootPool[] p_i46641_1_) {
-      this.field_186466_c = p_i46641_1_;
+      this.field_186466_c = Lists.newArrayList(p_i46641_1_);
    }
 
    public List<ItemStack> func_186462_a(Random p_186462_1_, LootContext p_186462_2_) {
@@ -112,6 +112,41 @@
       return list;
    }
 
+   //======================== FORGE START =============================================
+   private boolean isFrozen = false;
+   public void freeze() {
+      this.isFrozen = true;
+      this.field_186466_c.forEach(LootPool::freeze);
+   }
+   public boolean isFrozen(){ return this.isFrozen; }
+   private void checkFrozen() {
+      if (this.isFrozen())
+         throw new RuntimeException("Attempted to modify LootTable after being finalized!");
+   }
+
+   public LootPool getPool(String name) {
+      return field_186466_c.stream().filter(e -> name.equals(e.getName())).findFirst().orElse(null);
+   }
+
+   public LootPool removePool(String name) {
+      checkFrozen();
+      for (LootPool pool : this.field_186466_c) {
+         if (name.equals(pool.getName())) {
+            this.field_186466_c.remove(pool);
+            return pool;
+         }
+      }
+      return null;
+   }
+
+   public void addPool(LootPool pool) {
+      checkFrozen();
+      if (field_186466_c.stream().anyMatch(e -> e == pool || e.getName().equals(pool.getName())))
+         throw new RuntimeException("Attempted to add a duplicate pool to loot table: " + pool.getName());
+      this.field_186466_c.add(pool);
+   }
+   //======================== FORGE END ===============================================
+
    public static class Serializer implements JsonDeserializer<LootTable>, JsonSerializer<LootTable> {
       public LootTable deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_) throws JsonParseException {
          JsonObject jsonobject = JSONUtils.func_151210_l(p_deserialize_1_, "loot table");
