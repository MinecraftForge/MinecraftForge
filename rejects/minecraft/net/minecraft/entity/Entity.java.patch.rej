++++ REJECTED PATCH 4
         IBlockState iblockstate = this.worldObj.getBlockState(blockpos);
         Block block = iblockstate.getBlock();
 
+        Boolean result = block.isEntityInsideMaterial(this.worldObj, blockpos, iblockstate, this, d0, materialIn, true);
+        if (result != null) return result;
+
         if (block.getMaterial() == materialIn)
         {
-            float f = BlockLiquid.getLiquidHeightPercent(iblockstate.getBlock().getMetaFromState(iblockstate)) - 0.11111111F;
-            float f1 = (float)(blockpos.getY() + 1) - f;
-            boolean flag = d0 < (double)f1;
-            return !flag && this instanceof EntityPlayer ? false : flag;
+            return net.minecraftforge.common.ForgeHooks.isInsideOfMaterial(materialIn, this, blockpos);
         }
         else
         {
++++ END PATCH
++++ REJECTED PATCH 6
             this.setAlwaysRenderNameTag(tagCompund.getBoolean("CustomNameVisible"));
             this.cmdResultStats.readStatsFromNBT(tagCompund);
             this.setSilent(tagCompund.getBoolean("Silent"));
+
+            if (tagCompund.hasKey("ForgeData")) customEntityData = tagCompund.getCompoundTag("ForgeData");
+            for (String identifier : this.extendedProperties.keySet())
+            {
+                try
+                {
+                    net.minecraftforge.common.IExtendedEntityProperties props = this.extendedProperties.get(identifier);
+                    props.loadNBTData(tagCompund);
+                }
+                catch (Throwable t)
+                {
+                    net.minecraftforge.fml.common.FMLLog.severe("Failed to load extended properties for %s.  This is a mod issue.", identifier);
+                    t.printStackTrace();
+                }
+            }
+
+            //Rawr, legacy code, Vanilla added a UUID, keep this so older maps will convert properly TODO: Remove in 1.9
+            if (tagCompund.hasKey("PersistentIDMSB") && tagCompund.hasKey("PersistentIDLSB"))
+            {
+                this.entityUniqueID = new UUID(tagCompund.getLong("PersistentIDMSB"), tagCompund.getLong("PersistentIDLSB"));
+            }
+
+            if (this.capabilities != null && tagCompund.hasKey("ForgeCaps")) this.capabilities.deserializeNBT(tagCompund.getCompoundTag("ForgeCaps"));
+
             this.readEntityFromNBT(tagCompund);
 
             if (this.shouldSetPosAfterLoading())
++++ END PATCH
++++ REJECTED PATCH 8
 
     public void mountEntity(Entity entityIn)
     {
+        if(!(this instanceof EntityLivingBase) && !net.minecraftforge.event.ForgeEventFactory.canMountEntity(this, entityIn, true)){ return; }
         this.entityRiderPitchDelta = 0.0D;
         this.entityRiderYawDelta = 0.0D;
 
++++ END PATCH
